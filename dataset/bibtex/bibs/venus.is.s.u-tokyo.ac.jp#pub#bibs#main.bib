%L ANSI83a
%K plang ada
%Q American National Standards Institute, Inc.
%T The Programming Language Ada Reference Manual
%S LNCS 155
%E G. Goos and J. Hartmanis
%I Springer-Verlag
%D 1983

%L Aasa88a
%K patterns olit binder(patterns)
%A Annika Aasa
%A Kent Petersson
%A Dan Synek
%T Concrete Syntax for Data Objects in Functional Languages
%B Proceedings of the 1988 ACM Conference on Lisp
   and Functional Programming
%C Snowbird, Utah
%D 1988
%P 96-105

%L Abad90a
%K misc lambda fp binder (shelf)
%A Martin Abadi
%A Luca Cardelli
%A Pierre-Louis Curien
%A Jean-Jacques L\'evy
%T Explicit Substitutions
%R Technical Report 54
%I DEC Systems Research Center
%C Palo Alto, California
%D Feb. 6, 1990

%L Abad90b
%K temporal-logic tla binder (shelf)
%A Martin Abadi
%T An Axiomatization of Lamport's Temporal Logic of Actions
%R Technical Report 65
%I DEC Systems Research Center
%C Palo Alto, California
%D Oct. 1990

%L Abad92a
%K linear-logic binder (shelf)
%A Martin Abadi
%A Gordon D. Plotkin
%T A Logical View of Composition
%R Technical Report 86
%I DEC Systems Research Center
%C Palo Alto, California
%D May 1992

%L Abbo84a
%K concurrency other real-time scheduling
%A C. Abbott
%T Intervention Schedules for Real-Time Programming
%J IEEE Transactions on Software Engineering
%V SE-10
%N 3
%D May 1984
%P 268-274

%L Abda86a
%K olit-appl views smalltalk oopsla86
%A S. Kamal Abdali
%A Guy W. Cherry
%A Neil Soiffer
%T A Smalltalk System for Algebraic Manipulation
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 277-283

%L Abit89a
%K olit-oodb binder
%A Serge Abetiboul
%A Paris C. Kanellakis
%T Object Identity as Query Language Primitive
%R Report no. 1022
%I INRIA
%D April 1989
%O to appear, JACM

%L Abra87a
%K pcalc equivalence binder(conc)
%A Samson Abramsky
%T Observation Equivalence as a Testing Equivalence
%J Theoretical Computer Science
%V 53
%I North-Holland
%D 1987
%P 225-241

%L Abra90a
%K misc lambda fp lazy binder(fp)
%A Samson Abramsky
%T The Lazy Lambda Calculus
%B Research Topics in Functional Programming
%E D.A. Turner
%I Addison Wesley
%D 1990
%P 65-116

%L Abra90b
%K concurrency linear logic binder (shelf)
%A Samson Abramsky
%T Computational Interpretations of Linear Logic
%R Research Report DOC 90/20
%I Imperial College
%C London
%D Oct. 1990

%L Abra91a
%K pcalc mobility (uwe)
%% UNPUBLISHED
%A Samson Abramsky
%T Proofs as Processes
%D 1991
%O Vortrag auf dem International Symposium on Theoretical Computer
   Science in honor of Boris Trakhtenbrot Tel-Aviv

%L Abra92a
%K pcalc mobility (uwe)
%% UNPUBLISHED
%A Samson Abramsky
%T An Introduction to ``On the \pi-Calculus and Linear Logic''
   by Gianluigi Bellin and Philip Scott
%D 1992
%O Following Lecture Material on ``Proofs and Processes''

%L Acha93a
%K olit ecoop93
%A Bruno Achauer
%T Implementation of Distributed Trellis
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 103-117
%X DOWL is an extension of the Trellis language supporting
   distribution.  It allows programmers to transparently invoke
   operations on remote objects and to move objects between the nodes
   of a distributed system.  A few primitives permit the programmer to
   take full advantage of distribution and to tune performance; most
   notably by restricting the mobility of objects and specifying which
   objects should move together.  This paper describes the
   implementation of these extensions: the object format, communication
   system and the mechanism to invoke operations on remote objects.
   Performance figures are also presented.

%L Adam89a
%K olit oopsla89
%A Sam S. Adams
%A Abdul K. Nabi
%T Neural Agents -- A Frame of Mind
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 139-150

%L Ader90a
%K olit-ithaca chloe cool scripting vista
%A Martin Ader
%A Oscar Nierstrasz
%A Stephen McMahon
%A Gerhard M\:uller
%A Anna-Kristin Pr\:ofrock
%T The ITHACA Technology: A Landscape for
   Object-Oriented Application Development
%B Proceedings, Esprit 1990 Conference
%I Kluwer Academic Publishers
%C Dordrecht, NL
%D 1990
%P 31-51
%X The ITHACA environment offers an application support system which
   incorporates advanced technologies in the fields of object-oriented
   programming in general and programming languages, database
   technologies, user interface systems and software development tools in
   particular. ITHACA provides an integrated and open-ended toolkit which
   exploits the benefits of object-oriented technologies for promoting
   reusability, tailorability and integratability, factors which are
   crucial for ensuring software quality and productivity. Industrial
   applications from the fields of office automation, public
   administration, finance/insurance and chemical engineering are
   developed in parallel and used to evaluate the suitability of the
   system.
%% JOURNAL

%L Ages93a
%K olit ecoop93
%A Ole Agesen
%A Jens Palsberg
%A Michael I. Schwartzbach
%T Type Inference of SELF: Analysis of Objects with Dynamic and
   Multiple Inheritance
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 247-267
%X We have designed and implemented a type inference algorithm for the
   full Self language. The algorithm can guarantee the safety and
   disambiguity of message sends, and provide useful information for
   browsers and optimizing compilers. Self features objects with
   dynamic inheritance. This construct has until now been considered
   incompatible with type inference because it allows the inheritance
   graph to change dynamically. Our algorithm handles this by deriving
   and solving type constraints that simultaneously define supersets of
   both the possible values of expressions and of the possible
   inheritance graphs. The apparent circularity is resolved by
   computing a global fixed-point, in polynomial time.  The algorithm
   has been implemented and can successfully handle the Self benchmark
   programs, which exist in the "standard Self world" of more than
   40,000 lines of code.

%L Agha85a
%K concurrency messages actors
%A Gul Agha
%T A Message-Passing Paradigm for Object Management
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 75-82

%L Agha86a
%K olit-obc concurrency messages actors oopws86
%A Gul Agha
%T An Overview of Actor Languages
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 58-67

%L Agha86b
%K olit-obc semantics obib(obcp)
%A Gul Agha
%T ACTORS: A Model of Concurrent Computation in Distributed Systems
%I MIT Press
%C Cambridge, Massachusetts
%D 1986

%L Agra91a
%K types olit oopsla91
%A Rakesh Agrawal
%A Linda G. DeMichiel
%A Bruce G. Lindsay
%T Static Type Checking of Multi-Methods
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 113-128

%L Ahls83a
%K oislit survey
%A Matts Ahls\'en
%A Anders Bj\:ornerstedt
%A Stefan Britts
%A Christer Hult\'en
%A Lars S\:oderlund
%T A Survey of Office Information Systems
%R Syslab, WP 44
%I University of Stockholm
%D March 15, 1983

%L Ahls84a
%K olit-oopl opal ois
%A Matts Ahls\'en
%A Anders Bj\:ornerstedt
%A Stefan Britts
%A Christer Hult\'en
%A Lars S\:oderlund
%T An Architecture for Object Management in OIS
%J ACM TOOIS
%V 2
%N 3
%D July 1984
%P 173-196

%L Ahls84b
%K types other
%A Matts Ahls\'en
%A Anders Bj\:ornerstedt
%A Stefan Britts
%A Christer Hult\'en
%A Lars S\:oderlund
%T Making Type Changes Transparent
%R Syslab report #22
%I University of Stockholm
%D Feb 1984

%L Ahls85a
%K olit-oopl opal
%A M. Ahls\:en
%A Anders Bj\:ornerstedt
%A C. Hult\:en
%T OPAL: An Object-Based System for Application Development
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 31-40

%L Aho72a
%K compiler book
%A Alfred V. Aho
%A Jeffrey D. Ullman
%T The Theory of Parsing, Translation and Compiling
%I Prentice Hall
%D 1972

%L Aho74a
%K misc algorithms book
%A Alfred V. Aho
%A J.E. Hopcroft
%A Jeffrey D. Ullman
%T The Design and Analysis of Computer Algorithms
%I Addison Wesley
%D 1974

%L Aho75a
%K patterns unix searching
%A Alfred V. Aho
%A M.J. Corasick
%T Fast Pattern Matching: An Aid to Bibliographic Search
%J CACM
%V 18
%N 6
%D June 1975
%P 333-340

%L Aho78a
%K patterns unix awk searching
%A Alfred V. Aho
%A B. Kernighan
%A P. Weinberger
%T Awk -- A Pattern Scanning and Processing Language
%R Report
%I Bell Telephone Laboratories
%D Sept 1978

%L Aho86a
%K compiler book binder (shelf)
%A Alfred V. Aho
%A Ravi Sethi
%A Jeffrey D. Ullman
%T Compilers: Principles, Techniques and Tools
%I Addison-Wesley, Inc.
%D 1986

%L Ahuj86a
%K concurrency linda
%A S. Ahuja
%A N. Carriero
%A D. Gelernter
%T Linda and Friends
%J IEEE Computer
%V 19
%N 8
%D August 1986
%P 26-34

%L Ait91a
%K plang life olit plilp91 binder
%A Hassan A\:it-Kaci
%A Andreas Podelski
%T Towards a Meaning of LIFE
%B Proceedings PLILP '91
%E J. Maluszynski and M. Wirsing
%S LNCS 528
%I Springer-Verlag
%C Passau, Germany
%D Aug. 1991
%% D.1.6 PRO
%P 255-274

%L Aksi88a
%K olit-oopl sina oopsla88
%A Mehmet Aksit
%A Anand Tripathi
%T Data Abstraction Mechanisms in SINA/ST
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 267-275

%L Aksi89a
%K olit-obcl sina binder (shelf)
%A Mehmet Aksit
%T On the Design of the Object-Oriented Language Sina
%R Ph.D. thesis
%I University of Twente
%D 1989

%L Aksi92a
%K olit-oopl sina ecoop92
%A Mehmet Aksit
%A Lodewijk Bergmans
%A Sinan Vural
%T An Object-Oriented Language-Database Integration Model:
   The Composition-Filters Approach
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 372-395

%L Aksi92b
%K olit oopsla92
%A Mehmet Aksit
%A Lodewijk Bergmans
%T Obstacles in Object-Oriented Software Development
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 341-358

%L Alab88a
%K olit oopsla88
%A Bruno Alabiso
%T Transformation of Data Flow Analysis Models to Object-Oriented Design
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 335-354

%L Alba83b
%K olit-oopl galileo
%A Antonio Albano
%A R. Orsini
%T Dialogo: An Interactive Environment for Conceptual Design in Galileo
%B Methodology and Tools for Database Design
%E S. Ceri
%I North-Holland
%D 1983

%L Alba85a
%K olit-oopl galileo
%A Antonio Albano
%A Luca Cardelli
%A R. Orsini
%T Galileo: A Strongly-Typed, Interactive Conceptual Language
%J ACM TODS
%V 10
%N 2
%D June 1985
%P 230-260

%L Alen91a
%K olit ecoop91
%A Antonio J. Alencar
%A Joseph A. Goguen
%T OOZE: An Object-Oriented Z Environment
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 180-199

%L Alex77a
%K patterns
%A Christopher Alexander
%A Sara Ishakawa
%A Murray Silverstein
%T A Pattern Language
%I Oxford University Press
%C New York
%D 1977

%L Alex87a
%K olit oopsla87
%A James H. Alexander
%T Painless Panes for Smalltalk Windows
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 287-294

%L Alle86a
%K types olit oopsla86
%A David McAllester
%A Ramin Zabih
%T Boolean Classes
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 417-423

%L Alma89a
%K olit oopsla89
%A Jay Almarode
%T Rule-Based Delegation for Prototypes
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 363-370

%L Alma91a
%K olit ecoop91
%A Jay Almarode
%T Issues in the Design and Implementation of a Schema Designer for an OODBMS
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 200-218

%L Alme80a
%K olit memory
%A Guy T. Almes
%T Garbage Collection in an Object-Oriented System
%R Ph.D. thesis
%I Carnegie Mellon University
%C Pittsburgh, PA
%D 1980

%L Aloi92a
%K olit ecoop92
%A Nicola Aloia
%A Svetlana Barneva
%A Fausto Rabitti
%T Supporting Physical Independence in an Object Database Server
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 396-412

%L Ambl91a
%K pcalc mobility (uwe)
%% TECHREPORT
%A Simon Ambler
%T A de Bruijn notation for the \pi-calculus
%I University of London
%D 1991

%L Amer86a
%K olit-obc pool
%A Pierre America
%T Rationale for the design of POOL
%R Doc. No. 0053
%I Philips Research Laboratories
%C Eindhoven, The Netherlands
%D January 8, 1986

%L Amer86b
%K olit-obc pool
%A Pierre America
%T Definition of the programming language POOL-T
%R Doc. No. 0091
%I Philips Research Laboratories
%C Eindhoven, The Netherlands
%D October 6, 1986

%L Amer86c
%K olit-obcl pool concurrency semantics binder(conc) popl86
%A Pierre America
%A Jaco de Bakker
%A Joost N. Kok
%A Jan Rutten
%T Operational Semantics of a Parallel Object-Oriented Language
%B Proceedings POPL '86
%C St. Petersburg Beach, Florida
%D Jan 13-15, 1986
%P 194-208

%L Amer87a
%K olit-obcl pool oocp87
%A Pierre America
%T POOL-T: A Parallel Object-Oriented Language
%B Object-Oriented Concurrent Programming
%E A. Yonezawa, M. Tokoro
%I MIT Press
%C Cambridge, Massachusetts
%D 1987
%P 199-220

%L Amer87b
%K concurrency semantics binder
%A Pierre America
%A Jaco W. de Bakker
%T Designing Equivalent Semantic Models for Process Creation
%R CS-R8732
%I CWI
%C Amsterdam
%D July 1987

%L Amer87c
%K olit-obcl inheritance types pool ecoop87
%A Pierre America
%T Inheritance and Subtyping in a Parallel Object-Oriented Language
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 234-242

%L Amer89a
%K olit-obcl pool semantics
%A Pierre America
%A Jaco de Bakker
%A J. Kok
%A Jan Rutten
%T Denotational Semantics of a Parallel Object-Oriented Language
%J Information and Computation
%V 83
%N 2
%D Nov 1989
%P 152-205

%L Amer89b
%K olit-obcl pool semantics
%A Pierre America
%A Jaco de Bakker
%A Jan Rutten
%T A Parallel Object-Oriented Language: Design and Semantic Foundations
%R Ph.D. theses
%I CWI, Free University of Amsterdam
%D 1989

%L Amer90a
%K olit-obcl pool oopsla90 ecoop90
%A Pierre America
%T A Parallel Object-Oriented Language with Inheritance and Subtyping
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 161-168

%L Amer90b
%K olit-obcl pool-i binder
%A Pierre America
%T Designing an Object-Oriented Programming Language with Behavioural Subtyping
%B Proc. REX/FOOLS Workshop
%C Noordwijkerhout
%D June 1990
%O to appear

%L Amer90c
%K olit-obcl pool binder
%A Pierre America
%A Jan Rutten
%T A Layered Semantics for a Parallel Object-Oriented Language
%B Proc. REX/FOOLS Workshop
%C Noordwijkerhout
%D June 1990
%O to appear

%L Amer92a
%K olit-obc obc91
%A Pierre America
%T Formal Techniques for Parallel Object-Oriented Languages
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 119-140

%L Ande86a
%K olit-appl flamingo ui oopsla86
%A David B. Anderson
%T Experience with Flamingo: A Distributed, Object-Oriented
   User Interface System
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 177-185

%L Ande92a
%K olit-obcl ellie joop
%A Birger Andersen
%T Ellie: a General, Fine-Grainedm First-Class, Object-Based Language
%J Journal of Object-Oriented Programming
%V 5
%N 2
%D May 1992
%P 35-42

%L Ande92b
%K olit ecoop92
%A Egil P. Andersen
%A Trygve Reenskaug
%T System Design by Composing Structures of Interacting Objects
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 133-152

%L Ande92c
%K types olit binder
%A Egil P. Andersen
%T Type Conformance of Active Objects
%R preliminary draft
%I University of Oslo
%D 1992

%L Andr81a
%K concurrency
%A Gregory R. Andrews
%T Synchronizing Resources
%J ACM TOPLAS
%V 3
%N 4
%D Oct 1981
%P 405-430

%L Andr83a
%K concurrency binder(conc)
%A Gregory R. Andrews
%A Fred B. Schneider
%T Concepts and Notations for Concurrent Programming
%J ACM Computing Surveys
%V 15
%N 1
%D March 1983
%P 3-43

%L Andr87a
%K olit-oopl oodb vbase oopsla87
%A Timothy Andrews
%A Craig Harris
%T Combining Language and Database Advances in an Object-Oriented
   Development Environment
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 430-440

%L Andr89a
%K olit-obcl lo binder
%A Jean-Marc Andreoli
%A Remo Pareschi
%T Logic Programming with Sequent Systems -- A Linear Logic Approach
%B Proceedings of the Workshop on Extensions of Logic Programming
%S LNCS
%I Springer-Verlag
%D 1989

%L Andr90a
%K olit-obcl lo oopsla90 ecoop90
%A Jean-Marc Andreoli
%A Remo Pareschi
%T LO and Behold! Concurrent Structured Processes
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 44-56

%L Andr90b
%K olit-obcl lo concurrency binder
%A Jean-Marc Andreoli
%A Remo Pareschi
%T Linear Objects: Logical Processes with Built-In Inheritance
%B Proceedings 7th ICLP
%C Jerusalem
%D 1990

%L Andr91a
%K olit-obcl lo concurrency binder
%A Jean-Marc Andreoli
%A Remo Pareschi
%T Linear Objects: Logical Processes with Built-In Inheritance
%J New Generation Computing
%V 9
%I OHMSHA and Springer-Verlag
%D 1991
%P 445-473

%L Andr91b
%K olit oopsla91
%A Jean-Marc Andreoli
%A Remo Pareschi
%T Communication as Fair Distribution of Knowledge
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 212-229

%L Andr92a
%K olit-obc obc91
%A Jean-Marc Andreoli
%A Remo Pareschi
%A Marc Bourgois
%T Dynamic Programming as Multiagent Programming
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 163-176

%L Andr92b
%K concurrency binder
%A Jean-Marc Andreoli
%A Paolo Ciancarini
%A Remo Pareschi
%T Interaction Abstract Machines
%B Research Directions in Object-Based Concurrency
%E G. Agha, P. Wegner and A. Yonezawa
%D 1993
%O to appear

%L Andr92c
%K concurrency binder
%A Jean-Marc Andreoli
%A Lone Leth
%A Remo Pareschi
%A Bent Thomsen
%T On the Chemistry of Broadcasting
%R draft
%I ECRC, Munich
%D 1992

%L Andr92d
%K olit oopsla92
%A Pascal Andr\'e
%A Jean-Claude Royer
%T Optimizing Method Search with Lookup Caches and Incremental Coloring
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 110-126

%L Andr92e
%K pcalc mobility (uwe)
%% BOOK
%A Michael Andres
%A Anke Richter
%T Beschreibung `mobiler Prozesse' mit Graphgrammatiken
%I Studienarbeit, Universit\:at Erlangen
%D 1992

%L Andr93a
%K concurrency binder tapsoft93
%A Jean-Marc Andreoli
%A Lone Leth
%A Remo Pareschi
%A Bent Thomsen
%T True Concurrency Semantics for a Linear Logic Programming Language
   with Broadcast Communication
%B Proceedings TAPSOFT '93
%S LNCS
%I Springer-Verlag
%D 1993
%O to appear

%L Appe92a
%K compiler sml binder (shelf)
%A Andrew W. Appel
%T Compiling with Continuations
%I Cambridge University Press
%D 1992

%L Arap88a
%K olit osb chloe aoe88
%A Costas Arapis
%A Gerti Kappel
%T An Object Software Base
%R Active Object Environments
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1988
%P 32-50

%L Arap89a
%K types olit chloe ood89
%A Costas Arapis
%T Type Conversion and Enhancement in Object-Oriented Systems
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 191-205

%L Arap90a
%K olit chloe-ftp om90
%A Costas Arapis
%T Specifying Object Life-Cycles
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 197-225
%X In this paper we propose a number of extensions for object-oriented
   models in order to describe dynamic aspects of applications. These
   extensions enable the specification of objects that modify their
   behavior dynamically and the control of the dynamic evolution of
   objects by means of constraints expressed in the language of
   propositional temporal logic. We shall point out what differentiates
   our proposal from existing models and give examples to illustrate our
   arguments. We also present an algorithm for verifying consistency of
   specifications and which is suitable for an eventual implementation of
   our extensions.
%% ftp: cui.unige.ch:OO-articles/objectLifeCycle.ps.Z

%L Arap91a
%K olit chloe oc91
%A Costas Arapis
%T Specifying Object Interactions
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 303-322
%O Working paper
%X Techniques for specifying temporal properties of an application are
   presented, based on the assumption that static and behavioral
   properties have been described within some object-oriented model. These
   techniques enable the specification of the dynamic evolution of object
   behavior and the interactions of collections of cooperating objects.
   The underlying formalism used for our specifications is the language of
   first-order temporal logic. A method for checking consistency of
   specifications is also presented.

%L Arap91b
%K olit chloe
%A Costas Arapis
%T Temporal Specifications of Object Behaviour
%B Proceedings Third International Symposium on Mathematical
   Fundamentals of Database and Knowledge Base Systems
%E B. Thalheim, J. Demetrovics, H-D. Gerhardt
%S LNCS 495
%I Springer-Verlag
%C Rostock, Germany
%D May 1991
%% H.2.1
%P 308-324

%L Arap92a
%% CB11
%K olit chloe of92 chloe-book
%A Costas Arapis
%T Object Behavior Composition: A Temporal Logic Based Approach
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 79-107
%X A critical aspect of object-oriented design methodologies is what
   has been called the behavioral composition of objects. That is, how
   to reuse, combine and coordinate the functionality of existing
   objects when developing new objects. This paper presents an approach
   emphasizing the specification of temporal aspects of behavioral
   composition. Using propositional temporal logic as the underlying
   formalism of our approach, we show how to verify the consistency of
   specifications and how to monitor adherence to the specifications
   during run time.

%L Arap92b
%K olit chloe binder (shelf)
%A Costas Arapis
%T Dynamic Evolution of Object Behaviour and Object Cooperation
%R Ph.D. thesis (no. 2529)
%I Dept. of Computer Science, University of Geneva
%D 1992

%L Ashf93a
%K olit ecoop93
%A Colin Ashford
%T The OSI Managed-Object Model
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 185-196
%X The challenge facing the International Organization for
   Standardization (ISO) in the early eighties, in developing Open
   Systems Interconnection (OSI) protocol standards for network
   management, was to ensure that such protocols should, on the one
   hand, be standardised but, on the other, be capable of managing a
   myriad of resource types.  ISO met the challenge by developing a
   single internationally-standardised carriage protocol (CMIP), and
   tools to produce information models that would reflect the resources
   being managed. Such an approach makes it possible for the same
   carriage protocol to carry management messages for many different
   types of resources. In developing its information modelling tools
   and services, ISO has adopted an object-oriented approach: the
   resources to be managed are modelled as managed objects or
   aggregates of managed objects. The managed-object model is similar
   to popular object-oriented programming-language models but it
   includes a number of features that reflect the special requirements
   of network management. These requirements include: asynchronous
   operation, active resources, a distributed environment,
   compatibility, and feature optionality.  Fulfilling these
   requirements lead to the inclusion of concepts such as
   event-notification, multiple object-selection, packages, and
   allomorphism. The next generation of network-management standards
   will need to address the demands of large, multi-protocol, mutable
   networks.  How these requirements might affect the evolution of the
   managed-object model and services is considered.

%L Asse93a
%K olit ecoop93
%A Holger Assenmacher
%A Thomas Breitbach
%A Peter Buhler
%A Volker H\:ubsch
%A Reinhard Schwarz
%T PANDA -- Supporting Distributed Programming in C++
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 361-383
%X PANDA is a run-time package based
   on a very small operating system kernel which supports distributed
   applications written in C++. It provides powerful abstractions such
   as very efficient user-level threads, a uniform global address
   space, object and thread mobility, garbage collection, and
   persistent objects. The paper discusses the design rationales
   underlying the PANDA system. The fundamental features of PANDA are
   surveyed, and their implementation in the current prototype
   environment is outlined.

%L Aste84a
%K pcalc mobility (uwe)
%% ARTICLE
%A Egidio Astesiano
%A Elena Zucca
%T Parametric Channels via Label Expressions in CCS
%J Theoretical Computer Science
%V 33
%D 1984
%P 45-64

%L Astr76a
%K dblit
%A M.M. Astrahan, et al.
%T System R: Relational Approach to Database Management
%J ACM TODS
%V 1
%N 2
%D June 1976
%P 97-137

%L Atki86a
%K olit-oopl smalltalk oopsla86
%A Robert G. Atkinson
%T Hurricane: An Optimizing Compiler for Smalltalk
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 151-158

%L Atki90a
%K olit-obcl dragoon binder(shelf)
%A Colin Atkinson
%T An Object-Oriented Language for Software Reuse and Distribution
%R Ph.D. thesis
%I University of London
%D Feb. 1990

%L Atta85a
%K misc appl omega experts
%A Giuseppe Attardi
%A Andrea Corradini
%A M. De Cecco
%A M. Simi
%T Building Expert Systems with Omega
%R Technical Report ESP/85/2-3
%I Delphi
%C Milano, Italy
%D March 1985

%L Atta85b
%K olit-appl omega
%A Giuseppe Attardi
%A Andrea Corradini
%A M. De Cecco
%A M. Simi
%T The Omega Primer
%R Technical Report ESP/85/8
%I Delphi
%C Milano, Italy
%D May 1985

%L Atta89a
%K olit-oopl clos ecoop89
%A Giuseppe Attardi
%A Cinzia Bonini
%A Maria Rosario Boscotrecase
%A Tito Flagella
%A Mauro Gaspari
%T Metalevel Programming in CLOS
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 243-256

%L BYTE81a
%K olit-oopl smalltalk
%T Special issue on Smalltalk
%J Byte
%V 6
%N 8
%D Aug 1981

%L BYTE86a
%K olit survey special issue
%T Special issue on Object-Oriented Systems
%J Byte
%V 11
%N 8
%D Aug 1986

%L Bada86a
%K concurrency distribution deadlock
%A D.Z. Badal
%T The Distributed Deadlock Detection Algorithm
%J ACM Transactions on Computer Systems
%V 4
%N 4
%D Nov 1986
%P 320-337

%L Baet90a
%K pcalc acp regular processes
%A J.C.M. Baeten
%A Peter Weijland
%T Process Algebra
%I Cambridge University Press
%D 1990
%% 5.26 BAE

%L Baet90b
%K pcalc acp
%A J.C.M. Baeten
%T Applications of Process Algebra
%I Cambridge University Press
%D 1990
%% 5.26 APP
%% 5.26 APP

%L Bail89a
%K olit READ
%A S.C. Bailin
%T An Object-Oriented Requirements Specification Method
%C CACM
%V 32
%N 5
%D May 1989
%P 608-623

%L Bake78a
%K concurrency messages actors real-time casais
%A Henry G. Baker
%T Actor Systems for Real Time Computation
%R MIT/LCS/TR197
%I MIT lab for Computer science
%D 1978

%L Bake90a
%K types fp binder
%A Henry G. Baker
%T Unify and Conquer (Garbage, Updating, Aliasing ...) in Functional Languages
%B Proc. ACM Conf. on Lisp and Functional Programming
%C Nice, France
%D June 1990
%P 218-226

%L Bake90b
%K types fp binder
%A Henry G. Baker
%T The Nimble Type Inferencer for Common Lisp-84
%R Pre-publication draft
%I Nimble Computer Corp.
%D April 1990
%O submitted to ACM TOPLAS

%L Bal92a
%K olit-obcl orca obcp
%A H.E. Bal
%A M.F. Kaashoek
%A A.S. Tanenbaum
%T Orca: A Language for Parallel Programming of Distributed Systems
%J IEEE Transactions on Software Engineering
%V SE-18
%N 3
%D March 1992
%P 190-205

%L Ball86a
%K olit-oopl quicktalk smalltalk oopsla86
%A Mark B. Ballard
%A David Maier
%A Allen Wirfs-Brock
%T Quicktalk: A Smalltalk-80 Dialect for Defining Primitive Methods
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 140-150

%L Bals93a
%K olit ecoop93
%A Herman Balsters
%A Rolf A. de By
%A Roberto Zicari
%T Typed Sets as a Basis for Object-Oriented Database Schemas
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 161-184
%X The object-oriented data model TM is a language that is based on the
   formal theory of FM, a typed language with object-oriented features
   such as attributes and methods in the presence of subtyping. The
   general (typed) set constructs of FM allow one to deal with
   (database) constraints in TM.  The paper describes the theory of FM,
   and discusses the role that set expressions may play in conceptual
   database schemas.  Special attention is paid to the treatment of
   constraints, and a three-step specification approach is proposed.
   This approach results in the formal notion of database universe
   stated as an FM expression.

%L Bana90a
%K concurrency gamma binder
%A Jean-Pierre Ban\<atre
%A Daniel Le M\'etayer
%T The Gamma Model and Its Discipline of Programming
%J Science of Computer programming
%V 15
%I North-Holland
%D 1990
%P 55-77

%L Bana93a
%K olit ecoop93
%A Mike Banahan
%A L. Peter Deutsch
%A Boris Magnusson
%T Panel: Aims, Means, and Futures of Object-Oriented Languages:
   Programming Styles and Tool Support
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 529-531
%X Panelists will compare and assess the strengths and weaknesses of
   major object-oriented languages.  They will also comment on the
   possible development and use of those languages and their related
   tools.

%L Banc88a
%K olit-oodb obib(oodb)
%A Fran\,cois Bancilhon
%T Object-Oriented Database Systems
%B Proceedings 7th ACM SIGART/SIGMOD/SIGACT
   Symposium on Principles of Database Systems
%C Austin, Texas
%D March 1988

%L Bane87a
%K olit-oodb orion obib(oodb)
%A Jay Banerjee
%A Hong-Tai Chou
%A Jorge F. Garza
%A Won Kim
%A Darrell Woelk
%A Nat Ballou
%A H. Kim
%T Data Model Issues for Object-Oriented Applications
%J ACM TOOIS
%V 5
%N 1
%D Jan 1987
%P 3-26

%L Bane87b
%K olit-oodb orion schema evolution obib(oodb)
%A Jay Banerjee
%A Won Kim
%A H-J. Kim
%A H.F. Korth
%T Semantics and Implementation of Schema Evolution
   in Object-Oriented Databases
%J Proceedings ACM SIGMOD '87
%V 16
%N 3
%D Dec 1987
%P 311-322

%L Barb91a
%K olit-oopl ecoop91
%A Gilles Barbedette
%T Schema Modifications in the LISPO\_2 Persistent Object-Oriented Language
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 77-96

%L Barb91b
%K types tacs91
%A Franco Barbanera
%A Mariangiola Dezani-Ciancaglini
%T Intersection and Union Types
%B Proceedings Theoretical Aspects of Computer Science (TACS '91)
%E T. Ito and A.R. Meyer
%I Springer-Verlag
%S LNCS 526
%C Sendai, Japan
%D Sept. 1991
%% F.0.0 THE
%P 651-674

%L Bare84a
%K misc lambda calculus
%A H.P. Barendregt
%T The Lambda Calculus -- Its Syntax and Semantics
%S Studies in Logic and the Foundations of Mathematics
%V 103
%I North-Holland
%D 1984
%O Revised edition
%% 5.21 BAR

%L Barn80a
%K plang ada
%A J.G.P. Barnes
%T An Overview of Ada
%J Software -- Practice and Experience
%V 10
%D 1980
%P 851-887

%L Baro81a
%K olit-oodb casais
%A A.J. Baroody
%A D.J. De Witt
%T An Object-Oriented Approach to Database System Implementation
%J ACM TODS
%V 6
%N 4
%D Dec. 1981

%L Barr82a
%K olit-oopl taxis
%A John L. Barron
%T Dialogue and Process Design for Interactive Information
   Systems using Taxis
%J Proceedings ACM SIGOA
%C Philadelphia
%D June 1982
%P 12-20

%L Barr87a
%K olit oopsla87
%A Brian M. Barry
%A John R. Altoft
%A Dave A. Thomas
%A Mike Wilson
%T Using Objects To Design and Build Radar ESM Systems
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 192-201

%L Barr89a
%K olit oopsla89
%A Brian M. Barry
%T Prototyping a Real-Time Embedded System in Smalltalk
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 255-266

%L Bart86a
%K olit graphics
%A P.S. Barth
%T An object-oriented approach to graphical interfaces
%J ACM Transactions on Graphics
%V 5
%N 2
%D April 1986
%P 142-172

%L Beac82a
%K olit-appl paint messages thoth ui
%A RichardJ. Beach
%A J.C. Beatty
%A K.S. Booth
%A D.A. Plebon
%A Eugene Fiume
%T The Message is the Medium:
   Multiprocess Structuring of an Interactive Paint Program
%J Computer Graphics
%V 16
%N 3
%D July 1982
%P 277-287

%L Bear90a
%K olit oopsla90 ecoop90
%A Stephen Bear
%A Phillip Allen
%A Derek Coleman
%A Fiona Hayes
%T Graphical Specification of Object-Oriented Systems
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 28-37

%L Beck87a
%K olit ecoop87
%A C. Beckstein
%A G. G\:orz
%A M. Tielemann
%T FORK: A System for Object- and Rule-Oriented Programming
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 253-264

%L Beck89a
%K olit oopsla89
%A Kent Beck
%A Ward Cunningham
%T A Laboratory for Teaching Object-Oriented Thinking
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 1-6

%L Beck90a
%K olit-reuse binder
%A Karin Becker
%A Th\'er\`ese Petitjean
%A Fran\,cois Bodart
%T Incremental Reasoning Process Through Abstraction levels
%R draft
%I Facult\'es Universitaire Notre Dame de la Paix
%C Namur
%D 1990

%L Beck90b
%K olit-reuse binder
%A Karin Becker
%A Fran\,cois Bodart
%T Reusable Object-Oriented Specifications for Decision Support Systems
%R draft
%I Facult\'es Universitaire Notre Dame de la Paix
%C Namur
%D 1990

%L Beec88a
%K olit oopsla88
%A David Beech
%T Intensional Concepts in an Object Database Model
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 164-175

%L Beer90a
%K olit-oodb binder
%A Catriel Beeri
%T A Formal Approach to Object-Oriented Databases
%J Data and Knowledge Engineering
%V 5
%I North-Holland
%D 1990
%P 353-382

%L Bell92a
%K olit-reuse chloe of92
%A Jean L. Bell
%T Reuse and Browsing: Survey of Program Developers
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 197-220

%L Bell92b
%K pcalc mobility (uwe)
%% UNPUBLISHED
%A Gianluigi Bellin
%A Philip Scott
%T On the \pi-Calculus and Linear Logic
%D 1992

%L Bell93a
%K olit-ithaca chloe vista vo93
%A Roberto Bellinzona
%A Mariagrazia Fugini
%A Vicki de Mey
%T Reuse of Specifications and Designs in a Development Information System
%B Proceedings IFIP WG 8.1 Working Conference
   on Information System Development Process
%C Como, Italy
%D Sept. 1-3 1993
%O to appear
%X This paper describes the approach to application specification and
   design via reuse at the basis of the Development Information System
   of the ITHACA environment.  Requirements and detailed design of a
   specific application are incrementally composed by aggregating
   available reusable components stored in the Software Information
   Base repository.  The paper reviews the Development Information
   System, then focuses on two tools of the system: RECAST
   (Requirements Composition And Specification Tool) and Visual ADL,
   which help the developer in selecting reusable artifacts from the
   Software Base and in composing and tailoring them according to the
   specific needs of the application.  The paper illustrates the
   composition approach and describes how reuse is supported via meta
   classes incorporating suggestions for component reuse and tailoring,
   and for detailed design.

%L Benn82a
%K olit survey hydra web smalltalk argus
%A John K. Bennett
%T A Comparison of Four Object-Based Systems
%R TR82-11-03
%I University of Washington
%D 1982

%L Benn87a
%K olit-oopl oopsla87
%A John K. Bennett
%T The Design and Implementation of Distributed Smalltalk
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 318-330

%L Benn90a
%K olit-oopl binder
%A John K. Bennett
%T Experience with Distributed Smalltalk
%J Software -- Practice and Experience
%V 20
%N 2
%D 1990
%P 157-180

%L Bens88a
%K olit oopsla88
%A Edward H. Bensley
%A Thomas J. Brando
%A Myra Jean Prelle
%T An Execution Model for Distributed Object-Oriented Computation
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 316-322

%L Bens91a
%K olit oopsla91
%A Dan Benson
%A Greg Zick
%T Symbolic and Spatial Database for Structural Biology
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 329-339

%L Bera93
%K olit binder (shelf)
%A Edward V. Berard
%T Essays On Object-Oriented Software Engineering
%V 1
%I Prentice Hall
%D 1993

%L Berg84a
%K pcalc regular processes icalp84 binder
%A J.A. Bergstra
%A J.W. Klop
%T The Algebra of Recursively Defined Processes and the Algebra
   of Regular Processes
%B Proceedings ICALP '84
%E J. Paredaens
%I Springer-Verlag
%S LNCS 172
%C Antwerpen
%D 1984
%P 82-95
%% 5.22 AUT

%L Berg84b
%K pcalc acp binder
%A J.A. Bergstra
%A J.W. Klop
%T Process Algebra for Synchronous Communication
%J Information and Control
%V 60
%D 1984
%P 109-137

%L Berg85a
%K pcalc acp binder
%A J.A. Bergstra
%A J.W. Klop
%T Algebra of Communicating Processes with Abstraction
%J Theoretical Computer Science
%V 37
%N 1
%P 77-121
%D May 1985

%L Berg87a
%K pcalc acp binder(conc)
%A J.A. Bergstra
%A J.W. Klop
%T ACP_\tau: A Universal Axiom System for Process Specification
%B Algebraic Methods: Theory, Tools and Applications
%S LNCS 394
%E M. Wirsing, J.A. Bergstra
%I Springer Verlag
%D 1987
%P 447-463

%L Berg91a
%K olit ecoop91
%A Paul L. Bergstein
%A Karl J. Lieberherr
%T Incremental Class Dictionary Learning and Optimization
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 377-396

%L Berg91b
%K olit oopsla91
%A Paul L. Bergstein
%T Object-Preserving Class Transformations
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 299-313

%L Berl90a
%K olit-reuse oopsla90 ecoop90
%A Lucy M. Berlin
%T When Objects Collide: Experiences with Reusing Multiple Class Hierarchies
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 181-193

%L Bern81a
%K dblit distribution
%A Philip A. Bernstein
%A N. Goodman
%T Concurrency Control in Distributed Database Systems
%J ACM Computing Surveys
%V 13
%N 2
%D June 1981
%P 185-221

%L Bern82a
%K concurrency other
%A Philip A. Bernstein
%A N. Goodman
%T A Sophisticate's Introduction to Distributed Concurrency Control
%B Proceedings of the Eighth International Conference
   on Very Large Data Bases
%D 1982
%P 62-76

%L Berr90a
%K pcalc cham tccs binder(conc) popl90
%A G\'erard Berry
%A G\'erard Boudol
%T The Chemical Abstract Machine
%B Proceedings POPL '90
%C San Francisco
%D Jan 17-19, 1990
%P 81-94

%L Bezi87a
%K olit oopsla87
%A Jean B\'ezivin
%T Some Experiments In Object-Oriented Simulation
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 394-405

%L Bhas86a
%K olit-appl virtual instruments smalltalk oopsla86
%A K.S. Bhaskar
%A J.K. Pecol
%A J.L. Beug
%T Virtual Instruments: Object-Oriented Program Synthesis
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 303-314

%L Bigg84a
%K olit-reuse
%T Special Issue on Reusability
%E T.J. Biggerstaff and Alan J. Perlis
%J IEEE Transactions on Software Engineering
%V SE-10
%N 5
%D Sept 1984

%L Bigg87a
%K olit-reuse
%A T.J. Biggerstaff
%A C. Richter
%T Reusability Framework, Assessment, and Directions
%J IEEE Software
%V 4
%N 2
%D March 1987
%P 41-49

%L Bigg89a
%K olit-reuse
%A T.J. Biggerstaff
%A A.J. Perlis
%T Software Reusability
%V I & II
%I ACM Press & Addison-Wesley
%C Reading, Massachusetts
%D 1989

%L Biha92a
%K olit-obc
%A Thomas A. Bihari
%A Prabha Gopinath
%T Object-Oriented Real-Time Systems: Concepts and Examples
%J IEEE Computer
%V 25
%N 12
%D Dec 1992
%P 25-32

%L Birr82a
%K misc networks mail
%A A.D. Birrell
%A R. Levin
%A R.M. Needham
%A M.D. Schroeder
%T Grapevine: An Exercise in Distributed Computing
%J CACM
%V 25
%N 4
%D April 1982
%P 260-274

%L Birr93a
%K olit ecoop93
%A Andreas Birrer
%A Thomas Eggenschwiler
%T Frameworks in the Financial Engineering Domain: An Experience Report
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 21-35
%X To supply the financial engineering community with adequate and
   timely software support we advocate a reusability oriented approach
   to software development.  The approach focuses on frameworks and
   reusable building blocks. This paper presents a domain specific
   framework for a calculation engine to be used in financial trading
   software.  It is as such an example of using frameworks outside
   their typical domain of graphical user interfaces.

%L Birt73a
%K olit-oopl simula obib(oopl)
%A G. Birtwistle
%A Ole Johan Dahl
%A B. Myhrtag
%A Kristen Nygaard
%T Simula Begin
%I Auerbach Press
%C Philadelphia
%D 1973
%% 4.22 SIM

%L Bjor78a
%K pl-semantics vdm
%T The Vienna Development Method: The Meta-Language
%E D. Bj\/orner and C.B. Jones
%S LNCS 61
%I Springer Verlag
%C Heidelberg
%D 1978

%L Bjor88a
%K olit-oopl opal avance oopsla88
%A Anders Bj\:ornerstedt
%A Stefan Britts
%T AVANCE: An Object Management System
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 206-221

%L Bjor89a
%K olit chloe-ftp ood89
%A Anders Bj\:ornerstedt
%T Secondary Storage Garbage Collection for Decentralized Object-Based Systems
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 277-319
%% MIR
%X This paper describes a mechanism for secondary storage garbage
   collection that may be used to reclaim inaccessible resources in
   decentralized persistent object based systems. Schemes for object
   addressing and object identification are discussed and a proposal is
   made which handles volatile objects separately from persistent
   objects.  The garbage collection of the space of volatile objects is
   decoupled from the garbage collection of the space of persistent
   objects. The first kind of garbage collection can avoid the
   complexity and overhead of a distributed algorithm by classifying
   "exported" objects as persistent. The problem of detecting and
   collecting "distributed garbage" is then deferred to garbage
   collection of persistent objects.
%% ftp: cui.unige.ch:OO-articles/garbageCollection.ps.Z

%L Blac86a
%K olit-oopl emerald distribution oopsla86
%A Andrew Black
%A Norman Hutchinson
%A Eric Jul
%A Henry Levy
%T Object Structure in the Emerald System
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 78-86

%L Blac87a
%K olit-obcl concurrency emerald distribution binder
%A Andrew Black
%A Norman Hutchinson
%A Eric Jul
%A Henry Levy
%A Larry Carter
%T Distribution and Abstract Data Types in Emerald
%J IEEE Transactions on Software Engineering
%V SE-13
%N 1
%D Jan 1987
%P 65-76

%L Blac93a
%K olit ecoop93
%A Andrew P. Black
%A Mark P. Immel
%T Encapsulating Plurality
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 57-79
%X This paper describes the Gaggle, a mechanism for grouping and naming
   objects in an object-oriented distributed system.  Using Gaggles,
   client objects can access distributed replicated services without
   regard for the number of objects that provide the service.  Gaggles
   are not themselves a replication mechanism; instead they enable
   programmers to construct their own replicated distributed services
   in whatever way is appropriate for the application at hand, and then
   to encapsulate the result.  From the point of view of a client, a
   Gaggle can be named and invoked exactly like an object.  However,
   Gaggles can be used to represent individual objects, several
   ordinary objects, or even several other Gaggles.  In this way they
   encapsulate plurality.  If a Gaggle is used as an invokee, one of
   the objects that it represents is chosen (non-deterministically) to
   receive the invocation.

%L Blah88a
%K dblit olit READ
%A M.R. Blaha
%A W.J. Premerlani
%A James E. Rumbaugh
%T Relational Database Design Using an Object-Oriented Methodology
%J CACM
%V 31
%N 4
%D April 1988
%P 414-427

%L Blak87a
%K olit ecoop87
%A Edwin Blake
%A Steve Cook
%T On Including Part Hierarchies in Object-Oriented Languages,
   with an Implementation in Smalltalk
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 41-50

%L Blas91a
%K olit-oopl omega binder
%A G\:unther Blaschek
%T Type-Safe Object-Oriented Programming with Prototypes -- The
   Concepts of Omega
%J Structured Programming
%V 12
%I Springer-Verlag
%C New York
%D 1991
%P 217-225

%L Bloc89a
%K olit oopsla89
%A F.P. Block
%A N.C. Chan
%T An Extended Frame Language
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 151-158

%L Bloo79a
%K concurrency binder(conc)
%A Toby Bloom
%T Evaluating Synchronization Mechanisms
%B Proceedings of the Seventh Symposium on Operating Systems Principles
%C Pacific Grove, CA
%D Dec 10-12, 1979
%P 24-32

%L Bloo87a
%K olit-oodb oopsla87 obib(oodb)
%A Toby Bloom
%A Stanley B. Zdonik
%T Issues in the Design of Object-Oriented Database Programming Languages
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 441-451

%L Bloo88a
%K pcalc equivalence ccs csp binder popl88
%A Bard Bloom
%A Sorin Istrail
%A Albert R. Meyer
%T Bisimulation Can't Be Traced: Preliminary Report
%B Proceedings POPL '88
%C San Diego
%D Jan 13-15, 1988
%% 4.2 ACM
%P 229-239

%L Bloo90a
%K pcalc equivalence ccs binder
%A Bard Bloom
%A Albert R. Meyer
%T Experimenting with Process Equivalence
%B Semantics for Concurrency
%E M.Z. Kwiatkowska, M.W. Shields and R.M. Thomas
%S Workshops in Computing
%I Springer-Verlag
%D 1990
%% 5.24 SEM
%P 81-95

%L Bobr77a
%K misc lang krl knowrep
%A Daniel G. Bobrow
%A T. Winograd
%T An Overview of KRL, a Knowledge Representation Language
%J Cognitive Science
%V 1
%N 1
%D 1977
%P 3-46

%L Bobr84a
%K misc ai prolog
%A Daniel G. Bobrow
%T If Prolog is the Answer, What is the Question?
%B Proceedings of the International Conference
   on Fifth Generation Computer Systems
%D Nov 1984
%P 138-145

%L Bobr86a
%K olit-oopl commonloops loops lisp oopsla86
%A Daniel G. Bobrow
%A Ken Kahn
%A Gregor Kiczales
%A Larry Masinter
%A Mark Stefik
%A Frank Zdybel
%T CommonLoops: Merging Lisp and Object-Oriented Programming
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 17-29

%L Bock90a
%K olit oopsla90 ecoop90
%A Hans-Dieter B\:ocker
%A J\:urgen Herczeg
%T What Tracers Are Made Of
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 89-99

%L Boeh85a
%K fpl russell binder
%A Hans Boehm
%A Alan Demers
%A Jim Donahue
%T A Programmer's Guide to Russell
%R on-line documentation
%I Cornell University
%D 1985

%L Bolo89a
%K pcalc ccs lotos binder(conc)
%A Tommaso Bolognesi
%A Maurizio Caneve
%T Squiggles: A Tool for the Analysis of LOTOS Specifications
%B Formal Description Techniques
%E K.J. Turner
%I Elsevier Science Publishers B.V. (North-Holland)
%D 1989
%P 201-216

%L Bolt80a
%K uilit
%A R.A. Bolt
%T 'Put-that-there': Voice and Gestures at the Graphics Interface
%J Proceedings SIGGRAPH '80
%V 14
%N 3
%D July 1980
%P 262-270

%L Bona86a
%K olit-appl bridge loops) oopsla86
%A Jeff Bonar
%A Robert Cunningham
%A Jamie Schultz
%T An Object-Oriented Architecture for Intelligent Tutoring Systems
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 269-276

%L Bond76a
%K misc graph theory book
%A J.A. Bondy
%A U.S.R. Murty
%T Graph Theory with Applications
%I North Holland
%C New York
%D 1976

%L Booc83a
%K plang ada
%A Grady Booch
%T Software Engineering with Ada
%I The Benjamin Cummings Publishing Co. Inc.
%C Menlo Park, CA 94025
%D 1983

%L Booc86a
%K olit ood binder(ood)
%A Grady Booch
%T Object-Oriented Development
%J IEEE Transactions on Software Engineering
%V SE-12
%N 2
%D Feb 1986
%P 211-221

%L Booc90a
%K olit oopsla90 ecoop90
%A Grady Booch
%A Michael Vilot
%T The Design of the C++ Booch Components
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 1-11

%L Bore92a
%K pcalc mobility equivalence concur92 binder
%A Michele Boreale
%A Rocco De Nicola
%T Testing Equivalences for Mobile Processes
%B Proceedings of CONCUR'92
%E W.R. Cleaveland
%S LNCS 630
%I Springer-Verlag
%D 1992
%P 2-16
%% Cote:  F.1.2 CON

%L Born81a
%K olit-appl thinglab smalltalk constraints obib(sys)
%A Alan Borning
%T The Programming Language Aspects of ThingLab,
   a Constraint-Oriented Simulation Laboratory
%J ACM TOPLAS
%V 3
%N 4
%D Oct 1981
%P 353-387

%L Born82a
%K olit-oopl smalltalk inference casais obib(types) popl82
%A Alan H. Borning
%A Daniel H.H. Ingalls
%T A Type Declaration and Inference System for Smalltalk
%B Proceedings POPL '82
%C Albuquerque, NM
%D 1982

%L Born82b
%K olit-inheritance smalltalk casais obib(inh)
%A Alan H. Borning
%A Daniel H.H. Ingalls
%T Multiple Inheritance in Smalltalk-80
%B Proceedings at the National Conference on AI
%C Pittsburgh, PA
%D 1982

%L Born86a
%K uilit
%A Alan Borning
%A Robert Duisberg
%T Constraint-Based Tools for Building User Interfaces
%J ACM Transactions on Computer Graphics
%V 5
%N 4
%D October 1986
%P 345-374

%L Born87a
%K olit-oopl deltatalk smalltalk ecoop87
%A Alan Borning
%A Tim O'Shea
%T Deltatalk: An Empirically and Aesthetically Motivated
   Simplification of the Smalltalk-80 Language
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 1-10

%L Born87b
%K olit oopsla87
%A Alan Borning
%A Robert Duisberg
%A Bjorn Freeman-Benson
%A Axel Kramer
%A Michael Woolf
%T Constraint Hierarchies
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 48-60

%L Bos81a
%K uilit
%A Jan van den Bos
%A R. Plasmeijer
%A Jan W.M. Stroet
%T Process Communication Based on Input Specifications
%J ACM TOPLAS
%V 3
%N 3
%D July 1981
%P 224-250

%L Bos83a
%K uilit real-time tugs
%A Jan van den Bos
%A M.J. Plasmeijer
%A P.H. Hartel
%T Input-output Tools: A Language Facility for Interactive
   and Real-Time Systems
%J IEEE Transactions on Software Engineering
%V SE-9
%N 3
%D May 1983
%P 247-259

%L Bos87a
%K olit-obcl pcol procol
%A Jan van den Bos
%T PCOL -- A Protocol-Constrained Object Language
%J ACM SIGPLAN Notices
%V 22
%N 9
%D Sept 1987
%P 14-19

%L Bos89a
%K olit-obcl procol oopsla89
%A Jan van den Bos
%A Chris Laffra
%T PROCOL -- A Parallel Object Language with Protocols
%J ACM SIGPLAN Notices, Proceedings OOPSLA '89
%V 24
%N 10
%D Oct 1989
%P 95-102

%L Boud86a
%K concurrency binder
%A G\'erard Boudol
%A Ilaria Castellani
%T On the Semantics of Concurrency: Partial Orders and Transition Systems
%R Report no. 550
%I INRIA
%D July 1986

%L Boud87a
%K concurrency binder
%A G\'erard Boudol
%A Ilaria Castellani
%T Concurrency and Atomicity
%R Report no. 748
%I INRIA
%D Nov. 1987

%L Boud88a
%K pcalc ccs binder
%A G\'erard Boudol
%A Ilaria Castellani
%T A Non-Interleaving Semantics for CCS Based on Proved Transitions
%J Fundamenta Informaticae
%V XI
%I North-Holland
%D 1988
%P 433-452

%L Boud89a
%K pcalc tapsoft89 binder(conc)
%A G\'erard Boudol
%T Towards a Lambda-Calculus for Concurrent and Communicating Systems
%B Proceedings TAPSOFT '89
%S LNCS 351
%E D\'iaz and Orejas
%I Springer-Verlag
%D 1989
%% 4.0 INT
%P 149-161

%L Boud92a
%K pcalc mobility (uwe)
%% TECHREPORT
%A G\'erard Boudol
%T Asynchrony and the \pi-calculus (Note)
%I INRIA Sofia-Antipolis
%R Rapporte de Recherche 1702
%D 1992

%L Brac88a
%K misc knowrep
%A R.J. Brachman
%T The Basics of Knowledge Representation and Reasoning
%J AT&T Technical Journal
%V 67
%N 1
%D Jan/Feb 1988
%P 7-24

%L Brac90a
%K olit-inheritance oopsla90 ecoop90
%A Gilad Bracha
%A William Cook
%T Mixin-based Inheritance
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 303-311

%L Brac91a
%K olit-inheritance binder
%A Gilad Bracha
%A Gary Lindstrom
%T Modularity Meets Inheritance
%R UUCS-91-017
%I University of Utah, Dept. Comp. Sci.
%D Oct. 13, 1991

%L Brac92a
%K olit-inheritance binder (shelf)
%A Gilad Bracha
%T The Programming Language Jigsaw: Mixins, Modularity and Multiple Inheritance
%R Ph.D. thesis
%I Dept. of Computer Science, University of Utah
%D March 1992

%L Brei92a
%K olit chloe of92
%A Christian Breiteneder
%A Laurent Dami
%A Simon Gibbs
%A Vicki de Mey
%A Dennis Tsichritzis
%T Telepresence in Shared Virtual Worlds
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 265-274

%L Brei92b
%K olit chloe of92
%A Christian Breiteneder
%A Simon Gibbs
%A Dennis Tsichritzis
%T Modelling of Audio/Video Data
%J Proceedings of the 11th International Conference on
   the Entity Relationship Approach
%C Karlsruhe
%D Oct. 1992
%O to appear

%L Brei93a
%K olit chloe vo93
%A Christian Breiteneder
%T They Shoot Video Actors, Don't They?
%R Visual Objects
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1993
%P 65-67
%X The purpose of this summary is to serve as a pointer to a digital
   video that is available via anonymous ftp and to give some
   information concerning the video production in the video actors
   project.

%L Brin72a
%K concurrency
%A Per Brinch Hansen
%T Structured Multi-Programming
%J CACM
%V 15
%N 7
%D July 1972
%P 574-578

%L Brin73a
%K concurrency monitors
%A Per Brinch Hansen
%T Concurrent Programming Concepts
%J ACM Computing Surveys
%V 5
%N 4
%D 1973
%P 223-245

%L Brin78a
%K concurrency
%A Per Brinch Hansen
%T Distributed Processes: A Concurrent Programming Concept
%J CACM
%V 21
%N 11
%D Nov 1978
%P 934-941

%L Brin87a
%K pcalc equivalence lotos
%A E. Brinksma
%A G. Scollo
%A C. Steenbergen
%T LOTOS Specifications, Their Implementations and Their Tests
%B Protocol Specification, Testing and Verification VI
%E G. Bochmann, B. Sarikaya
%I North Holland
%D 1987
%% considers behavioural orderings and equivalences in labelled
   transition systems
%% 3.81 PRO

%L Brin89a
%K pcalc equivalence lotos
%A E. Brinksma
%T A Theory for the Derivation of Tests
%B Protocol Specification, Testing and Verification VIII
%E S. Aggarwal, K. Sabnani
%I North Holland
%D 1989
%% establishes that for each labelled transition system P there exists
%% a canonical tester T(P) s.t. T(T(P)) is testing equivalent to P

%L Brio87a
%K olit-obc ecoop87
%A Jean-Pierre Briot
%A Akinori Yonezawa
%T Inheritance and Synchronization in Concurrent OOP
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 32-40

%L Brio89a
%K olit-obcl actalk smalltalk actors ecoop89
%A Jean-Pierre Briot
%T Actalk: A Testbed for Classifying and Designing Actor Languages
   in the Smalltalk-80 Environment
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 109-129

%L Brio89b
%K olit oopsla89
%A Jean-Pierre Briot
%A Pierre Cointe
%T Programming with Explicit Metaclasses in Smalltalk-80
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 419-432

%L Broo83a
%K pcalc equivalence ccs csp binder
%A Stephen D. Brookes
%A William C. Rounds
%T Behavioral Equivalence Relations Induced by Programming Logics
%B Automata, Languages and Programming, 10th Colloquium
%C Barcelona, July 1983
%S LNCS
%V 154
%I Springer-Verlag
%D 1983

%L Broo84a
%K pcalc equivalence binder(csp)
%A S.D. Brookes
%A C.A.R. Hoare
%A A.W. Roscoe
%T A Theory of Communicating Sequential Processes
%J Journal of the ACM
%V 31
%N 3
%D July 1984
%P 560-599

%L Brot83a
%K oislit networks mail
%A D.K. Brotz
%T Message System Mores: Etiquette in Laurel
%J ACM TOOIS
%V 1
%N 2
%D 1983
%P 179-192

%L Broy88a
%K concurrency lift binder
%A Manfred Broy
%T An Example for the Design of Distributed Systems in a Formal Setting:
   The Lift Problem
%R MIP-8802
%I University of Passau, Faculty of Math. and Comp. Sci.
%D Feb. 1988

%L Bruc86a
%K types olit oopws86
%A K.B. Bruce
%A Peter Wegner
%T An Algebraic Model of Subtypes in Object-Oriented Languages
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 163-172

%L Brue92a
%K olit oopsla92
%A Bernd Bruegge
%A Jim Blythe
%A Jeffrey Jackson
%A Jeff Shufelt
%T Object-Oriented System Modeling with OMT
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 359-376

%L Bruno86a
%K olit lang ada oopsla86
%A Giorgio Bruno
%A Alessandra Balsamo
%T Petri Net-Based Object-Oriented Modelling
   of Distributed Systems
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 284-293

%L Budd87a
%K olit-oopl littlesmalltalk
%A Tim Budd
%T A Little Smalltalk
%I Addison Wesley
%D 1987

%L Budd91a
%K olit-oopl leda binder
%A Timothy A. Budd
%T Sharing and First-Class Functions in Object-Oriented Languages
%R Research paper
%I Oregon State University
%D March 5, 1991

%L Budd91b
%K olit-oopl leda binder
%A Timothy A. Budd
%T Multiparadigm Data Structures in Leda
%R Research paper
%I Oregon State University
%D April 29, 1991

%L Buhr88a
%K olit ecoop88
%A Peter A. Buhr
%A C.R. Zarnke
%T Nesting in an Object-Oriented Language is NOT for the Birds
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 128-145

%L Buhr89a
%K visprog reuse binder(visprog)
%A Raymond J.A. Buhr
%A Gerald M. Karam
%A Carol J. Hayes
%A C. Murray Woodside
%T Software CAD: A Revolutionary Approach
%J IEEE Transactions on Software Engineering
%V 15
%N 3
%D March 1989
%P 235-249

%L Buhr92a
%K olit oopsla92
%A Raymond J.A. Buhr
%A Ronald S. Casselman
%T Architectures with Pictures
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 466-483

%L Bui86a
%K olit coop gdss
%A T.X. Bui
%A Matthias Jarke
%T Communications Design for Co-oP: A Group Decision Support System
%J ACM TOOIS
%V 4
%N 2
%D April 1986
%P 81-103

%L Burn87a
%K plang ada
%A A. Burns
%A A.M. Lister
%A A.J. Wellings
%T A Review of Ada Tasking
%S LNCS 262
%E G. Goos and J. Hartmanis
%I Springer-Verlag
%D 1987

%L Burs80a
%K fpl hope
%A Ron M. Burstall
%A D.B. MacQueen
%A D.T. Sannella
%T HOPE: An Experimental Applicative Language
%B Proceedings, 1980 LISP Conference
%D Aug 1980
%P 136-143

%L Burs84a
%K fpl pebble
%A Ron M. Burstall
%A Butler Lampson
%T A Kernel Language for Abstract Data Types and Modules
%B Proceedings, Semantics of Data Types
%E Kahn, MacQueen, and Plotkin
%C Sophia-Antipolis
%S LNCS 173
%I Springer-Verlag
%D 1984
%% 5.24 SEM
%P 1-50

%L Bust88a
%K concurrency
%A David Bustard
%A John Elder
%A Jim Welsh
%T Concurrent Program Structures
%I Prentice-Hall
%C New York
%S Prentice-Hall International series in computer science
%D 1988
%% Cote:  4.32 BUS

%L Buxt80b
%K misc selit stoneman apse ada
%A J.N. Buxton
%A L.E. Druffel
%T Rationale for STONEMAN
%B Proceedings IEEE COMPSAC '80
%C Chicago
%D Oct. 1980
%P 66-72

%L Buxt83b
%K uilit menulay uims
%A W. Buxton
%A M.R. Lamb
%A Dave Sherman
%A K.C. Smith
%T Towards a Comprehensive User Interface Management System
%J Computer Graphics
%V 17
%N 3
%D July 1983
%P 35-42

%L Byrd82a
%K olit-oopl actors
%A R.J. Byrd
%A S.E. Smith
%A Peter de Jong
%T An Actor-Based Programming System
%J Proceedings ACM SIGOA, SIGOA Newsletter
%V 3
%N 12
%C Philadelphia
%D June 1982
%P 67-78

%L Cald91a
%K olit-reuse metrics
%A G. Caldiera
%A V.R. Basili
%T Identifying and Qualifying Reusable Software Components
%J IEEE Computer
%D Feb 1991
%P 61-70

%L Cald92a
%K olit oopsla92
%A Paul Calder
%A Mark Linton
%T The Object-Oriented Implementation of a Document Editor
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 154-165

%L Call87a
%K olit oopsla87
%A Lisa A. Call
%A David L. Cohrs
%A Barton P. Miller
%T CLAM - an Open System for Graphical User Interfaces
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 277-286

%L Came86a
%K olit jsd binder(ood)
%A John R. Cameron
%T An Overview of JSD
%J IEEE Transactions on Software Engineering
%V SE-12
%N 2
%D Feb 1986
%P 222-240

%L Camp74a
%K concurrency path expressions
%A Roy H. Campbell
%A A. Nico Habermann
%T The Specification of Process Synchronization by Path Expressions
%B Operating Systems, International Symposium
%S LNCS 16
%E E. Gelenbe, C. Kaiser
%I Springer-Verlag
%D 1974
%P 89-102

%L Cann89a
%K types olit oopsla89
%A Peter S. Canning
%A William Cook
%A Walter L. Hill
%A Walter G. Olthoff
%T Interfaces for Strongly-Typed Object-Oriented Programming
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 457-468

%L Cann89b
%K types olit binder
%A Peter S. Canning
%A William Cook
%A Walter L. Hill
%A John C. Mitchell
%A Walter G. Olthoff
%T F-Bounded Quantification for Object-Oriented Programming
%J Proceedings of the ACM Conference on Functional Programming
   and Computer Architecture
%D Sept. 11-13, 1989
%P 273-280

%L Capl87a
%K olit oopsla87
%A Michael Caplinger
%T An Information System Based on Distributed Objects
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 126-137

%L Card85a
%K concurrency squeak ui
%A Luca Cardelli
%A R. Pike
%T Squeak: a Language for Communicating with Mice
%J ACM SIGGRAPH '85
%V 19
%N 3
%D July 1985
%P 199-204

%L Card85b
%K types olit data abstraction binder(oop) obib(types)
%A Luca Cardelli
%A Peter Wegner
%T On Understanding Types, Data Abstraction, and Polymorphism
%J ACM Computing Surveys
%V 17
%N 4
%D Dec 1985
%P 471-522

%L Card85c
%K fpl types amber
%A Luca Cardelli
%T Amber
%B Combinators and Functional Programming Languages,
   13th Spring School of the LITP
%E Cousineau, Curien and Robinet
%S LNCS 242
%I Springer-Verlag
%D 1985
%% 4.22 SPR
%P 21-47

%L Card86a
%K types fp lambda tfc binder (shelf)
%A Luca Cardelli
%T A Polymorphic Lambda Calculus with Type:Type
%R Technical Report 10
%I DEC Systems Research Center
%C Palo Alto, California
%D 1986

%L Card88a
%K olit-inheritance semantics binder(oop)
%A Luca Cardelli
%T A Semantics of Multiple Inheritance
%J Information and Computation
%V 76
%D 1988
%P 138-164

%L Card92a
%K plang modula-3 binder (shelf)
%A Luca Cardelli
%A Jim Donahue
%A Lucille Glassman
%A Mick Jordan
%A Bill Kalsow
%A Greg Nelson
%T Modula-3 Language Definition
%J ACM SIGPLAN Notices
%V 27
%N 8
%D August 1992
%P 15-42

%L Carg86a
%K olit-appl pi debugger c++ oopsla86
%A T.A. Cargill
%T Pi: A Case Study in Object-Oriented Programming
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 350-360

%L Carm90a
%K linear-logic temporal binder
%A Jos\'e Carmo
%A Amilcar Sernadas
%T Branching versus Linear Logics Yet Again
%J Formal Aspects of Computing
%V 2
%D 1990
%P 24-59

%L Carm91a
%K patterns olit txl binder
%A Ian H. Carmichael
%A James R. Cordy
%T TXL -- The Tree Transformation Language V5.0: Syntax and Informal Semantics
%R Project REX Working Paper Rex-2-GMD-41-1.0
%I GMD
%C Karlsruhe
%D April 1991

%L Caro90a
%K olit-obcl eiffel joop
%A Denis Caromel
%T Concurrency and Reusability: From Sequential to Parallel
%J Journal of Object-Oriented Programming
%V 3
%N 3
%D Sept/Oct 1990
%P 34-42

%L Caro90b
%K olit-obc tools90 binder
%A Denis Caromel
%T Concurrency: An Object-Oriented Approach
%B Proceedings TOOLS '90
%E J. B\'ezivin, B. Meyer, J-M. Nerson
%I Editions Angkor Paris
%D June 1990
%P 183-197

%L Caro90c
%K olit-obc binder
%A Denis Caromel
%T Programming Abstractions for Concurrent Programming
%B TOOLS Pacific '90
%C Sydney, Australia
%D Nov. 1990

%L Caro91a
%K olit-obcl eiffel binder(shelf)
%A Denis Caromel
%T Programmation parall\`ele asynchrone et imp\'erative:
   \'etudes et propositions
%R Ph.D. thesis
%I Universit\'e de Nancy
%D Feb. 1991

%L Carr86a
%K concurrency linda
%A N. Carriero
%A D. Gelernter
%T The S/Net's Linda Kernel
%J ACM Transactions on Computer Systems
%V 4
%N 2
%D May 1986
%P 110-129

%L Carr89a
%K concurrency linda
%A N. Carriero
%A D. Gelernter
%T How to Write Parallel Programs: A Guide to the Perplexed
%J ACM Computing Surveys
%V 21
%N 3
%D Sept 1989
%P 323-357

%L Carr90a
%K concurrency linda
%A Nicholas Carriero
%A David Gelernter
%T How to Write Parallel Programs: a First Course
%I MIT Press, cop. 1990
%C Cambridge
%D 1990
%% Cote:  D.1.3 CAR

%L Carr90b
%K olit-inheritance oopsla90 ecoop90
%A Bernard Carr\'e
%A Jean-Marc Geib
%T The Point of View Notion for Multiple Inheritance
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 312-321

%L Casa88a
%K olit-oopl knos chloe-ftp aoe88 obib(sys)
%A Eduardo Casais
%T An Object-Oriented System Implementing KNOs
%B Proceedings of the ACM Conference on Office Information Systems (COIS)
%C Palo Alto
%D March 1988
%P 284-290
%% MIR
%X We discuss a distributed object-oriented system written in LISP that
   implements KNOs (KNowledge acquisition, dissemination and
   manipulation Objects).  The system emphasizes advanced features like
   object autonomy, mobility and dynamic inheritance. The objects are
   active, independent entities that can travel in a local area network
   and protect themselves from external aggressions.  A dynamic
   inheritance mechanism enables them to modify their behaviour during
   their lifetime.  We give a description of our system and illustrate
   its functionality with selected examples.
%% ftp: cui.unige.ch:OO-articles/knosImplementation.ps.Z

%L Casa89a
%K olit chloe ood89
%A Eduardo Casais
%T Reorganizing an Object System
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 161-189

%L Casa90a
%% CB10
%K olit chloe-ftp om90 chloe-book
%A Eduardo Casais
%T Managing Class Evolution in Object-Oriented Systems
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 133-195
%X Software components developed with an object-oriented language
   undergo considerable reprogramming before they become reusable in a
   wide range of applications or domains. Tools and methodologies are
   therefore needed to cope with the complexity of designing, updating and
   reorganizing vast collections of classes. This paper describes several
   techniques for controlling change in object-oriented systems,
   illustrates their functionality with selected examples and discusses
   their advantages and their limitations. As a complement to traditional
   approaches like version management, we propose new algorithms for
   automatically restructuring a hierarchy when classes are added to it.
   These algorithms not only help in handling modifications to libraries
   of software components, but they also provide useful guidance for
   detecting and correcting improper class modelling.
%% ftp: cui.unige.ch:OO-articles/classEvolution.ps.Z

%L Casa91a
%K olit chloe oc91
%A Eduardo Casais
%T Managing Class Evolution Through Reorganisation
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 287-301
%X Because of incomplete specifications or inadequate design decisions,
   software components developed with an object-oriented language require
   frequent reorganisations before they become stable, reusable classes.
   We propose a new incremental algorithm that analyses the redefinitions
   carried out on inherited properties when a class is added to a
   hierarchy, and restructures the hierarchy to discover missing
   abstractions and to enforce programming style guidelines.  We
   illustrate our automatic restructuring approach with simple examples,
   describe formally the algorithm and the object model it is based on,
   and discuss its suitability for object-oriented software engineering.

%L Casa91b
%K olit chloe binder (shelf)
%A Eduardo Casais
%T Managing Evolution in Object Oriented Environments: An Algorithmic Approach
%R Ph.D. thesis (no. 369)
%I Centre Universitaire d'Informatique, University of Geneva
%D May 1991

%L Casa92a
%K olit ecoop92
%A Eduardo Casais
%T An Incremental Class Reorganization Approach
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 114-132

%L Case93a
%K olit ecoop93
%A Yves Caseau
%A Laurent Perron
%T Attaching Second-Order Types to Methods in an Object-Oriented Language
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 142-160
%X This paper proposes an extension of the notion of method as it is
   currently used in most object-oriented languages. We define
   polymethods as methods that we can attach directly to types, as
   opposed to classes and that we can describe with a second-order
   type.  Two benefits result from this extension; first, the
   expressive power of the language is improved with better modeling
   abilities. Next, second-order types yield a more powerful (precise)
   type inference, which extends the range of static type checking in a
   truly extensible object-oriented language. We first show that
   extensible object-oriented languages present many difficulties for
   static type-checking and that second-order types are necessary to
   get stronger type-checking. We illustrate how to combine polymethods
   through type inheritance and propose a technique based on abstract
   interpretation to derive a second-order type for new polymethods.

%L Cast87a
%K pcalc equivalence binder
%A Ilaria Castellani
%T Bisimulations and Abstraction Homomorphisms
%J Journal of Computer and System Sciences
%I Academic Press
%V 34
%N 2/3
%D April/June 1987
%P 210-235

%L Cast89a
%K concurrency binder
%A Ilaria Castellani
%A Guo Qiang Zhang
%T Parallel Product of Event Structures
%R Report no. 1078
%I INRIA
%D Aug. 1989

%L Caud86a
%K olit-oopl smalltalk oopsla86
%A Patrick J. Caudill
%A Allen Wirfs-Brock
%T A Third Generation Smalltalk-80 Implementation
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 119-130

%L Cham89a
%K olit-oopl self oopsla89
%A Craig Chambers
%A David Ungar
%A Elgin Lee
%T An Efficient Implementation of SELF -- a Dynamically-Typed
   Object-Oriented Language Based on Prototypes
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 49-70

%L Cham91a
%K olit ecoop91
%A Dennis de Champeaux
%T Object-Oriented Analysis and Top-Down Software Development
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 360-376

%L Cham91b
%K olit-oopl self oopsla91
%A Craig Chambers
%A David Ungar
%T Making Pure Object-Oriented Languages Practical
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 1-15

%L Cham92a
%K olit-oopl cecil ecoop92
%A Craig Chambers
%T Object-Oriented Multi-Methods in Cecil
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 33-56

%L Cham92b
%K olit oopsla92
%A Dennis de Champeaux
%A Doug Lea
%A Penelope Faure
%T The Process of Object-Oriented Design
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 45-62

%L Cham92c
%K olit oopsla92
%A Dennis de Champeaux
%A Al Anderson
%A Ed Feldhousen
%T Case Study of Object-Oriented Software Development
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 377-391

%L Cham93a
%K olit ecoop93
%A Craig Chambers
%T Predicate Classes
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 268-296
%X Predicate classes are a new linguistic construct designed to
   complement normal classes in object-oriented languages. Like a
   normal class, a predicate class has a set of superclasses, methods,
   and instance variables. However, unlike a normal class, an object is
   automatically an instance of a predicate class whenever it satisfies
   a predicate expression associated with the predicate class. The
   predicate expression can test the value or state of the object, thus
   supporting a form of implicit property-based classification that
   augments the explicit type-based classification provided by normal
   classes. By associating methods with predicate classes, method
   lookup can depend not only on the dynamic class of an argument but
   also on its dynamic value or state. If an object is modified, the
   property-based classification of an object can change over time,
   implementing shifts in major behavior modes of the object. A version
   of predicate classes has been designed and implemented in the
   context of the Cecil language.

%L Cham93b
%K olit ood
%A Dennis de Champeaux
%T Object-Oriented System Development
%D 1993
%% (ISBN 0-201-56355-X)

%L Chan87a
%K visprog ptyping binder(visprog)
%A Shi-Kuo Chang
%T Visual languages: a tutorial and survey
%J IEEE Software
%V 4
%N 1
%D Jan. 1987
%P 29-39

%L Chan88a
%K concurrency
%A K.M. Chandy
%A J. Misra
%T Parallel Program Design: A Foundation
%I Addison-Wesley
%D 1988

%L Chan89a
%K visprog
%A Shi-Kuo Chang
%A M.J. Tauber
%A B. Yu
%A J-S. Yu
%T A Visual Language Compiler
%J IEEE Transaction on Software Engineering
%V SE-15
%N 5
%D May 1989
%P 506-525

%L Chas92a
%K olit oopsla92
%A Jeffrey S. Chase
%A Henry M. Levy
%A Edward D. Lazowska
%A Miche Baker-Harvey
%T Lightweight Shared Objects in a 64-Bit Operating System
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 397-413

%L Chen76a
%K dblit
%A P.P.S. Chen
%T The Entity-Relationship Model: Toward a Unified View of Data
%J ACM TODS
%V 1
%N 1
%D March 1976
%P 9-36

%L Chib93a
%K olit ecoop93
%A Shigeru Chiba
%A Takashi Masuda
%T Designing an Extensible Distributed Language with a Meta-Level Architecture
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 483-502
%X This paper presents a methodology for designing extensible languages
   for distributed computing.  As a sample product of this methodology,
   which is based on a meta-level (or reflective) technique, this paper
   describes a variant of C++ called Open C++, in which the programmer
   can alter the implementation of method calls to obtain new language
   functionalities suitable for the programmer's applications.  This
   paper also presents a framework called Oc, which is used to help
   obtain various functionalities for distributed computing on top of
   Open C++.  Because the overhead due to the meta level computation is
   negligible in distributed computing, this methodology is applicable
   to practical programming.

%L Chid91a
%K olit oopsla91
%A Shyam R. Chidamber
%A Chris F. Kemerer
%T Towards a Metrics Suite for Object Oriented Design
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 197-211

%L Chin91a
%K olit-obc distribution
%A R.S. Chin
%A S.T. Chanson
%T Distributed Object-Based Programming Systems
%J ACM Computing Surveys
%V 23
%N 1
%D March 1991
%P 91-124

%L Cian90a
%K concurrency binder
%A Paolo Ciancarini
%T Coordination Languages for Open System design
%B Proceedings of the 1990 International Conference of Computer Languages
%C New Orleans
%D March 12-15, 1990
%P 252-260

%L Cian91a
%K concurrency binder
%A Paolo Ciancarini
%T POLIS: A Programming Model for Multiple Tuple Spaces
%B Proceedings of the 6th International Workshop on
   Software Specification and Design
%C Como, Italy
%D Oct 25-26, 1991
%P 44-51

%L Cian92a
%K concurrency binder (shelf)
%A Paolo Ciancarini
%A Keld K. Jensen
%A Dani Yankelevich
%T The Semantics of a Parallel Language based on a Shared Data Space
%R TR-26/92
%I University of Pisa, Computer Science Dept.
%D Aug 1992

%L Clar86a
%K concurrency regular processes binder
%A E.M. Clarke
%A E.A. Emerson
%A A.P. Sistla
%T Automatic Verification of Finite-State Concurrent Systems
   Using Temporal Logic Specifications
%J ACM TOPLAS
%V 8
%N 2
%D April 1986
%P 244-263

%L Clea89a
%K pcalc ccs regular processes binder
%A Rance Cleaveland
%A Joachim Parrow
%A Bernhard Steffen
%T The Concurrency Workbench
%B Automatic Verification Methods for Finite State Systems: Proceedings
%E Joseph Sifakis
%I Springer-Verlag
%S LNCS 407
%D 1989
%P 24-37
%% CUI 5.22 AUT

%L Clea90a
%K pcalc equivalence concur90 binder
%A Rance Cleaveland
%A Bernhard Steffen
%T A Preorder for Partial Process Specifications
%B Proceedings of CONCUR'90
%E J.C.M. Baeten and J.W. Klop
%S LNCS 458
%I Springer-Verlag
%D 1990
%P 141-151
%% Cote:  F.1.2 CON

%L Cler88a
%K olit-inheritance ecoop88
%A Silvia Clerici
%A F. Orejas
%T GSBL: An Algebraic Specification Language Based on Inheritance
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 78-92

%L Clin81a
%K concurrency actors
%A W.D. Clinger
%T Foundations of Actor Semantics
%R AI-TR-633
%I MIT Artificial Intelligence Laboratory
%D May 1981

%L Clyd92a
%K olit oopsla92
%A Stephen W. Clyde
%A David W. Embley
%A Scott N. Woodfield
%T Tunable Formalism in Object-Oriented Systems Analysis:
   Meeting the Needs of Both Theoreticians and Practitioners
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 452-465

%L Cohe75a
%K security olit hydra capability
%A E. Cohen
%A D. Jefferson
%T Protection in the Hydra Operating System
%J ACM SIGOPS
%V 9
%N 5
%C Austin, Texas
%D Nov 1975
%P 141-160

%L Coin87a
%K olit-oopl obvlisp oopsla87
%A Pierre Cointe
%T Metaclasses are First Class: the ObjVlisp Model
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 156-167

%L Coll81a
%K misc enumeration
%A C.B. Collins
%A I.P. Goulden
%A D.M. Jackson
%A Oscar Nierstrasz
%T A Combinatorial Application of Matrix Riccati Equations
   and their q-analogue
%J Discrete Mathematics
%V 36
%D 1981
%I North-Holland
%C Amsterdam
%% JOURNAL

%L Comp85a
%K visprog ptyping
%Q IEEE
%T Special Issue on Visual Programming
%J IEEE Computer
%V 18
%N 8
%D August, 1985

%L Conn89a
%K types olit oopsla89
%A R.C.H. Connor
%A Alan Dearle
%A Ron Morrison
%A A.L. Brown
%T An Object Addressing Mechanism for Statically Types Languages with
   Multiple Inheritance
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 279-286

%L Cons90a
%K olit-ithaca sib
%A Panos Constantopoulos
%A Martin D\:orr
%A E. Pataki
%A Eleni Petra
%A G. Spanoudakis
%A Yannis Vassiliou
%T The Software Information Base -- Selection Tool Integrated Prototype
%R ITHACA report FORTH.91.E2.#3
%I Foundation of Research and Technology -- Hellas
%C Iraklion, Crete
%D Jan 12, 1991

%L Cons92a
%K olit-ithaca sib
%A Panos Constantopoulos
%A Matthias Jarke
%A John Mylopoulos
%A Yannis Vassiliou
%T The Software Information Base: A Server for Reuse
%R ITHACA report FORTH.92.E2.#1
%I Foundation of Research and Technology -- Hellas
%C Iraklion, Crete
%D Jan 1992

%L Cook84a
%K olit-appl hypertext multimedia
%A P.R. Cook
%T Electronic Encyclopedias
%J Byte
%D July 1984
%P 151-167

%L Cook89a
%K types olit eiffel ecoop89
%A William Cook
%T A Proposal for Making Eiffel Type-safe
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 57-70

%L Cook89b
%K olit-inheritance oopsla89 binder(oop)
%A William Cook
%A Jens Palsberg
%T A Denotational Semantics of Inheritance and its Correctness
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 433-443

%L Cook90a
%K olit-inheritance popl90
%A William Cook
%A Walter Hill
%A Peter Canning
%T Inheritance is not Subtyping
%B Proceedings POPL '90
%C San Francisco
%D Jan 17-19, 1990

%L Cook92a
%K olit oopsla92
%A William R. Cook
%T Interfaces and Specifications for the Smalltalk-80 Collection Classes
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 1-15

%L Cord88a
%K patterns olit txl binder
%A James R. Cordy
%A Charles D. Halpern
%A Eric Promislow
%T TXL: A Rapid Prototyping System for Programming Language Dialects
%B Proceedings of The International Conference of Computer Languages
%C Miami, FL
%D Oct 9-13, 1988
%P 280-285

%L Cord91a
%K patterns olit txl binder
%A James R. Cordy
%T User's Guide to TXL -- The Tree Transformation Language V5.0
%R Project REX Working Paper Rex-2-GMD-42-1.0
%I GMD
%C Karlsruhe
%D April 1991

%L Corm90a
%K types fp inference tfc
%A G.V. Cormack
%A A.K. Wright
%T Type-Dependent Parameter Inference
%B Proceedings of the ACM SIGPLAN '90 Conference on Programming Language
   Design and Implementation
%C White Plains, New York
%D 1990
%P 127-136

%L Cost84a
%K pcalc ccs fairness READ
%A G. Costa
%A Colin Stirling
%T A Fair Calculus of Communicating Systems
%J Acta Informatica
%V 21
%N 5
%D 1984
%P 417-442

%L Cous85a
%K fpl caml semantics binder
%A Guy Cousineau
%A Pierre-Louis Curien
%A M. Mauny
%T The Categorical Abstract Machine
%B Proceedings Functional Programming languages and Computer Architecture
%S LNCS 201
%E J-P. Jouannaud
%I Springer-Verlag
%D 1985
%% 4.22 FUN
%P 50-64

%L Cout87a
%K olit ecoop87
%A Jo\:elle Coutaz
%T The Construction of User Interfaces and the Object Paradigm
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 121-130

%L Cout89a
%K olit ui ecoop89
%A Jo\:elle Coutaz
%T Architecture Models for Interactive Software
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 383-399

%L Cox83a
%K olit-oopl oopc
%A Brad J. Cox
%T The Object Oriented Pre-Compiler
%J SIGPLAN Notices
%V 18
%N 1
%D Jan 1983
%P 15-22

%L Cox84a
%K olit-oopl oopc objc
%A Brad J. Cox
%T Message/Object Programming:
   An Evolutionary Change in Programming Technology
%J IEEE Software
%V 1
%N 1
%D Jan 1984

%L Cox86a
%K olit-oopl objc obib(oopl)
%A Brad J. Cox
%T Object Oriented Programming -- An Evolutionary Approach
%I Addison-Wesley
%C Reading, Mass.
%D 1986

%L Cox87a
%K olit oopsla87
%A Brad J. Cox
%A Kurt J. Schmucker
%T Producer: A Tool for Translating Smalltalk-80 to Objective-C
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 423-429

%L Cox90a
%K olit
%A Brad J. Cox
%T Planning the Software Industrial Revolution
%J IEEE Software
%V 7
%N 6
%D Nov. 1990
%P 25-33

%L Crof88a
%K olit tasks polymer
%A W. Bruce Croft
%A L.S. Lefkowitz
%T Using a Planner to Support Office Work
%B Proceedings of the Conference on Office Information Systems
%C Palo Alto, CA
%D 1988
%P 55-62

%L Croft85a
%K olit-oopl poise
%A W. Bruce Croft
%T Task Management for an Intelligent Interface
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 8-13

%L Cunn86a
%K olit concepts smalltalk oopsla86
%A Ward Cunningham
%A Kent Beck
%T A Diagram for Object-Oriented Programs
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 361-367

%L Curr82a
%K olit-oopl mesa traits obib(oopl)
%A G. Curry
%A L. Baer
%A D. Lipkie
%A B. Lee
%T TRAITS: an Approach for Multiple Inheritance Subclassing
%J Proceedings ACM SIGOA, SIGOA Newsletter
%V 3
%N 12
%C Philadelphia
%D June 1982

%L Curr84a
%K olit-inheritance appl star mesa traits
%T Experiences with TRAITS in the XEROX STAR Workstation
%A G. Curry
%A R. Ayers
%J IEEE TOSE
%V 10
%N 5
%D Sept 1984

%L Cusa91a
%K olit-inheritance ecoop91
%A Elspeth Cusack
%T Inheritance in Object-Oriented Z
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 167-179

%L Cusa91b
%K concurrency csp binder
%A Elspeth Cusack
%T Refinement, Conformance and Inheritance
%J Formal Aspects of Computing
%V 3
%D 1991
%P 129-141

%L Dam88a
%K pcalc ccs binder (shelf)
%A Mads Dam
%T Relevance Logic and Concurrent Composition
%R Proc. 3rd Annual Symposium on Logic in Computer Science
%C Edinburgh
%D July 1988
%I Computer Society Press
%P 178-185

%L Dam90a
%K pcalc ccs binder (shelf)
%A Mads Dam
%T Relevance Logic and Concurrent Composition
%R Ph.D. thesis, report CST-66-90
%I Computer Science Dept., University of Edinburgh
%D Sept., 1990

%L Dami88a
%K olit scripts chloe aoe88
%A Laurent Dami
%A Eugene Fiume
%A Oscar Nierstrasz
%A Dennis Tsichritzis
%T Temporal Scripts for Objects
%R Active Object Environments
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1988
%% REPORT
%P 144-161

%L Dami88b
%K olit scripts chloe aoe88
%A Laurent Dami
%T Musical Scripts
%R Active Object Environments
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1988
%P 162-171

%L Dami89a
%K olit-reuse chloe ood89
%A Laurent Dami
%T Reusability through Horizontal Composition
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 143-160

%L Dami90a
%K olit chloe-ftp om90
%A Laurent Dami
%T Scripting Musical Components in Application Interfaces
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 357-366
%X Musical events can enrich application interfaces in two ways: by
   adding new channels for notifying users about changes in the internal
   state of an application, or by getting data input from audio equipment
   connected to the workstation. Such possibilities will only get more
   widely used if environments are developed in which musical components
   can be scripted, i.e. can be easily arranged and connected to
   applications by direct manipulation, as opposed to traditional
   programming methods. Similar facilities already exist in several
   systems for working with graphical components like buttons or windows.
   This paper describes ongoing work for extending one of those systems,
   namely Interface Builder on the NeXT workstation, with musical
   capabilities.
%% ftp: cui.unige.ch:OO-articles/musicalScripting.ps.Z

%L Dami91a
%% CB15
%K olit-reuse chloe oc91 chloe-book
%A Laurent Dami
%T More Functional Reusability in C/C++/Objective-C with Curried Functions
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 85-98
%O Working paper
%X Several mechanisms commonly used in functional programming languages
   can be beneficial in terms of conciseness and reuse potential in more
   traditional programming areas, like applications programming or even
   systems programming.  An implementation of functional operators for the
   C, C++ and Objective-C languages, based on the principle of curried
   functions, is proposed. Its implications in terms of improved power and
   additional cost are examined.  Examples of parameterized function
   generators, function compositions and closures are given. A particular
   section shows how closures of C++/Objective-C objects with their member
   functions can be done with the currying operator.

%L Dami92a
%K olit chloe of92
%A Laurent Dami
%T HOP: Hierarchical Objects with Ports
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 41-77

%L Dami93a
%K olit hop chloe vo93
%A Laurent Dami
%T The HOP Calculus
%R Visual Objects
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1993
%P 151-212
%X A new calculus is presented for modelling object-oriented
   constructs.  The main features of the calculus are: interaction by
   names, unification of types and values, operators for combinations
   and alternations of terms. With a limited set of syntactic
   constructs a surprisingly large range of features can be modelled,
   including not only object-oriented constructs but also abstract data
   types, recursive and dependent types and concurrency. The syntax and
   operational semantics of the calculus are presented, together with
   numerous programming examples. Through comparisons with the lambda
   calculus, we argue that interaction by names is fundamentally more
   expressive than traditional functional abstraction and application.
   In particular, it becomes possible to treat the parameters of an
   abstraction independently while doing a fixed-point operation, which
   is of great convenience for modelling object-oriented systems.
   Finally, an approach to type-checking is presented.  Although not
   totally mature yet, it shows how types and values are merged in a
   single preorder over terms, and how this preorder can be used to
   prevent type errors.

%L Danf88a
%K types olit obib(types)
%A S. Danforth
%A Chris Tomlinson
%T Type Theories and Object-Oriented Programming
%J ACM Computing Surveys
%V 20
%N 1
%D March 1988
%P 29-72

%L Daro87a
%K pcalc equivalence tapsoft87 tccs binder(ccs)
%A Ph. Darondeau
%A B. Gamatie
%T A Fully Observational Model for Infinite Behaviours
   of Communicating Systems
%B Proceedings TAPSOFT '87
%S LNCS 249
%E Ehrig, Kowalski, Levi and Montanari
%I Springer-Verlag
%D 1987
%% 4.0 INT
%P 153-168

%L Dasg86a
%K olit-oopl clouds distribution os oopsla86 obib(sys)
%A Partha Dasgupta
%T A Probe-Based Monitoring Scheme for an Object-Oriented
   Distributed Operating System
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 57-66

%L Dasg91a
%K olit-oopl clouds distribution
%A Partha Dasgupta
%A R.J. LeBlanc, Jr.
%A M. Ahamad
%A U. Ramachandran
%T The Cloads Distributed Operating System
%J IEEE Computer
%V 24
%N 11
%D Nov. 1991
%P 34-44

%L Davi93a
%K olit ieee
%A John Davis
%A Tom Morgan
%T Object-Oriented Development at Brooklyn Union Gas
%J IEEE Software (Special Issue on "Making O-O Work")
%V 10
%N 1
%D Jan 1993
%P 67-74

%L DeMi87a
%K olit-oopl clos ecoop87
%A Linda G. DeMichiel
%A Richard P. Gabriel
%T The Common Lisp Object System: An Overview
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 151-170

%L DeNi87b
%K pcalc equivalence binder
%A Rocco De Nicola
%T Extensional Equivalences for Transition Systems
%J Acta Informatica
%V 24
%D 1987
%P 211-237

%L Deco86a
%K olit-oopl smalltalk distribution oopsla86
%A Dominique Decouchant
%T Design of a Distributed Object Manager for the Smalltalk-80 System
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 444-452

%L Deco91a
%K olit-obcl guide binder
%A D. Decouchant
%A P. Le Dot
%A M. Riveill
%A C. Roisin
%A X. Rousset de Pina
%T A Synchronization Mechanism for an Object-Oriented Distributed System
%B Proceedings of the 11th IEEE Conference on Distributed Computing Systems
%D May 1991

%L Dega88a
%K pcalc ccs
%A P. Degano
%A Rocco De Nicola
%A Ugo Montanari
%T A Distributed Operational Semantics for CCS Based on Condition/Event Systems
%J Acta Informatica
%V 26
%N 1/2
%D 1988
%P 59-92

%L Delc91a
%K olit ecoop91
%A Christine Delcourt
%A Roberto Zicari
%T The Design of an Integrity Consistency Checker (ICC) for an
   Object-Oriented Database System
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 97-117

%L Deme79a
%K fpl russell tfc
%A Alan Demers
%A Jim Donahue
%T Revised Report on Russell
%R TR79-389
%I Department of Computer Science, Cornell University
%C Ithaca, New York
%D 1979

%L Deme80a
%K types fp tfc russell popl80
%A A.J. Demers
%A Jim Donahue
%T ``Type-Completeness'' as a Language Principle
%B Proceedings, POPL 80
%D 1980
%P 234-244

%L Deni84a
%K pcalc equivalence ccs binder(ccs)
%A Rocco de Nicola
%A Matthew Hennessy
%T Testing Equivalences for Processes
%J Theoretical Computer Science
%V 34
%I North-Holland
%D 1984
%P 83-133

%L Deni85a
%K pcalc equivalence csp ccs binder(csp)
%A Rocco de Nicola
%T Two Complete Axiom Systems for a Theory of Communicating Sequential
   Processes
%J Information and Control
%V 64
%D 1985
%P 136-172

%L Deni87a
%K pcalc equivalence tapsoft87 tccs binder(ccs)
%A Rocco de Nicola
%A Matthew Hennessy
%T CCS Without \taus
%B Proceedings TAPSOFT '87
%S LNCS 249
%E Ehrig, Kowalski, Levi and Montanari
%I Springer-Verlag
%D 1987
%% 4.0 INT
%P 138-152

%L Derr85a
%K olit-oodb iris
%A Nigel Derrett
%A William Kent
%A P. Lyngbaek
%T Some Aspects of Operations in an Object-Oriented Database
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 66-74

%L Deut76a
%K olit memory lisp
%A L. Peter Deutsch
%A Daniel G. Bobrow
%T An Efficient, Incremental Garbage Collector
%J CACM
%V 19
%N 9
%D Sept 1976
%P 522-526

%L Deut84a
%K olit-oopl smalltalk casais popl84
%A L. Peter Deutsch
%A Allan M. Schiffman
%T Efficient Implementation of the Smalltalk-80 system
%B Proceedings POPL '84
%C Salt Lake City, Utah
%D Jan. 15-18 1984

%L Deut89a
%K olit smalltalk ecoop89
%A L. Peter Deutsch
%T The Past, Present and Future of Smalltalk
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 73-87

%L Deva91a
%K olit
%A P. Devanbu
%A R. Brachman
%A P. Selfridge
%A B. Ballard
%T LaSSIE: A Knowledge-Based Software Information System
%J CACM
%V 34
%N 5
%D May 1991
%P 34-49

%L Dewh87a
%K olit ecoop87
%A S.C. Dewhurst
%T Object Representation of Scope During Translation
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 71-78

%L Died87a
%K olit oopsla87
%A Jim Diederich
%A Jack Milton
%T An Object-Oriented Design System Shell
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 61-77

%L Died88a
%K olit-oodb design oocda89
%A Jim Diederich
%A Jack Milton
%T Objects, Messages and Rules in Database Design
%B Object-Oriented Concepts, Databases and Applications
%E W. Kim and F. Lochovsky
%I ACM Press and Addison-Wesley
%D 1989
%P 177-197

%L Diet89a
%K olit oopsla89
%A Walter C. Dietrich, Jr.
%A Lee R. Nackman
%A Franklin Gracer
%T Saving a Legacy With Objects
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 77-84

%L Dijk68a
%K concurrency
%A Edsgar W. Dijkstra
%T Co-operating Sequential Processes
%B Programming Languages
%E F. Genuys
%I Academic Press
%C New York
%D 1968
%P 43-112

%L Dijk75a
%K concurrency
%A Edsgar W. Dijkstra
%T Guarded commands, nondeterminacy, and formal derivation of programs
%J CACM
%V 18
%N 8
%D Aug 1975
%P 453-457

%L Dijk78a
%K concurrency memory
%A Edsgar W. Dijkstra
%A Leslie Lamport
%A A.J. Martin
%A C.S. Scholten
%A E.F.M. Steffens
%T On-the-Fly Garbage Collection: An Exercise in Cooperation
%J CACM
%V 21
%N 11
%D Nov 1978

%L Diko92a
%K olit-oopl gee binder (shelf)
%A Marc Dik\:otter
%T Le Calcul des Accepteurs: Une Approache Uniforme de l'Abstraction
%I Ecole Polytechnique F\'ed\'erale de Lausanne (EPFL)
%D 1992

%L Dixo89a
%K olit-oopl arjuna ecoop89
%A G.N. Dixon
%A Graham D. Parrington
%A Santosh K. Shrivastava
%A Stuart M. Wheater
%T The Treatment of Persistent Objects in Arjuna
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 169-189

%L Dixo89b
%K olit-inheritance oopsla89
%A R. Dixon
%A T. McKee
%A M. Vaughan
%A Paul Schweizer
%T A Fast Method Dispatcher for Compiled Languages with Multiple Inheritance
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 211-214

%L Doda92a
%K types olit ecoop92
%A Mahesh Dodani
%A Chung-Shin Tsai
%T ACTS: A Type System for Object-Oriented Programming Based on
   Abstract and Concrete Classes
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 309-328

%L Doi88a
%K olit-obc ecoop88
%A Norihisa Doi
%A Yasushi Kodama
%A Ken Hirose
%T An Implementation of an Operating System Kernel Using Concurrent
   Object-Oriented Language ABCL/c+
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 250-266

%L Dona76a
%K pl-semantics
%A Jim Donahue
%T Complementary Definitions of Programming Language Semantics
%S LNCS 42
%E G. Goos and J. Hartmanis
%I Springer-Verlag
%D 1976

%L Dona85a
%K plang mesa
%A Jim Donahue
%T Integration Mechanisms in Cedar
%J Proceedings ACM SIGPLAN 85 Symposium on Language Issues
   in Programming Environments, ACM SIGPLAN Notices
%V 20
%N 7
%D July 1985
%P 245-251

%L Dona85b
%K types fpl russell tfc binder
%A Jim Donahue
%A Alan Demers
%T Data Types are Values
%J Transactions on Programming Languages and Systems
%V 7
%N 3
%D 1985
%P 426-445

%L Dony88a
%K olit ecoop88 exceptions
%A Christophe Dony
%T An Object-Oriented Exception Handling System for an Object-Oriented Language
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 146-161

%L Dony90a
%K olit oopsla90 ecoop90
%A Christophe Dony
%T Exception Handling and Object-Oriented Programming: Towards a Synthesis
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 322-330

%L Dony92a
%K olit oopsla92
%A Christophe Dony
%A Jacques Malenfant
%A Pierre Cointe
%T Prototype-Based Languages: From a New Taxonomy to Constructive Proposals
   and Their Validation
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 201-217

%L Dubo87a
%K concurrency logic binder
%A Eric Dubois
%A Jacques Hagelstein
%T Reasoning on Formal Requirements: A Lift Control System
%B Proceedings of the Fourth International Workshop on Software Specifications
   and Design
%C Monterey, CA
%D April 3-4, 1987

%L Dubo93a
%K olit ecoop93
%A Eric Dubois
%A Philippe Du Bois
%A Micha\:el Petit
%T O-O Requirements Analysis: an Agent Perspective
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 458-482
%X In this paper, we present a formal object-oriented
   specification language designed for capturing requirements expressed
   on composite real-time systems.  The specification describes the
   system as a society of `agents', each of them being characterised
   (i) by its responsibility with respect to actions happening in the
   system and (ii) by its time-varying perception of the behaviour of
   the other agents. On top of the language, we also suggest some
   methodological guidance by considering a general strategy based on a
   progressive assignement of responsibilities to agents.

%L Duco87a
%K olit-inheritance ecoop87
%A R. Ducournau
%A Michel Habib
%T On Some Algorithms for Multiple Inheritance in Object-Oriented Programming
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 243-252

%L Duco92a
%K olit oopsla92
%A R. Ducournau
%A M. Habib
%A M. Huchard
%A M.L. Mugnier
%T Monotonic Conflict Resolution Mechanisms for Inheritance
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 16-24

%L Duhl88a
%K olit oopsla88
%A Joshua Duhl
%A Craig Damon
%T A Performance Comparison of Object and Relational Databases
   Using the Sun Benchmark
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 153-163

%L Duss89a
%K olit oopsla89
%A Patrick H. Dussud
%T TICLOS: An Implementation of CLOS for the Explorer Family
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 215-220

%L ECMA83a
%K olit-appl oda ois documents
%Q ECMA
%T Office Document Architecture
%R TC 29/83/56, Fourth Working Draft
%D 1983

%L Edel88a
%K visprog ptyping
%A M. Edel
%T The Tinkertoy Graphical Programming Environment
%J IEEE Trans on Software Engineering
%V SE-14
%N 8
%D August 1988
%P 1110-1115

%L Eert91a
%K pcalc lotos binder
%A Henk Eertink
%A Dietmar Wolz
%T Symbolic Execution of LOTOS Specifications
%R Memoranda Informatica 91-47, TIOS 91/016
%I University of Twente
%D May 1991

%L Egbe92a
%K olit-oopl ieee
%A Parris K. Egbert
%A William J. Kubitz
%T Application Graphics Modeling Support Through Object Orientation
%J IEEE Computer (Special Issue on Inheritance & Classification)
%V 25
%N 10
%D Oct 1992
%P 84-91

%L Ege87a
%K olit ecoop87
%A Raimund K. Ege
%A David Maier
%T The Filter Browser Defining Interfaces Graphically
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 140-150

%L Egge92a
%K olit oopsla92
%A Thomas Eggenschwiler
%A Erich Gamma
%T ET++ Swaps Manager: Using Object Technology in the Financial Engineering
   Domain
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 166-177

%L Ehri90a
%K concurrency binder
%A H-D. Ehrich
%A Joseph A. Goguen
%A Amilcar Sernadas
%T A Categorical Theory of Objects as Observed Processes
%B Proc. REX/FOOLS Workshop
%C Noordwijkerhout
%D June 1990
%O to appear

%L Elli80a
%K oislit survey
%A Clarence Ellis
%A Gary J. Nutt
%T Computer Science and Office Information Systems
%J ACM Computing Surveys
%V 12
%N 1
%D March 1980
%P 27-60

%L Elli82a
%K oislit officetalk
%A Clarence Ellis
%A M. Bernal
%T OfficeTalk-D: An Experimental Office Information System
%B Proceedings First ACM SIGOA Conference
%C Philadelphia
%D June 1982
%P 131-140

%L Elli92a
%K oislit survey binder
%A Clarence Ellis
%A Gary J. Nutt
%T The Modelling and Analysis of Coordination Systems
%R Technical Report
%I University of Colorado
%D 1992

%L Engb86a
%K pcalc mobility eccs
%A Uffe Engberg
%A M. Nielsen
%T A Calculus of Communicating Systems with Label Passing
%R DAIMI PB-208
%I University of Aarhus
%D 1986

%L Engb90a
%K concurrency petri nets linear logic binder(conc) caap90
%A Uffe Engberg
%A Glynn Winskel
%T Petri Nets as Models of Linear Logic
%B Proceedings CAAP '90
%E A. Arnold
%I Springer-Verlag
%S LNCS 431
%C Copenhagen
%D May 1990
%% 5.32 CAA
%P 147-161

%L Epst88a
%K olit oopsla88
%A Danny Epstein
%A Wilf R. LaLonde
%T A Smalltalk Window System Based on Constraints
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 83-94

%L Ewin86a
%K olit-appl unix smalltalk oopsla86
%A Juanita J. Ewing
%T An Object-Oriented Operating System Interface
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 46-56

%L Fabr74a
%K security olit capabilities
%A R.S. Fabry
%T Capability-Based Addressing
%J CACM
%V 17
%N 7
%D July 1974
%P 403-412

%L Farr82a
%K compiler generator linguist-86 patterns
%A R. Farrow
%T LINGUIST-86: Yet Another Translator Writing System Based
   on Attribute Grammars
%J ACM SIGPLAN Notices, Proceedings 1982 Symposium
   on Compiler Construction
%V 17
%N 6
%D June 1982
%P 160-171

%L Faus90a
%K olit oopsla90 ecoop90
%A John E. Faust
%A Henry M. Levy
%T The Performance of an Object-Oriented Threads Package
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 278-288

%L Feel92a
%K olit oopsla92
%A Michael J. Feeley
%A Henry M. Levy
%T Distributed Shared Memory with Versioned Objects
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 247-262

%L Feld79a
%K misc modules messages
%A J.A. Feldman
%T High Level Programming for Distributed Computing
%J CACM
%V 22
%N 6
%D June 1979

%L Fent89a
%K olit oopsla89
%A Jay Fenton
%A Kent Beck
%T Playground: An Object-Oriented Simulation System With Agent Rules
   for Children of All Ages
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 123-138

%L Ferb83a
%K olit-obc messages actors
%A Jacques Ferber
%T MERING, un langage d'acteurs pour la representation
   et la manipulation de connaissances
%R These de docteur ingenieur
%I Universite de Paris VI
%D Dec 1983

%L Ferb89a
%K olit oopsla89
%A Jacques Ferber
%T Computational Reflection in Class-Based Object-Oriented Languages
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 317-326

%L Ferr82a
%K oislit constraints sedl forms
%A J.C. Ferrans
%T SEDL -- A Language for Specifying Integrity Constraints on Office Forms
%B Proceedings of the First ACM SIGOA Conference
%D 1982
%P 123-130

%L Ferr89a
%K olit oopsla89
%A Patrick J. Ferrel
%A Robert F. Meyer
%T Vamp: The Aldus Application Framework
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 185-190

%L Ferr90a
%K pcalc ccs binder(ccs) caap90
%A Gian Luigi Ferrari
%A Ugo Montanari
%T Towards the Unification of Models of Concurrency
%B Proceedings CAAP '90
%E A. Arnold
%I Springer-Verlag
%S LNCS 431
%C Copenhagen
%D May 1990
%% 5.32 CAA
%P 162-176

%L Fich92a
%K olit-oopl ieee
%A Robert G. Fichman
%A Chris F. Kemerer
%T Object-Oriented and Conventional Analysis and Design Methodologies
%J IEEE Computer (Special Issue on Inheritance & Classification)
%V 25
%N 10
%D Oct 1992
%P 22-39

%L Film87a
%K olit oopsla87
%A Robert E. Filman
%T Retrofitting Objects
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 342-353

%L Finz84a
%K visprog ptyping
%A W. Finzer
%A L. Gould
%T Programming by Rehearsal
%J BYTE
%V 9
%N 6
%D June 1984
%P 187-210

%L Fish87a
%K olit-oodb iris obib(oodb)
%A D.H. Fishman
%A David Beech
%A H.P. Cate
%A E.C. Chow
%A T. Connors
%A J.W. Davis
%A Nigel Derrett
%A C.G. Hoch
%A William Kent
%A P. Lyngbaek
%A B. Mahbod
%A M.A. Neimat
%A T.A. Ryan
%A M.C. Shan
%T Iris: An Object-Oriented Database Management System
%J ACM TOOIS
%V 5
%N 1
%D Jan 1987
%P 48-69

%L Fium83a
%K uilit olit uims
%A Eugene Fiume
%T A Programming Environment for Constructing Graphical User
   Interfaces: A Proposal
%R M.Sc thesis
%I Department of Computer Science, University of Toronto
%D 1983

%L Fium87a
%K olit-appl animation chloe-ftp oat87
%A Eugene Fiume
%A Dennis Tsichritzis
%A Laurent Dami
%T A Temporal Scripting Language for Object-Oriented Animation
%B Proceedings of Eurographics 1987 (North-Holland)
%I Elsevier Science Publishers
%C Amsterdam
%D 1987
%% MIR
%X Object orientation and concurrency are inherent to computer
   animation. Since the pieces of an animation can come from various
   media such as computer-generated imagery, video, and sound, the case
   for object orientation is all the stronger. However, languages for
   expressing the temporal co-ordination of animated objects have been
   slow in coming. We present such a language in this paper. Since the
   movements that an animated object can perform are also encapsulated
   as objects in our system, the scripting language can also be used to
   specify motion co-ordination. Such "motion objects" can be applied
   to any animated object. The syntax, semantics, and implementation of
   this language will be described, and we shall show how to specify
   device-independent computer animation.
%% ftp: cui.unige.ch:OO-articles/temporalScripting.ps.Z

%L Fium87b
%K olit-appl multimedia objects chloe oat87
%A Eugene Fiume
%A Dennis Tsichritzis
%T Multimedia objects
%J IEEE Office Knowledge Engineering Newsletter
%V 1
%N 1
%D Feb. 1987

%L Fium87c
%K olit chloe oat87
%A Eugene Fiume
%T An Attempt at Formal Specifications For a Non-Trivial Object
%R Objects and Things
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D March 1987
%P 149-164

%L Fium87d
%K olit-oopl multimedia scripts chloe aoe88
%A Eugene Fiume
%A Dennis Tsichritzis
%T Dynamic Multimedia Objects
%J Workshop for Multimedia Objects
%C Taormina, Sicily
%D June 15-17, 1987

%L Fole82a
%K misc graphics
%A J.D. Foley
%A Andy van Dam
%T Fundamentals of Interactive Computer Graphics
%S The Systems Programming Series
%I Addison Wesley Publishing Company
%D 1982

%L Fole86a
%K visprog
%A J.D. Foley
%A C.F. McMath
%T Dynamic Process Visualization
%J IEEE Computer Graphics and Applications
%V 6
%N 2
%D March 1986
%P 16-25

%L Fole86b
%K uilit
%T Special Issues on User Interface Software
%E J. Foley
%J ACM Transactions on Graphics
%V 5
%N 2-4
%D 1986

%L Foot89a
%K olit oopsla89
%A Brian Foote
%A Ralph E. Johnson
%T Reflective Facilities in Smalltalk-80
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 327-336

%L Forc91a
%K olit chloe oc91
%A Dennis Tsichritzis
%A G. Capriz
%A Emmanuel de Robien
%A Simon Gibbs
%A B. Gaissmaier
%A Brian Oakley
%A N. Szyperski
%A R. Varenne
%T ESSI: The European Software and Systems Initiative
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 323-329
%X This report was prepared for the Esprit Advisory Board. It
   constitutes a general advice of the ESPRIT Advisory Board to the
   Commission of the European Communities and does not describe the
   precise modalities of implementation.

%L Fras80a
%K uilit text
%A C.W. Fraser
%T A Generalized Text Editor
%J CACM
%V 23
%N 3
%D March 1980
%P 154-158

%L Fras81a
%K uilit text
%A C.W. Fraser
%T Syntax-Directed Editing of General Data Structures
%B Proceedings of the ACM Symposium on Text Manipulation
%D June 1981
%P 17-21

%L Freb87a
%K olit oopsla87
%A Karl Freburger
%T RAPID: Prototyping Control Panel Interfaces
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 416-422

%L Free89a
%K olit oopsla89
%A Bjorn N. Freeman-Benson
%T A Module Mechanism for Constraints in Smalltalk
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 389-396

%L Free90a
%K olit oopsla90 ecoop90
%A Bjorn N. Freeman-Benson
%T Kaleidoscope: Mixing Objects, Constraints and Imperative Programming
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 77-88

%L Free92a
%K olit-oopl kaleidoscope ecoop92
%A Bjorn N. Freeman-Benson
%A Alan Borning
%T Integrating Constraints with an Object-Oriented Language
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 268-286

%L Frie89a
%K olit-oopl objview ecoop89
%A Gerhard Friedrich
%A Wolfgang H\:ollinger
%A Christian Stary
%A Markus Stumptner
%T ObjView: A Task-Oriented, Graphics-Based Tools for Object Visualization
   and Arrangement
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 299-310

%L Frol92a
%K olit-obc ecoop92
%A Svend Fr\/olund
%T Inheritance of Synchronization Constraints in
   Concurrent Object-Oriented Programming Languages
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 185-196

%L Frol93a
%K olit ecoop93
%A Svend Fr\/olund
%A Gul Agha
%T A Language Framework for Multi-Object Coordination
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 346-360
%X We have developed language support for the expression of
   multi-object coordination. In our language, coordination patterns
   can be specified abstractly, independent of the protocols needed to
   implement them.  Coordination patterns are expressed in the form of
   constraints that restrict invocation of a group of objects.
   Constraints are defined in terms of the interface of the objects
   being invoked rather than their internal representation. Invocation
   constraints enforce properties, such as temporal ordering and
   atomicity, that hold when invoking objects in a group. A constraint
   can permanently control access to a group of objects, thereby
   expressing an inherent access restriction associated with the
   group.  Furthermore, a constraint can temporarily enforce access
   restrictions during the activity of individual clients.  In that
   way, constraints can express specialized access schemes required by
   a group of clients.

%L From91a
%K olit-oopl explore/l binder (shelf)
%A Markus Fromherz
%T Explore/L -- An Object-Oriented Logic Language
%R Report 91.06
%I University of Zurich
%D June 1991

%L Fugi90a
%K olit-ithaca recast caise90
%A Mariagrazia Fugini
%A Barbara Pernici
%T RECAST: a tool for reusing requirements
%B Proceedings CAiSE '90
%S LNCS 436
%I Springer Verlag
%D 1990

%L Fugi90b
%K olit-ithaca recast caise91
%A Mariagrazia Fugini
%A M. Guggino
%A Barbara Pernici
%T Reusing Requirements Through a Modeling and Composition Support Tool
%O Accepted to CAiSE '91
%C Trondheim
%D May 1991

%L Fugi92a
%K olit-ithaca recast vista oke chloe-ftp oc91
%A Mariagrazia Fugini
%A Oscar Nierstrasz
%A Barbara Pernici
%T Application Development Through Reuse: The ITHACA Tools Environment
%J SIGOIS Bulletin
%V 13
%N 2
%D Aug. 1992
%P 38-47
%X This paper presents the architecture and basic features of the
   Ithaca Application Development Environment based on a Software
   Information System for enhancing reusability of both software
   components and artifacts about development of these components.
   Object-oriented techniques are used in the Environment at all levels of
   the development of an application: requirement specification,
   scripting, implementation through class refinement and tailoring.  In
   the Environment, it is tracked how the various products of the
   development phases were produced by providing tools for the Application
   Engineer who is responsible for abstracting application skeletons and
   development information and storing these as Application Frames into a
   Software Information Base. In particular, the paper describes the
   Requirement Collection And Specification Tool (RECAST) and the Visual
   Scripting Tool (Vista) of the Ithaca Development Environment.
%% REPORT
%% ftp: cui.unige.ch:OO-articles/appDevThroughReuse.ps.Z

%L Fuji84a
%K misc hardware
%A L. Fujitani
%T Laser Optical Disk: The Coming Revolution in On-Line Storage
%J CACM
%V 27
%N 6
%D June 1984
%P 546-554

%L Fuku86a
%K olit-oopl spool prolog oopsla86
%A Koichi Fukunaga
%A Shin-ichi Hirose
%T An Experience with a Prolog-based Object-Oriented Language
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 224-231

%L Furu82a
%K misc documents formatting
%A R. Furuta
%A J. Scofield
%A Alan Shaw
%T Document Formatting Systems: Survey, Concepts and Issues
%J ACM Computing Surveys
%V 14
%N 3
%D Sept 1982
%P 417-472

%L Gabe92a
%K olit ecoop92
%A Bent Gabelgaard
%T Using Object-Oriented Programming Techniques for Implementing ISDN
   Supplementary Services
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 213-232

%L Gall87a
%K olit seelit pcte
%A F. Gallo
%A R. Minot
%A I. Thomas
%T The Object Management System of PCTE as a Software Engineering
   Database Management System
%J ACM SIGPLAN Notices
%V 22
%N 1
%D January 1987
%P 12-15

%L Gamm89a
%K olit-oopl et++ ecoop89
%A Erich Gamma
%A Andr\'e Weinand
%A Rudolph Marty
%T Integration of a Programming Environment into ET++ -- A Case Study
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 283-297

%L Gamm93a
%K olit ecoop93
%A Erich Gamma
%A Richard Helm
%A John Vlissides
%A Ralph E. Johnson
%T Design Patterns: Abstraction and Reuse of Object-Oriented Design
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 406-431
%X We propose design patterns as a new mechanism for expressing
   object-oriented design experience.  Design patterns identify, name,
   and abstract common themes in object-oriented design.  They capture
   the intent behind a design by identifying objects, their
   collaborations, and the distribution of responsibilities.  Design
   patterns play many roles in the object-oriented development
   process:  they provide a common vocabulary for design, they reduce
   system complexity by naming and defining abstractions, they
   constitute a base of experience for building reusable software, and
   they act as building blocks from which more complex designs can be
   built.  Design patterns can be considered reusable
   micro-architectures that contribute to an overall system
   architecture.  We describe how to express and organize design
   patterns and introduce a catalog of design patterns.  We also
   describe our experience in applying design patterns to the design of
   object-oriented systems.

%L Gang89a
%K olit-reuse binder
%A Dipayan Gangopadhyay
%A A. Richard Helm
%T A Domain Model Driven Approach for Representing and Implementing
   Knowledge about Reusable Object-Oriented Software Classes
%B IBM PADT ITL Conference
%C Dallas, TX
%D July 1989

%L Gang89b
%K olit-reuse binder
%A Dipayan Gangopadhyay
%A A. Richard Helm
%T A Domain Model Driven Approach for the Reuse of Classes from Domain
   Specific Object-Oriented Class Repositories
%R RC 14510 (#64975)
%I IBM Research Division, Yorktown Heights
%D March 1989

%L Gang93a
%K olit ecoop93
%A Dipayan Gangopadhyay
%A Subrata Mitra
%T ObjChart: Tangible Specification of Reactive Object Behavior
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 432-457
%X ObjChart is a new visual formalism to specify objects and their
   reactive behavior. A system is specified as a collection of
   asynchronously communicating objects arranged in a part-of
   hierarchy, where the reactive behavior of each object is described
   by a finite state machine. Value propagation is effected using
   functional invariants over attributes of objects. A compositional
   semantics for concurrent object behavior is sketched using the
   equational framework of Misra.  In contrast to other Object Oriented
   modeling notations, ObjChart uses object decomposition as the single
   refinement paradigm, maintains orthogonality between control flow
   and value propagation, introduces Sequence object which embodies
   structural induction, and allows tracing causality chains in time
   linear in the size of the system.  ObjChart's minimality of
   notations and precise semantics make ObjChart models of systems
   coherent and executable.

%L Ganz82a
%K compiler generator mug2 patterns
%A H. Ganzinger
%A R. Giegerich
%A U. M\:oncke
%A Robert Wilhelm
%T A Truly Generative Semantics-Directed Compiler Generator
%J ACM SIGPLAN Notices, Proceedings 1982 Symposium
   on Compiler Construction
%V 17
%N 6
%D June 1982
%P 172-184

%L Gare79a
%K misc complexity book
%A M.R. Garey
%A D.S. Johnson
%T Computers and Intractability: A Guide to the Theory of NP-completeness
%I Freeman
%C San Francisco
%D 1979

%L Garr86a
%K olit-appl interval time oopsla86
%A L. Nancy Garrett
%A Karen E. Smith
%T Building a Timeline Editor from Prefab Parts:
   The Architecture of an Object-Oriented Application
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 202-213

%L Gay93a
%K pcalc mobility (uwe)
%% INPROCEEDINGS
%A Simon Gay
%T A Sort Inference Algorithm for the Polyadic \pi-Calculus
%B Principles of Programming Languages
%I ACM
%D 1993

%L Geha82a
%K oislit forms
%A N. Gehani
%T The Potential of Forms in Office Automation
%J IEEE Transactions on Communications
%V Com-30
%N 1
%D Jan 1982
%P 120-125

%L Geno89a
%K olit-obcl dragoon tools89 binder
%A Stefano Genolini
%A Andrea Di Maio
%A Cinzia Cardigno
%A Stephen Goldsack
%A Colin Atkinson
%T Specifying Synchronisation Constraints in a
   Concurrent Object-Oriented Language
%B Proceedings TOOLS '89
%D Nov. 1989

%L Gent81a
%K olit-obc messages thoth binder
%A Morven Gentleman
%T Message Passing Between Sequential Processes:
   the Reply Primitive and the Administrator Concept
%J Software -- Practice and Experience
%V 11
%D 1981
%P 435-466

%L Gepp92a
%K olit-oodb kids binder
%A Andreas Geppert
%T On the Architecture of Generated DBMS and DBMS Generators, or:
   Can Kids Generate DBMS
%R draft
%I Universit\:at Z\:urich
%D May 1992

%L Gepp92b
%K olit-oodb binder
%A Andreas Geppert
%A Klaus Dittrich
%T Constructing the Next 100 Database Management Systems:
   Like the Handyman or Like the Engineer?
%R draft
%I Universit\:at Z\:urich
%D Nov. 1992

%L Gepp92c
%K olit-oodb binder
%A Andreas Geppert
%T Specification and Realization of Transaction Management Subsystems
   in Configurable Database Management Systems
%R draft
%I Universit\:at Z\:urich
%D July 1992

%L Gerb77a
%K concurrency synchronization binder
%A A.J. Gerber
%T Process Synchronization by Counter Variables
%J ACM Operating Systems Review
%V 11
%N 4
%D Oct. 1977
%P 6-17

%L Gesc77a
%K olit-oopl mesa
%A C.M. Geschke
%A J.H. Morris, Jr.
%A E.H. Satterthwaite
%T Early Experience with Mesa
%J CACM
%V 20
%N 8
%D Aug 1977
%P 540-553

%L Ghel91a
%K types olit oopsla91
%A Giorgio Ghelli
%T A Static Type System for Message Passing
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 129-145

%L Giac89a
%K concurrency facile tapsoft89 binder
%A Alessandro Giacalone
%A Prateek Mishra
%A Sanjiv Prasad
%T FACILE: A Symmetric Integration of Concurrent and Functional Programming
%B Proceedings TAPSOFT '89
%S LNCS 351
%E D\'iaz and Orejas
%I Springer-Verlag
%D 1989
%% 4.0 INT
%P 184-209

%L Gibb79a
%K oislit ofs forms networks
%A Simon Gibbs
%T OFS: An Office Form System for a Network Architecture
%R M.Sc. Thesis
%I Department of Computer Science, University of Toronto
%D 1979

%L Gibb82a
%K olit ois
%A Simon Gibbs
%T Office Information Models and the Representation of `Office Objects'
%J Proceedings ACM SIGOA
%C Philadelphia
%D June 1982
%P 21-26

%L Gibb83a
%K oislit db
%A Simon Gibbs
%A Dennis Tsichritzis
%T A Data Modelling Approach for Office Information Systems
%J ACM TOOIS
%V 1
%N 3
%D 1983
%P 299-319

%L Gibb84a
%K olit ois
%A Simon Gibbs
%T An Object-Oriented Office Data Model
%R CSRG Technical Report 154
%I University of Toronto
%D 1984

%L Gibb87a
%K misc mmlit muse
%A Simon Gibbs
%A Dennis Tsichritzis
%A Akis Fitas
%A Dimitri Konstantas
%A Yannis Yeorgaroudakis
%T Muse: A Multimedia Filing System
%J IEEE Software
%D March 1987
%P 4-15

%L Gibb89a
%K olit chloe ood89
%A Simon Gibbs
%T CSCW and Software Engineering
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 31-40

%L Gibb89b
%K olit chloe ood89
%A Simon Gibbs
%A Vassili Prevelakis
%A Dennis Tsichritzis
%T Software Information Systems: A Software Community Perspective
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 41-59

%L Gibb89c
%K olit liza
%A Simon Gibbs
%T LIZA: An extensible groupware toolkit
%B Proceedings of the ACM SIGCHI Conference on Human Factors in
   Computing Systems
%C Austin, Texas
%I ACM, New York
%D April 30 - May 4, 1989
%P 29-35

%L Gibb90a
%% CB09
%K olit-reuse chloe-ftp om90 chloe-book
%A Simon Gibbs
%A Dennis Tsichritzis
%A Eduardo Casais
%A Oscar Nierstrasz
%A Xavier Pintado
%T Class Management for Software Communities
%J Communications of the ACM
%V 33
%N 9
%D Sept 1990
%P 90-103
%X Object-oriented programming is considered in the context of software
   communities -- groups of designers and developers sharing knowledge and
   experience. One way of fostering reuse of this experience is by
   establishing large collections of reusable object classes. Resulting
   problems include: Class packaging and class organization -- how can
   classes and their methods be represented to simplify reuse. Class
   selection and exploration -- what query and browsing facilities are
   needed by developers in order to facilitate software reuse. Class
   evolution -- how may the class hierarchy be reorganized as a result of
   changes introduced by developers. These issues are illustrated by
   examining prototype tools and systems intended to aid object-oriented
   programming.
%% MIR
%% JOURNAL
%% ftp: cui.unige.ch:OO-articles/classManagement.ps.Z

%L Gibb90b
%K olit-reuse chloe om90
%A Simon Gibbs
%A Dennis Tsichritzis
%T Software Licensing versus Software Reuse
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 107-115
%X Various software pricing mechanisms are considered in the context of
   large-scale reuse. It is argued that the current practice of software
   licensing hinders reuse and that a more flexible and lightweight
   mechanism is needed.

%L Gibb90c
%K olit-reuse chloe-ftp om90
%A Simon Gibbs
%T Querying Large Class Collections
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 63-77
%X Object-oriented programming and the reuse of classes and methods,
   when practised on a large scale by communities of programmers and
   designers sharing software components, will lead to the creation of
   very large class collections. In such a context, facilities for
   querying a class collection become important. This paper presents an
   object-oriented data model, Xos, which can be used to logically
   organize and describe a class collection in a form suitable for
   querying. An extended example based on modelling C++ is given.
%% ftp: cui.unige.ch:OO-articles/queryingLargeClass.ps.Z

%L Gibb90d
%K olit xos chloe om90
%A Simon Gibbs
%A Vassili Prevelakis
%T Xos: An Overview
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 37-62
%X This paper describes Xos, an object-oriented data model designed for
   representing software information. The paper covers the design of Xos,
   describes its functionality, and gives an indication of the current
   status of the implementation effort.

%L Gibb91a
%K olit chloe oc91
%A Simon Gibbs
%A Laurent Dami
%A Dennis Tsichritzis
%T An Object-Oriented Framework for Multimedia Composition and Synchronisation
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 133-143
%O A version of this paper appeared in the Eurographics Multimedia Workshop,
   Stockholm, 1991.
%X Composition and synchronisation are discussed within an
   object-oriented framework for programming multimedia applications. The
   framework is based on a conceptual model of inter-connectable
   multimedia components and can be used to construct complex multimedia
   applications involving audio, video and graphics.

%L Gibb91b
%% CB17
%K olit chloe oopsla91 chloe-book
%A Simon Gibbs
%T Composite Multimedia and Active Objects
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 97-112
%X An object-oriented framework for composite multimedia is described.
   In analogy to constructing complex graphics entities from graphics
   primitives and geometric transformations, composite multimedia is
   constructed from multimedia primitives and temporal
   transformations.  Active objects based on real-time processes are
   proposed as multimedia primitives. Their combination to form
   composite multimedia and the requisite temporal transformations are
   illustrated.

%L Gibb91c
%K olit chloe of92
%A Simon Gibbs
%A Christian Breiteneder
%A Laurent Dami
%A Vicki de Mey
%A Dennis Tsichritzis
%T A Programming Environment for Multimedia Applications
%B Proceedings of the Second International Workshop on
   Network and Operating System Support for Digital Audio and Video
%C Heidelberg
%D 1991

%L Gibb92a
%K olit chloe vo93
%A Simon Gibbs
%T Application Construction and Component Design in an Object-Oriented
   Multimedia Framework
%B Proceedings of the Third International Workshop on
   Network and Operating System Support for Digital Audio and Video
%D 1992
%X An approach to constructing multimedia applications by connecting
   groups of high-level components is presented. The components, and
   their connections, are software abstractions provided by an
   object-oriented multimedia framework - a set of related classes that
   provide basic functionality and composition mechanisms.  Several
   examples of components and a working application constructed using
   these components are described. We also consider design issues when
   components are used under a wide range of conditions.

%L Gibb93a
%% CB18
%K olit chloe of92 chloe-book
%A Simon Gibbs
%A Christian Breiteneder
%A Dennis Tsichritzis
%T Audio/Video Databases: An Object-Oriented Approach
%B Proceedings of the 9th International Conference on Data Engineering
%I IEEE Computer Society Press
%C Vienna
%D 1993
%O to appear
%X The notion of an audio/video, or AV, database is introduced. An AV
   database is a collection of AV values (digital audio and video data)
   and AV activities (interconnectable components used to process AV
   values). Two abstraction mechanisms, temporal composition and flow
   composition, allow the aggregation of AV values and AV activities
   respectively. An object-oriented framework, incorporating an AV data
   model and prescribing AV database/application interaction, is
   described.

%L Gibb93b
%K olit xos chloe vo93
%A Simon Gibbs
%A Christian Breiteneder
%A Dennis Tsichritzis
%T Data Modeling of Time-Based Media
%R Visual Objects
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1993
%P 1-21
%X Many aspects of time-based media - complex data encoding,
   compression, "quality factors," timing - appear problematic from a
   data modeling standpoint. This paper proposes timed streams as the
   basic abstraction for modeling time-based media.  Several
   media-independent structuring mechanisms are introduced and a data
   model is presented which, rather than leaving the interpretation of
   multimedia data to applications, addresses the complex organization
   and relationships present in multimedia.

%L Gibb93c
%K olit chloe vo93
%A Simon Gibbs
%A Christian Breiteneder
%A Vicki de Mey
%A Michael Papathomas
%T Video Widgets and Video Actors
%R Visual Objects
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1993
%P 51-64
%X Video widgets are user-interface components that are rendered using
   video information.  The implementation and several usage examples of
   a family of video widgets, called video actors, are presented. Video
   actors rely on two capabilities of digital video: non-linear access,
   and the composition and layering of video information.

%L Gilb88a
%K olit-oodb ecoop88
%A Jonathan P. Gilbert
%A Lubomir Bic
%T Asynchronous Data Retrieval from an Object-Oriented Database
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 335-349

%L Gira87a
%K linear-logic binder (shelf)
%A Jean-Yves Girard
%T Linear Logic
%J Theoretical Computer Science
%V 50
%I North-Holland
%D 1987
%P 1-102

%L Gira87b
%K concurrency linear logic binder
%A Jean-Yves Girard
%T Linear Logic and Parallelism
%B Mathematical Models for the Semantics of Parallelism
%E M. Zilli
%S LNCS 280
%I Springer Verlag
%D 1987
%P 166-182

%L Gira88a
%K linear-logic binder
%A Jean-Yves Girard
%T Towards a Geometry of Interaction
%D April 1988

%L Gira92a
%K olit-reuse chloe of92
%A Rosario Girardi
%T Application Engineering: Putting Reuse to Work
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 137-149

%L Gira92b
%K olit-reuse binder
%A Rosario Girardi
%A Bertrand Ibrahim
%T New Approaches for Reuse Systems
%R draft
%I Centre Universitaire d'Informatique, University of Geneva
%D 1992
%O submitted for publication

%L Glab90a
%K pcalc equivalence concur90 binder
%A R.J. van Glabbeek
%T The Linear Time - Branching Time Spectrum
%B Proceedings of CONCUR'90
%E J.C.M. Baeten and J.W. Klop
%S LNCS 458
%I Springer-Verlag
%D 1990
%P 278-297
%% Cote:  F.1.2 CON

%L Glau91a
%K pcalc ccs binder
%A J. Glauert
%A Lone Leth
%A Bent Thomsen
%T A New Translation of Functions as Processes
%R Draft
%I University of East Anglia
%D Sept. 30, 1991

%L Gloo89a
%K concurrency distribution binder (shelf)
%A Peter Gloor
%T Synchronisation in verteilten Systemen
%R Ph.D. thesis, University of Zurich
%I B.G. Teubner, Stuttgart
%D 1989

%L Goer89a
%K visprog olit obc garp binder(visprog)
%A Steven K. Goering
%A Simon M. Kaplan
%T Visual Concurrent Programming in GARP
%B Proceedings PARLE '89, Vol II
%S LNCS 366
%E E. Odijk, J-C. Syre
%I Springer Verlag
%C Eindhoven
%D June 1989
%P 165-180

%L Gogu86a
%K olit concepts semantics oopws86
%A Joseph A. Goguen
%A Jos\'e Meseguer
%T Extensions and Foundations of Object-Oriented Programming
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 153-162

%L Gogu86b
%K olit-reuse binder(oop)
%A Joseph A. Goguen
%T Reusing and Interconnecting Software Components
%J IEEE Computer
%D Feb 1986
%P 16-28

%L Gogu86c
%K misc specification binder
%A Joseph A. Goguen
%T One, None, a Hundred Thousand Specification Languages
%J Proceedings IFIP '86
%I North-Holland
%D 1986

%L Gogu90a
%K concurrency semantics binder
%A Joseph A. Goguen
%T Sheaf Semantics for Concurrent Interacting Objects
%J Mathematical Structures in Computer Science
%D 1990
%O to appear

%L Gogu90b
%K concurrency semantics binder
%A Joseph A. Goguen
%A David Wolfram
%T On Types and FOOPS
%B Proc. IFIP TC2 Working Conference on Database Semantics:
   Object-Oriented Databases
%C Windermere, UK
%D July 2-6, 1990
%O to appear

%L Gogu90c
%K concurrency semantics binder
%A Joseph A. Goguen
%T Types as Theories
%B Proc. of Symposium on General Topology and Applications
%I Oxford University Press
%D 1990
%O to appear

%L Gold80a
%K olit-oodb casais
%A I. Goldstein
%T Integrating a Network-Structured Database into an
   Object-Oriented Programming Language
%B Proceedings of the Workshop on
   Data Abstraction Database and Conceptual Modelling
%E M.L. Brodie, S.N. Zilles
%C Pingree Park, Colorado
%D June 23-26 1980

%L Gold80b
%K olit-oopl smalltalk
%A I.P. Goldstein
%A Daniel G. Bobrow
%T Extending Object-Oriented Programming in Smalltalk
%B Proceedings of the Lisp Conference
%D Aug 1980

%L Gold83a
%K olit-oopl smalltalk obib(oopl)
%A A. Goldberg
%A David Robson
%T Smalltalk 80: the Language and its Implementation
%I Addison-Wesley
%D May 1983

%L Gold84a
%K olit-oopl smalltalk
%A A. Goldberg
%T Smalltalk 80: the Interactive Programming Environment
%I Addison-Wesley
%D 1984

%L Gold91a
%K olit oopsla91
%A Eric Gold
%A Mary Beth Rosson
%T Portia: AN Instance-Centered Environment for Smalltalk
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 62-74

%L Gonz77a
%K misc image book
%A R. Gonzalez
%A P. Wintz
%T Digital Image Processing
%I Addison-Wesley
%D 1977

%L Good81a
%K uilit etude text
%A M. Good
%T Etude and the Folklore of User Interface Design
%B Proceedings of the ACM SIGPLAN SIGOA Symposium on Text Manipulation
%C Portland, Oregon
%D June 8-10, 1981

%L Gord79a
%K pl-semantics
%A M.J.C. Gordon
%T The Denotational Description of Programming Languages
%I Springer-Verlag
%D 1979

%L Gord79b
%K fpl ml semantics
%A M.J.C. Gordon
%A A.J. Milner
%A C.P. Wadsworth
%T Edinburgh LCF
%S LNCS 78
%I Springer-Verlag
%D 1979
%% 5.21 GOR

%L Goss90a
%K olit-reuse oopsla90 ecoop90
%A Sanjiv Gossain
%A Bruce Anderson
%T An Iterative-Design Model for Reusable Object-Oriented Software
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 12-27

%L Graf86a
%K pcalc equivalence ccs regular processes binder
%A S. Graf
%A J. Sifakis
%T A Logic for the Specification and Proof of Regular Controllable
   Processes of CCS
%J Acta Informatica
%V 23
%N 5
%D 1986
%P 507-528

%L Graff90a
%K olit-ithaca adl
%A Alessandro Graffigna
%A Jiarong Li
%A J. Marti
%A G. De Michelis
%A Josep Mongui\'o
%A C. Simone
%A Michel Tueni
%A H. Wiegmann
%T ADL Syntax Description
%R ITHACA Report Nixdorf.90.U.2.#7
%I Siemens Nixdorf Informationssysteme AG
%C Paderborn
%D Dec 31, 1990

%L Grass89a
%K concurrency synchronization binder
%A J.E. Grass
%A R.H. Campbell
%T Mediators: A Synchronization Mechanism
%B Proceedings of the IEEE Conference on Distributed Computing Systems
%D Sept. 1986
%P 468-477

%L Grau88a
%K olit ecoop88
%A Nicolas Graube
%T Reflexive Architecture: From ObjVLisp to CLOS
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 110-127

%L Grau89a
%K olit oopsla89
%A Nicolas Graube
%T Metaclass Compatibility
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 305-316

%L Grav89a
%K olit-oopl smalltalk types binder (shelf)
%A Justin Graver
%T Type-Checking and Type-Inference for Object-Oriented Programming Languages
%R Ph.D. Thesis, UIUC DCS-R-89-1539
%I University of Illinois at Urbana-Champaign
%D Aug. 1989

%L Gray81a
%K dblit transactions
%A J. Gray
%T The Transaction Concept: Virtues and Limitations
%B Proceedings of the Seventh International
   Conference on Very Large Data Bases
%D 1981
%P 144-154

%L Grie77a
%K types olit iteration
%A David Gries
%A N. Gehani
%T Some Ideas on Data Types in High-Level Languages
%J CACM
%V 20
%N 6
%D June 1977
%P 414-420

%L Grim87a
%K olit oopsla87
%A Andrew S. Grimshaw
%A Jane W.S. Liu
%T Mentat: An Object-Oriented Macro Data Flow System
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 35-47

%L Gros87a
%K olit oopsla87
%A Mark Grossman
%A Raimund K. Ege
%T Logical Composition of Object-Oriented Interfaces
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 295-306

%L Guer92a
%K olit-obc ecoop92 binder
%A Rachid Guerraoui
%A Riccardo Capobianchi
%A Agnes Lanusse
%A Pierre Roux
%T Nesting Actions through Asynchronous Message Passing: the ACS Protocol
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 170-184

%L Guer92b
%K olit-obcl karos binder (shelf)
%A Rachid Guerraoui
%T Programmation Repartie par Objets: Etudes et Proposositions
%R Ph.D. thesis
%I Universit\'e de Paris-Sud
%D Oct. 1992

%L Guer92c
%K olit-obcl karos binder
%A Rachid Guerraoui
%A Riccardo Capobianchi
%A Agnes Lanusse
%A Pierre Roux
%T Atomic Asynchronous Objects Invocations in a Fault-Tolerant Distributed System
%B Proceedings IEEE FTDS
%C Boston
%D 1992

%L Guib82a
%K misc image
%A Leo Guibas
%A J. Stolfi
%T A Language for Bitmap Manipulation
%J ACM TOG
%V 1
%N 3
%D July 1982
%P 191-214

%L Guim91a
%K olit-inheritance oopsla91
%A Nuno Guimaraes
%T Building Generic User Interface Tools: an Experience with Multiple
   Inheritance
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 89-96

%L Gund90a
%K types binder
%A Andreas G\:undel
%T Compatibility Conditions on Subclasses
%R Draft
%I University of Dortmund
%D Feb. 28, 1990

%L Gure87a
%K concurrency semantics modula binder(conc)
%A Yuri Gurevich
%A James M. Morris
%T Algebraic Operational Semantics and Modula-2
%E E. B\:orger
%E H. Kleine B\:uning
%E M.M. Richter
%B 1st Workshop on Computer Science Logic, CSL '87
%I Springer-Verlag
%S LNCS 329
%C Karlsruhe
%D Oct 1987
%P 81-101

%L Gure87b
%K concurrency semantics occam binder(conc)
%A Yuri Gurevich
%A Lawrence S. Moss
%T Algebraic Operational Semantics and Occam
%E E. B\:orger
%E H. Kleine B\:uning
%E M.M. Richter
%B 3rd Workshop on Computer Science Logic, CSL '89
%I Springer-Verlag
%S LNCS 440
%C Kaiserslautern
%D Oct 1989
%P 176-192

%L Gutf87a
%K olit oopsla87
%A Steven H. Gutfreund
%T ManiplIcons in ThinkerToy
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 307-317

%L Gutt77a
%K types olit data abstraction
%A John Guttag
%T Abstract Data Types and the Development of Data Structures
%J CACM
%V 20
%N 6
%D June 1977
%P 396-404

%L Hoel93a
%K olit ecoop93
%A Urs H\:olzle
%T Integrating Independently-Developed Components in Object-Oriented Languages
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 36-56
%X Object-oriented programming promises to increase programmer
   productivity through better reuse of existing code. However, reuse
   is not yet pervasive in today's object-oriented programs. Why is
   this so? We argue that one reason is that current programming
   languages and environments assume that components are perfectly
   coordinated. Yet in a world where programs are mostly composed out
   of reusable components, these components are not likely to be
   completely integrated because the sheer number of components would
   make global coordination impractical.  Given that seemingly minor
   inconsistencies between individually designed components would
   exist, we examine how they can lead to integration problems with
   current programming language mechanisms. We discuss several reuse
   mechanisms that can adapt a component in place without requiring
   access to the component's source code and without needing to
   re-typecheck it.

%L Haar90a
%K olit oopsla90 ecoop90
%A Volker Haarslev
%A Ralf M\:oller
%T A Framework for Visualizing Object-Oriented Systems
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 237-244

%L Habe72a
%K concurrency
%A A. Nico Habermann
%T Synchronization of Communicating Processes
%J Communications of the ACM
%V 15
%N 3
%D March 1972
%P 171-176

%L Habe81a
%K misc selit gandalf ada
%A A. Nico Habermann
%A D.E. Perry
%T System Composition and Version Control for Ada
%B Software Engineering Environments
%E H. H\:unke
%I North-Holland Publishing Co.
%D 1981
%P 331-343

%L Habe90a
%K olit oopsla90 ecoop90
%A Sabine Habert
%A Vadim Abrossimov
%T COOL: Kernel Support for Object-Oriented Environments
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 269-277

%L Haeb88a
%K visprog binder scripting
%A Paul E. Haeberli
%T ConMan: A Visual Programming Language for Interactive Graphics
%J Proceedings SIGGRAPH' 88, ACM Computer Graphics
%V 22
%N 4
%D August 1988
%P 103-111

%L Haer83a
%K dblit transactions recovery reliability
%A T. Haerder
%A A. Reuter
%T Principles of Transaction-Oriented Database Recovery
%J ACM Computing Surveys
%V 15
%N 4
%D Dec 1983
%P 287-317

%L Haer92a
%K olit-oodb zoo/ifi
%A Martin Haertig
%A Klaus R. Dittrich
%T An Object-Oriented Integration Framework for Building Heterogeneous
   Database Systems
%B Proc. of the IFIP DS-5 Conf. on Semantics of Interoperable Database Systems
%C Lorne, Australia
%D Nov. 1992

%L Halb84a
%K olit
%A Daniel C. Halbert
%T Programming by Example
%R Ph.D. Thesis
%I Dept. of EE and CS, University of California
%C Berkeley CA
%D 1984
%O Also OSD-T8402, XEROX Office Systems Division

%L Halb87a
%K types olit ecoop87
%A Daniel C. Halbert
%A Patrick D. O'Brien
%T Using Types and Inheritance in Object-Oriented Languages
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 20-31

%L Hamm81b
%K uilit text etude
%A Michael Hammer
%A R. Ilson
%A T. Anderson
%A E. Gilbert
%A M. Good
%A B. Niamir
%A Larry Rosenstein
%A S. Schoichet
%T The Implementation of Etude, an Integrated
   and Interactive Document Production System
%B Proceedings of the ACM SIGPLAN SIGOA Symposium on Text Manipulation
%C Portland, Oregon
%D June 8-10, 1981

%L Hank92a
%K concurrency gamma binder
%A Chris Hankin
%A Daniel Le M\'etayer
%A David Sands
%T A Calculus of Gamma Programs
%R Report No. 1758
%I INRIA-Rennes
%D Oct 1992

%L Hans91a
%K olit oopsla91
%A Eric N. Hanson
%A Tina M. Harvey
%A Mark A. Roth
%T Experiences in DBMS Implementation Using an Object-Oriented
   Persistent Programming Language and a Database Toolkit
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 314-328

%L Hare88a
%K visprog higraphs statecharts
%A D. Harel
%T On Visual Formalisms
%J CACM
%V 31
%N 5
%D May 1988
%P 514-530

%L Hare90a
%K visprog higraphs statecharts statemate
%A D. Harel
%A H. Lachover
%A A. Naamad
%A Amir Pnueli
%A M. Politi
%A R. Sherman
%A A. Shtull-Trauring
%A M. Trakhtenbrot
%T STATEMATE: A Working Environment for the Development of Complex
   Reactive Systems
%J IEEE Transactions on Software Engineering
%V SE-16
%N 4
%D April 1990
%P 403-414

%L Harr89a
%K olit oopsla89
%A William H. Harrison
%A Peter F. Sweeney
%A John J. Shilling
%T Good News, Bad News: Experience Building a Software Development Environment
   Using the Object-Oriented Paradigm
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 85-94

%L Hart92a
%K olit-obc obc91
%A Thorsten Hartmann
%A Ralf Jungclaus
%T Abstract Description of Distributed Object Systems
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 227-244

%L Hart92b
%K olit ecoop92
%A Thorsten Hartmann
%A Ralf Jungclaus
%A Gunter Saake
%T Aggregation in a Behaviour Oriented Object Model
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 57-77

%L Haye91a
%K olit oopsla91
%A Barry Hayes
%T Using Key Object Opportunism to Collect Old Objects
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 33-46

%L Haye91b
%K olit oopsla91
%A Fiona Hayes
%A Derek Coleman
%T Coherent Models for Object-Oriented Analysis
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 171-183

%L Hedi88a
%K olit ecoop88
%A G\:orel Hedin
%A Boris Magnusson
%T The Mj\/olner Environment: Direct Interaction with Abstractions
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 41-54

%L Hedi89a
%K olit ecoop89
%A G\:orel Hedin
%T An Object-Oriented Notation for Attribute Grammars
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 329-345

%L Helm90a
%K olit oopsla90 ecoop90 binder
%A Richard Helm
%A Ian M. Holland
%A Dipayan Gangopadhyay
%T Contracts: Specifying Behavioural Compositions in Object-Oriented Systems
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 169-180

%L Helm91a
%K olit oopsla91
%A Richard Helm
%A Yo\:elle S. Maarek
%T Integrating Information Retrieval and Domain Specific Approaches for
   Browsing and Retrieval in Object-Oriented Class Libraries
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 47-61

%L Hend86a
%K olit-inheritance concepts flavors inheritance oopws86
%A J. Hendler
%T Enhancement for Multiple Inheritance
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 98-106

%L Henn82a
%K concurrency
%A Matthew Hennessy
%T Powerdomains and Nondeterministic Recursive Definitions
%R Proceedings, International Symposium on Programming
%S LNCS 137
%E Dezani-Ciancaglini and Montanari
%I Springer-Verlag
%D 1982
%% 5.24 INT
%P 178-193

%L Henn84a
%K pcalc ccs
%A Matthew Hennessy
%T Axiomatising Finite Delay Operators
%J Acta Informatica
%V 21
%N 1
%D 1984
%P 61-88

%L Henn85a
%K pcalc equivalence ccs binder(ccs)
%A Matthew Hennessy
%A Robin Milner
%T Algebraic Laws for Nondeterminism and Concurrency
%J Journal of the ACM
%V 32
%N 1
%D Jan 1985
%P 137-161

%L Henn85b
%K pcalc equivalence ccs binder(ccs)
%A Matthew Hennessy
%T Acceptance Trees
%J Journal of the ACM
%V 32
%N 4
%D Jan 1985
%P 896-928

%L Henn86a
%K concurrency binder
%A Matthew Hennessy
%T Proving Systolic Systems Correct
%J ACM TOPLAS
%V 8
%N 3
%D July 1986
%P 344-387

%L Henn88a
%K pcalc equivalence ccs regular processes
%A Matthew Hennessy
%T Algebraic Theory of Processes
%I MIT Press
%C Cambridge, Massachusetts
%D 1988

%L Henn90a
%K pcalc equivalence icalp90 binder
%A Matthew Hennessy
%A A. Ing\'olfsd\'ottir
%T A Theory of Communicating Processes with Value Passing
%B Proceedings ICALP '90
%E M.S. Paterson
%I Springer-Verlag
%S LNCS 443
%C Warwick U.
%D July 1990
%% 5.2 AUT
%P 209-219

%L Henn91a
%K pcalc mobility (uwe)
%% TECHREPORT
%A Matthew Hennessy
%T A Model for the \pi Calculus
%I University of Sussex
%R Report 8/91
%D 1991

%L Henn92a
%K pcalc equivalence concurrency concur92
%A Matthew Hennessy
%T Concurrent Testing of Processes
%B Proceedings of CONCUR'92
%E W.R. Cleaveland
%S LNCS 630
%I Springer-Verlag
%D 1992
%P 94-107
%% Cote:  F.1.2 CON

%L Hens90a
%K types olit binder
%A Andreas Hense
%T Polymorphic Type Inference for a Simple Object Oriented Programming
   Language with State
%R Report A20/90
%I FB 14, Universit\:at des Saarlandes
%D Nov. 1990

%L Hens90b
%K olit-inheritance wrappers binder
%A Andreas V. Hense
%T Denotational Semantics of an Object Oriented Programming Language
   with Explicit Wrappers
%R Report A11/90
%I FB 14, Universit\:at des Saarlandes
%D Nov. 5, 1990
%O submitted for publication

%L Hens91a
%K types olit binder
%A Andreas Hense
%T Type Inference for O'Small
%R Report A06/91
%I FB 14, Universit\:at des Saarlandes
%D Oct. 1991

%L Hens91b
%K olit-inheritance binder
%A Andreas Hense
%T An O'Small Interpreter Based on Denotational Semantics
%R Report A07/91
%I FB 14, Universit\:at des Saarlandes
%D Oct. 1991

%L Hens91c
%K olit-inheritance wrappers patterns tacs91 binder
%A Andreas Hense
%T Wrapper Semantics of an Object Oriented Programming Language with State
%B Theoretical Aspects of Computer Software 1991
%S LNCS
%I Springer-Verlag
%C Sendai, Japan
%D 1991
%O to appear

%L Hern88a
%K patterns compiler generator kodiyak binder(patterns)
%A Robert M. Herndon, Jr.
%A Valdis A. Berzins
%T The Realizable Benefits of a Language Prototyping Language
%J IEEE Transactions on Software Engineering
%V SE-14
%N 6
%D June 1988
%P 803-809

%L Hess90a
%K linear-logic binder
%A Wim H. Hesselink
%T Axioms and Models of Linear Logic
%J Formal Aspects of Computing
%V 2
%D 1990
%P 139-166

%L Hewi77a
%K concurrency messages actors binder
%A Carl Hewitt
%T Viewing Control Structures as Patterns of Passing Messages
%J Artificial Intelligence
%V 8
%N 3
%D June 1977
%P 323-364

%L Hewi77b
%K concurrency messages actors binder
%A Carl Hewitt
%A Henry Baker
%T Laws for Communicating Parallel Processes
%J Information Processing 77
%E G. Gilchrist
%I North-Holland
%D 1977
%P 987-992

%L Hewi85a
%K misc open systems
%A Carl Hewitt
%T The Challenge of Open Systems
%J Byte
%V 10
%N 4
%D April 1985
%P 223-242

%L Hill86a
%K uilit
%A Ralph D. Hill
%T Supporting Concurrency, Communication and Synchronization
   in Human-Computer Interaction -- The Sassafras UIMS
%J ACM Transactions on Computer Graphics
%V 5
%N 3
%D July 1986
%P 179-210

%L Hill87a
%K visprog uims binder(ui)
%A Ralph D. Hill
%T Event-Response Systems -- A Technique for Specifying Multi-Threaded Dialogues
%B Proceedings CHI+GI '87
%D 1987
%P 241-248

%L Hind90a
%K concurrency graph grammars binder
%A Bernd Hindel
%T Objects + Processes = Graphs
%B SOFSEM '90
%C Zotavovna Sir\'ena
%D Nov. 18-30, 1990

%L Hind92a
%K concurrency graph grammars binder (shelf)
%A Bernd Hindel
%T Graphische Beschreibung von objektorientierten Programmen
%R Ph.D. thesis
%I University of Erlangen-N\:urnberg
%D 1992

%L Hoar74a
%K concurrency monitors binder
%A C.A.R. Hoare
%T Monitors: An Operating System Structuring Concept
%J CACM
%V 17
%N 10
%D Oct 1974
%P 549-557

%L Hoar78a
%K concurrency csp binder
%A C.A.R. Hoare
%T Communicating Sequential Processes
%J CACM
%V 21
%N 8
%D Aug 1978
%P 666-677

%L Hoar85a
%K pcalc equivalence csp book
%A C.A.R. Hoare
%T Communicating Sequential Processes
%I Prentice-Hall
%D 1985

%L Hoff92a
%K types olit binder
%A Martin Hofmann
%A Benjamin C. Pierce
%T An Abstract View of Objects and Subtyping
   (Preliminary Report)
%R ECS-LFCS-92-226
%I Computer Science Dept., University of Edinburgh
%D August, 1992

%L Hogg81a
%K oislit forms tla
%A John Hogg
%A Oscar Nierstrasz
%A Dennis Tsichritzis
%T Form Procedures
%R Omega Alpha, CSRG Technical Report 127
%E D. Tsichritzis
%I Computer Systems Research Group, University of Toronto
%D March 1981
%P 101-133
%% REPORT

%L Hogg81b
%K oislit forms tla
%A John Hogg
%T TLA: A System for Automating Form Procedures
%R M.Sc. thesis
%I Department of Computer Science, University of Toronto
%D 1981

%L Hogg83a
%K oislit imail
%A John Hogg
%A Murray S. Mazer
%A S. Gamvroulas
%A Dennis Tsichritzis
%T Imail -- An Intelligent Mail System
%J IEEE Database Engineering
%V 6
%N 3
%D Sept 1983

%L Hogg84a
%K oislit imail
%A John Hogg
%A S. Gamvroulas
%T An Active Mail System
%J SIGMOD '84 Proceedings, SIGMOD Record
%V 14
%N 2
%D June 1984

%L Hogg85a
%K oislit imail oact85
%A John Hogg
%T Intelligent Message Systems
%B Office Automation: Concepts and Tools
%E D. Tsichritzis
%I Springer Verlag
%C Heidelberg
%D 1985
%P 113-134

%L Hogg85b
%K oislit forms tla oact85
%A John Hogg
%A Oscar Nierstrasz
%A Dennis Tsichritzis
%T Office Procedures
%B Office Automation: Concepts and Tools
%E D. Tsichritzis
%I Springer Verlag
%C Heidelberg
%D 1985
%P 137-166
%% ARTICLE
%X This paper outlines an effort to introduce automation into
   forms-oriented office procedures.  The system allows its users to
   specify a set of operations on electronic forms.  Actions are
   triggered automatically when certain events occur, for example, when
   forms or combinations of forms arrive at particular nodes in the
   network of stations.  The actions deal with operations on forms.
   The paper discusses the facilities provided for the specification of
   form-oriented automatic procedures and sketches their
   implementation.

%L Hogg87a
%K olit-obc petri nets chloe oat87
%A John Hogg
%T Modelling Coordination Among Objects
%R Objects and Things
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D March 1987
%P 165-181

%L Hogg87b
%K olit oopsla87
%A John Hogg
%A Steven Weiser
%T OTM: applying Objects to Tasks
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 388-393

%L Hogg91a
%K olit oopsla91
%A John Hogg
%T Islands: Aliasing Protection in Object-Oriented Languages
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 271-285

%L Holl92a
%K olit-reuse ecoop92
%A Ian M. Holland
%T Specifying Reusable Components Using Contracts
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 287-308

%L Holt72a
%K misc os deadlock binder
%A Richard Holt
%T Some Deadlock Properties of Computer Systems
%J ACM Computing Surveys
%V 4
%N 3
%D Sept 1972
%P 179-196

%L Holt83a
%K plang euclid
%A Richard Holt
%T Concurrent Euclid, the UNIX system, and TUNIS
%I Addison-Wesley
%D 1983

%L Holz91a
%K olit-oopl self ecoop91
%A Urs H\:olzle
%A Craig Chambers
%A David Ungar
%T Optimizing Dynamically-Typed Object-Oriented Languages With Polymorphic
   Inline Caches
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 21-38

%L Hond88a
%K olit-obc ecoop88
%A Yasuaki Honda
%A Akinori Yonezawa
%T Debugging Concurrent Systems Based on Object Groups
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 267-282

%L Hond90a
%K pcalc-obc mobility binder
%A Kohei Honda
%A Mario Tokoro
%T Objects and Calculi
%R manuscript
%I Keio University
%D Oct. 20, 1990

%L Hond91a
%K pcalc-obc mobility equivalence ecoop91
%A Kohei Honda
%A Mario Tokoro
%T An Object Calculus for Asynchronous Communication
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 133-147

%L Hond92a
%K pcalc-obc mobility equivalence concurrency91 binder
%A Kohei Honda
%A Mario Tokoro
%T On Asynchronous Communication Semantics
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 21-51

%L Hond92b
%K pcalc-obc mobility types binder
%A Kohei Honda
%T On Interaction Types
%R draft
%I Keio University
%D Aug 17, 1992
%O submitted for publicated

%L Hond92c
%K pcalc-obc mobility binder
%A Kohei Honda
%T Representing Functions in an Object Calculus
%R draft
%I Keio University
%D Oct 20, 1992
%O submitted for publicated

%L Hond92d
%K pcalc-obc mobility binder
%A Kohei Honda
%T Two Bisimilarities in \nu-calculus
%R draft
%I Keio University
%D Oct 9, 1992

%L Hond92e
%K pcalc-obc mobility binder
%A Kohei Honda
%T Reduction Theories for Concurrent Calculi -- Behavioural Semantics
   without Observables
%R draft
%I Keio University
%D Dec 23, 1992

%L Hond92f
%K pcalc-obc mobility types binder
%A Kohei Honda
%T Types for Dyadic Interaction
%R draft
%I Keio University
%D Dec 23, 1992

%L Honi93a
%K olit ieee
%A Shinichi Honiden
%A Nobuto Kotaka
%A Yoshinori Kishimoto
%T Formalizing Specification Modeling in OOA
%J IEEE Software (Special Issue on "Making O-O Work")
%V 10
%N 1
%D Jan 1993
%P 54-66

%L Hook84a
%K fpl russell tfc
%A J.G. Hook
%T Understanding Russell: A First Attempt
%B Proceedings, Semantics of Data Types
%E Kahn, MacQueen, and Plotkin
%C Sophia-Antipolis
%S LNCS 173
%I Springer-Verlag
%D 1984
%% 5.24 SEM
%P 69-85

%L Hopc79a
%K misc automata book
%A J.E. Hopcroft
%A Jeffrey D. Ullman
%T Introduction to Automata Theory, Languages and Computation
%I Addison Wesley
%D 1979

%L Hora84a
%K olit-appl oda documents ois
%A Wolfgang Horak
%A G\:unther Kr\:onert
%T An Object-Oriented Office Document Architecture Model
   for Processing and Interchange of Documents
%B Proceedings of the Second ACM-SIGOA Conference
%C Toronto
%D June 1984
%P 152-160

%L Hora85a
%K olit-appl oda
%A Wolfgang Horak
%T Office Document Architecture and Office Document Interchange Formats:
   Current Status of International Standardization
%J IEEE Computer
%V 18
%N 10
%D October 1985
%P 50-60

%L Horn76a
%K misc selit binder
%A Jim J. Horning
%T The Software Project as a Serious Game
%B Software Engineering Education -- Needs and Objectives
%E Wasserman and Freeman
%I Springer Verlag
%D 1976
%% 1.5 SOF

%L Horn87a
%K olit-inheritance ecoop87
%A Chris Horn
%T Conformance, Genericity, Inheritance and Enhancement
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 223-233

%L Horn87b
%K olit-oodb encore
%A M.F. Hornick
%A Stanley B. Zdonik
%T A Shared, Segmented Memory System for an Object-Oriented Database
%J ACM TOOIS
%V 5
%N 1
%D Jan 1987
%P 70-95

%L Horn92a
%K olit oopsla92
%A Bruce Horn
%T Constraint Patterns As a Basis for Object-Oriented Programming
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 218-233

%L Hors90a
%K olit chloe om90
%A Nigel Horspool
%T Mode Analysis Techniques for Discovery of Lists in Prolog
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 305-312
%X Abstract interpretation is a technique that has been applied to
   Prolog code for the purposes of mode analysis and determinacy analysis.
   This paper shows how it may also be used to discover which Prolog
   objects are lists. One use of such an analysis would be for program
   verification purposes. A second use would be for optimizing memory
   allocation, especially if cdr-coding is used to implement lists.

%L Hosk92a
%K olit oopsla92
%A Antony L. Hosking
%A J. Eliot B. Moss
%A Darko Stefanovi\'c
%T A Comparative Performance Evaluation of Write Barrier Implementations
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 92-109

%L Huda89a
%K fpl haskell etc
%A Paul Hudak
%T Conception, Evolution, and Application of Functional Programming Languages
%J ACM Computing Surveys
%V 21
%N 3
%D Sept 1989
%P 359-411

%L Huda92a
%K fpl haskell binder (shelf)
%T Report on the Programming Language Haskell -- A Non-strict,
   Purely Functional Language (Version 1.2)
%E Paul Hudak, Simon Peyton Jones and Philip Wadler
%J ACM SIGPLAN Notices
%V 27
%N 5
%D May 1992

%L Huda92b
%K fpl haskell binder (shelf)
%A Paul Hudak
%A Joseph H. Fasel
%T A Gentle Introduction to Haskell
%J ACM SIGPLAN Notices
%V 27
%N 5
%D May 1992
%P T1-T53

%L Huet90a
%K fpl
%T Logical Foundations of Functional Programming
%E G. Huet
%I Addison-Wesley
%D 1990
%% 4.22 LOG

%L Huet91a
%K pcalc equivalence binder
%A Hans H\:uttel
%T Decidability, Behavioural Equivalences and Infinite Transition Graphs
%R Ph.D. thesis, ECS-LFCS-91-181
%I Computer Science Dept., University of Edinburgh
%D Dec. 1991

%L Hull85a
%K uilit uims
%A S.J. Hull
%T A Study of User Interface Management Systems
%R M.Sc. thesis, CSRI Technical Note
%I Department of Computer Science, University of Toronto
%D Jan 1985

%L Hur87a
%K olit-obcl clix ecoop87
%A Jin H. Hur
%A Kilnam Chon
%T Overview of a Parallel Object-Oriented Language CLIX
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 265-273

%L Hutc87a
%K olit-obcl emerald
%A Norman C. Hutchinson
%A Rajindra K. Raj
%A Andrew P. Black
%A Henry M. Levy
%A Eric Jul
%T The Emerald Programing Lanuage Report
%R Technical Report 87-10-07
%I Department of Computer Science, University of Washington
%C Seattle
%D October 1987

%L Hutt89a
%K pcalc ccs logic binder
%A Hans H\:uttel
%A Kim G. Larsen
%T The Use of Static Constructs in a Modal Process Logic
%B Logic at Botik 89
%S LNCS 363
%I Springer-Verlag
%D 1989
%P 163-180

%L ISO89a
%K pcalc lotos ccs
%Q ISO8807
%T Information Processing Systems -- Open Systems Interconnection --
   LOTOS -- A formal description technique based on the temporal ordering
   of observational behaviour
%R International Standard ISO 8807
%D 1989

%L Inga86a
%K types olit polymorphism oopsla86
%A Daniel H.H. Ingalls
%T A Simple Technique for Handling Multiple Polymorphism
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 347-349

%L Inga88a
%K olit ptyping visprog oopsla88
%A Dan Ingalls
%T Fabrik: A Visual Programming Environment
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov. 1988
%P 176-190

%L Ingo91a
%K pcalc ccs binder
%A A. Ing\'olfsd\'ottir
%A Bent Thomsen
%T Semantic Models for CCS with Values
%B Proc. of Chalmers Workshop on Concurrency
%C Baastad, Sweden
%D May 27-31 1991

%L Inve91a
%K concurrency tools binder
%A Paola Inverardi
%A Corrado Priami
%T Evaluation of Tools for the Analysis of Communicating Systems
%J Bulletin of EATCS
%V 45
%D October 1991
%P 158-185

%L Ishi86a
%K olit-obcl orient84k knowrep actors oopsla86 obib(obcp)
%A Yutaka Ishikawa
%A Mario Tokoro
%T A Concurrent Object-Oriented Knowledge Representation
   Language Orient84/K: Its Features and Implementation
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 232-241

%L Ishi90a
%K olit oopsla90 ecoop90
%A Yutaka Ishikawa
%A Hideyuki Tokuda
%T Object-Oriented Real-Time Language Design: Constructs for Timing Constraints
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 289-298

%L Ishi92a
%K olit-obc oopsla92
%A Yutaka Ishikawa
%T Communication Mechanism on Autonomous Objects
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 303-314

%L Ishi92b
%K olit-oopl ieee
%A Yutaka Ishikawa
%A Hideyuki Tokuda
%A Clifford W. Mercer
%T An Object-Oriented Real-Time Programming Language
%J IEEE Computer (Special Issue on Inheritance & Classification)
%V 25
%N 10
%D Oct 1992
%P 66-73

%L Jack86a
%K olit-appl radiation therapy pascal oopsla86
%A Jonathan Jacky
%A Ira Kalet
%T An Object-Oriented Approach to a Large Scientific Application
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 368-376

%L Jaco86a
%K olit distribution real-time oopsla86
%A Ivar Jacobson
%T Language Support for Changeable Large Real Time Systems
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 377-384

%L Jaco87a
%K olit oopsla87
%A Ivar Jacobson
%T Object Oriented Development in an Industrial Environment
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 183-191

%L Jaco91a
%K olit-oodb oopsla91
%A Ivar Jacobson
%A Fredrik Lindstr\:om
%T Re-engineering of Old Systems to an Object-Oriented Database
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 340-350

%L Jaco93a
%K olit ieee
%A Ivar Jacobson
%T Is Object Technology Software's Industrial Platform?
%J IEEE Software (Special Issue on "Making O-O Work")
%V 10
%N 1
%D Jan 1993
%P 24-30

%L Jaga90a
%K pcalc mobility icalp90 binder(conc)
%A Radha Jagadeesan
%A Prakash Panangaden
%T A Domain-theoretic Model for a Higher-order Process Calculus
%B Proceedings ICALP '90
%E M.S. Paterson
%I Springer-Verlag
%S LNCS 443
%C Warwick U.
%D July 1990
%% 5.2 AUT
%P 181-194

%L Jaga92a
%K olit-inheritance ecoop92
%A Suresh Jagannathan
%A Gul Agha
%T A Reflective Model of Inheritance
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 350-371

%L Jans87a
%K concurrency actors graph-grammars
%A Dirk Janssens
%A G. Rozenberg
%T Basic Notions of Actor Grammars: A Graph Grammar Model for Actor Computation
%B Graph-Grammars and Their Application to Computer Science
%E H. Ehrig, M. Nagl, G. Rozenberg and A. Rosenfeld
%S LNCS 291
%I Springer-Verlag
%D 1987
%P 280-298

%L Jans88a
%K concurrency actors graph-grammars
%A Dirk Janssens
%A G. Rozenberg
%T Actor Grammars
%R manuscript
%D 1988
%I University of Limburg, Diepenbeek, Belgium,
   and University of Leiden, the Netherlands
%O Submitted for Mathematical Systems Theory

%L Jerr89a
%K olit oopsla89
%A Max E. Jerrell
%T Function Minimization and Automatic Differentiation Using C++
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 169-174

%L Jeze92a
%K olit-obc ecoop92
%A J-M. J\'ez\'equel
%T EPEE: an Eiffel Environment to Program Distributed Memory
   Parallel Computers
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 197-212

%L Jeze93a
%K olit ecoop93
%A Jean-Marc J\'ez\'equel
%T Transparent Parallelisation Through Reuse: Between a Compiler and a
   Library Approach
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 384-405
%X Software environments for commercially available Distributed Memory
   Parallel Computers (DMPCs) mainly consist of libraries of routines to
   handle communications between processes written in sequential languages
   such as C or Fortran. This approach makes it difficult to program
   massively parallel systems in both an easy and efficient way. Another
   approach relies on (semi-)automatic parallelizing compilers but it has
   its own drawbacks. We propose to tackle this problem at an intermediate
   level (i.e. between high level parallelizing compilers and raw
   libraries), using Object Oriented (OO) technologies. We show that
   existing OO techniques based on the reuse of carefully designed
   software components can be applied with satisfactory results to the
   large scale scientific computation field. We propose to use a form of
   parallelism, known as data parallelism, and to embed it in a pure
   sequential OOL (Eiffel). We illustrate on several examples how
   sequential components and frameworks can be modified for parallel
   execution on DM- PCs to allow for transparent parallelisation of
   classes using these components and frameworks.

%L John75a
%K misc unix yacc compiler
%A S.C. Johnson
%T Yacc: Yet Another Compiler Compiler
%R Computer Science Technical Report #32
%I Bell Laboratories
%C Murray Hill, NJ
%D 1975

%L John86a
%K olit-oopl smalltalk types oopsla86 obib(types)
%A Ralph E. Johnson
%T Type-Checking Smalltalk
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 315-321

%L John88a
%K olit-reuse binder(oop) obib(gen) joop
%A Ralph E. Johnson
%A Brian Foote
%T Designing Reusable Classes
%J Journal of Object-Oriented Programming
%V 1
%N 2
%D 1988
%P 22-35

%L John88b
%K olit oopsla88
%A Ralph Johnson
%T TS: AN Optimizing Compiler for Smalltalk
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 18-26

%L John92a
%K olit oopsla92
%A Ralph E. Johnson
%T Documenting Frameworks using Patterns
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 63-76

%L John93a
%K olit ecoop93
%A Richard Johnson
%A Murugappan Palaniappan
%T MetaFlex: A Flexible Metaclass Generator
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 503-528
%X Motivated to support the needs of component-based applications, we
   have developed a system called MetaFlex that generates metaclasses
   to extend the behavior of our C++ classes without inventing variants
   of the original classes.  We make the case that a flexible metaclass
   generator service that allows developers to freely choose the kind
   and degree of detail for each metaclass is needed and present our
   architecture for making this specification.  We also illustrate a
   powerful use of this technique with a scripting extension to our
   application framework.  With an evaluation of our current MetaFlex
   implementation and its use with the scripting extension, we conclude
   that this service is best provided by compiler vendors.

%L Jone86a
%K security olit mach unix os distribution oopsla86 obib(sys)
%A Michael B. Jones
%A Richard F. Rashid
%T Mach and Matchmaker: Kernel and Language Support for
   Object-Oriented Distributed Systems
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 67-77

%L Jone86b
%K plang vdm
%A C.B. Jones
%T Systematic Software Development Using VDM
%I Prentice-Hall International
%D 1986

%L Jone87a
%K misc fp binder (shelf)
%A Simon L. Peyton Jones
%T The Implementation of Functional Programming Languages
%I Prentice-Hall
%C Englewood Cliffs
%S Prentice-Hall international series in computer science
%D 1987
%% Cote:  4.22 PEY

%L Jone92a
%K olit pcalc binder (shelf)
%A Cliff B. Jones
%T An Object-Based Design Method for Concurrent Programs
%R UMCS-92-12-1
%I University of Manchester
%D 1992

%L Jong77a
%K oislit forms sba
%A Peter de Jong
%A M.M. Zloof
%T The System for Business Automation (SBA): Programming Language
%J CACM
%V 20
%N 6
%D June 1977
%P 385-396

%L Jong86a
%K concurrency messages actors scripter oopws86
%A Peter de Jong
%T Compilation into Actors
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 68-77

%L Jouv89a
%K olit-obc obc fx-87 concurrency binder
%A Pierre Jouvelot
%A David K. Gifford
%T Communication Effects for Message-Based Concurrency
%R MIT/LCS/TM-386
%I MIT
%D Feb. 1989

%L Jul88a
%K olit-obcl emerald
%A Eric Jul
%T Object Mobility in a Distributd Object-Oriented System
%R PhD thesis, TR 88-12-06
%I Department of Computer Science, University of Washington
%C Seattle
%D December 1988

%L Jul88b
%K olit-obcl emerald
%A Eric Jul
%A et al.
%T Fine Grained Mobility in the Emerald System
%J ACM TOCS
%V 6
%N 1
%D July 1988

%L June90a
%K pl-semantics db cui binder (shelf)
%A Marc Junet
%T S\'emantique des Bases de Don\'ees: Un Mod\`ele et une R\'ealisation
%R Ph.D. thesis
%I University of Geneva
%D 1990

%L Jung91a
%K olit-oopl troll binder (shelf)
%A Ralf Jungclaus
%A Gunter Saake
%A Thorsten Hartmann
%A Cristina Sernadas
%T Object-Oriented Specification of Information Systems: The TROLL Language
%R Version 0.01, Report 91-04
%I Technical University of Braunschweig
%D Dec. 1991

%L Juno93a
%K olit chloe vo93
%A Betty Junod
%A Xavier Pintado
%A Fr\'ed\'eric Pot
%T Building an Object-Oriented Financial Framework
%R Visual Objects
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1993
%P 89-109
%X This paper discusses the modeling of a set of important classes
   for the financial domain.  Grounded on the Portfolio and TimeSeries
   classes, we developed a portfolio analysis and visualization tool
   with the goal of exploring constrained global optimization
   algorithms for portfolios assets allocation and of providing a
   comparative visual perspective for portfolio management.Our effort
   is motivated by the need to create an open framework for financial
   software components which can be easily integrated and incrementally
   modified.

%L Kaeh86a
%K olit-oopl smalltalk memory loom oopsla86
%A Ted Kaehler
%T Virtual Memory on a Narrow Machine for an Object-Oriented Language
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 87-106

%L Kafu89a
%K olit-obcl inheritance concurrency act++ ecoop89 binder(oop) obib(obcp)
%A Dennis G. Kafura
%A Keung Hae Lee
%T Inheritance in Actor Based Concurrent Object-Oriented Languages
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 131-145

%L Kafu90a
%K olit oopsla90 ecoop90
%A Dennis Kafura
%A Douglas Washabaugh
%A Jeff Nelson
%T Garbage Collection of Actors
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 126-134

%L Kafu91a
%K olit-obcl act++ obc90
%A Dennis G. Kafura
%A Greg Lavender
%T Recent Progress in Combining Actor-Based
   Concurrency with Object-Oriented Programming
%J ACM OOPS Messenger, Proceedings OOPSLA/ECOOP 90 Workshop
   on Object-Based Concurrent Systems
%V 2
%N 2
%D April 1991
%P 55-58

%L Kahn86a
%K olit-obcl vulcan prolog oopsla86
%A Ken Kahn
%A Eric Dean Tribble
%A Mark S. Miller
%A Daniel G. Bobrow
%T Objects in Concurrent Logic Programming Languages
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 242-257

%L Kahn87a
%K pl-semantics binder
%A Gilles Kahn
%T Natural Semantics
%R Report no. 601
%I INRIA
%D Feb. 1987

%L Kahn89a
%K olit-obc logic ecoop89
%A K.M. Kahn
%T Objects -- A Fresh Look
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 207-223

%L Kahn90a
%K olit-obcl lucy janus oopsla90 ecoop90
%A Kenneth M. Kahn
%A Vijay A. Saraswat
%T Actors as a Special Case of Concurrent Constraint Programming
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 57-65

%L Kais87a
%K olit oopsla87
%A Gail E. Kaiser
%A David Garlan
%T MELDing Data Flow and Object-Oriented Programming
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 254-267

%L Kais88a
%K olit-obc obcp concurrency prototyping binder(patterns)
%A Gail E. Kaiser
%A Simon M. Kaplan
%T Rapid Prototyping of Concurrent Programming Languages
%B Proceedings 8th International Conference on Distributed Computing Systems
%I IEEE Computer Society
%C San Jose, CA
%D June 13-17, 1988
%P 250-255

%L Kais89a
%K olit-obcl meld ecoop89
%A Gail E. Kaiser
%A Stephen S. Popovich
%A Wenwey Hseush
%A Shyhtsun Felix Wu
%T MELDing Multiple Granularities of Parallelism
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 147-166

%L Kapp88a
%K olit-oodb chloe ood89
%A Gerti Kappel
%A Michael Schrefl
%T A Behaviour Integrated Entity Relationship Approach for the Design of
   Object-Oriented Databases
%B Proceedings 7th International Conference on Entity Relationship Approach
%C Rome
%D Nov 1988
%P 175-192

%L Kapp89a
%K olit-ithaca chloe scripting vst ood89
%A Gerti Kappel
%A Jan Vitek
%A Oscar Nierstrasz
%A Simon Gibbs
%A Betty Junod
%A Marc Stadelmann
%A Dennis Tsichritzis
%T An Object-Based Visual Scripting Environment
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 123-142
%% REPORT

%L Kapp89b
%K olit chloe ood89
%A Gerti Kappel
%A Oscar Nierstrasz
%T Prototyping in einer objektorientierten Entwicklungsumgebung
%J Handbuch der Modernen Datenverarbeitung
%V 145
%I Forkel-Verlag
%D Jan 1989
%P 116-125
%% ARTICLE

%L Kapp89c
%K olit-ithaca chloe scripting vst
%A Gerti Kappel
%A Jan Vitek
%A Oscar Nierstrasz
%A Betty Junod
%A Marc Stadelmann
%T Scripting Applications in the Public Administration Domain
%J SIGOIS Bulletin
%V 10
%N 4
%D Dec 1989
%P 21-32
%% REPORT

%L Kast82a
%K compiler generator gag patterns
%A U. Kastens
%A B. Hutt
%A E. Zimmermann
%T GAG: A Practical Compiler Generator
%S LNCS 141
%E G. Goos and J. Hartmanis
%I Springer-Verlag
%D 1982

%L Kate90a
%K olit-ithaca laby
%A Manolis Katevenis
%A T. Sorilos
%A Christos Georgis
%A P. Kalogerakis
%T Laby User's Manual (version 2.10)
%R ITHACA report FORTH.90.E3.3.#7
%I Foundation of Research and Technology -- Hellas
%C Iraklion, Crete
%D Dec 31, 1990

%L Kemp87a
%K olit oopsla87
%A James Kempf
%A Warren Harris
%A Roy D'Souza
%A Alan Snyder
%T Experience with CommonLoops
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 214-226

%L Kemp87b
%K olit oopsla87
%A Renate Kempf
%A Marilyn Stelzner
%T Teaching Object-Oriented Programming with the KEE System
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 11-25

%L Kemp91a
%K olit-oodb gom binder
%A Alfons Kemper
%A Guido Moerkotte
%A Hans-Dieter Walter
%A Andreas Zachmann
%T GOM: A Strongly-Typed Persistent Object Model With Polymorphism
%B Proceedings of Datenbanksysteme in B\:uro, Technik u. Wi\ssenschaft (BTW)
%C Kaiserslautern
%D March 1991

%L Kemp91b
%K olit-oodb gom binder
%A Alfons Kemper
%A Peter Lockemann
%A Guido Moerkotte
%A Hans-Dieter Walter
%A S.M. Lang
%T AUtonomy over Ubiquity: Coping with the Complexity of a Distributed World
%B Entity-Relationship Approach: The Core of Conceptual Modelling
%E H. Kangassalo
%I Elsevier Science Publishers
%D 1991

%L Kemp92a
%K olit-oodb binder
%A Alfons Kemper
%A Guido Moerkotte
%A Hans-Dieter Walter
%T Structuring the Distributed Object World of CIM
%B Proceedings of 7th IFAC/IFIP/IFORS/IMACS/ISPE Symposium on
   Information Control Problems in Manufacturing Technology (INCOM '92)
%C Toronto
%D May 1992

%L Kenn82a
%K pcalc mobility (uwe)
%% INPROCEEDINGS
%A J. Kennaway
%A M. Sleep
%T Expressions as Processes
%B LISP and Functional Programming
%I ACM
%D 1982
%P 21-28

%L Kenn83a
%K pcalc mobility (uwe)
%% INPROCEEDINGS
%A J. Kennaway
%A M. Sleep
%T Syntax and Informal Semantics of DyNe, a Parallel Language
%B The Analysis of Concurrent Systems
%I Springer
%S LNCS 207
%D 1983
%P 222-230

%L Kern76a
%K misc unix
%A B.W. Kernighan
%A P.J. Plauger
%T Software Tools
%I Addison-Wesley, Inc.
%D 1976

%L Kern78a
%K plang c
%A B.W. Kernighan
%A D.M. Ritchie
%T The C Programming Language
%S Prentice-Hall Software Series
%D 1978

%L Kern84a
%K misc unix
%A B.W. Kernighan
%A R. Pike
%T The UNIX Programming Environment
%S Prentice-Hall Software Series
%D 1984

%L Kerr87a
%K olit oopsla87
%A R.K. Kerr
%A D.B. Percival
%T Use of Object-Oriented Programming in a Time Series Analysis System
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 1-10

%L Khos86a
%K olit-oodb concepts identity oopsla86 obib(oodb)
%A Setrag N. Khoshafian
%A George P. Copeland
%T Object Identity
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 406-416

%L Kicz92a
%K olit oopsla92
%A Gregor Kiczales
%A John Lamping
%T Issues in the Design and Documentation of Class Libraries
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 435-451

%L Kilo91a
%K olit binder
%A Haim Kilov
%T Object Concepts and Bibliography
%J ACM SIGPLAN Notices
%V 26
%N 10
%D Oct. 1991
%P 11-12

%L Kilo92a
%K olit binder
%A Haim Kilov
%T From OSI Systems Management to an Interoperable Object Model:
   Behavioural Specification of (Generic) Relationships
%B Proceedings 3d Telecommunications Information Networking Architecture Workshop
   (TINA 92)
%C Narita, Japan
%D Jan. 21-23, 1992

%L Kim87a
%K olit-oodb oopsla87
%A Won Kim
%A Jay Banerjee
%A Hong-Tai Chou
%A Jorge F. Garza
%A Darrell Woelk
%T Composite Object Support in an Object-Oriented Database System
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 118-125

%L Kim88a
%K olit obib(gen)
%T Object-Oriented Concepts, Databases and Applications
%E Won Kim and Fred Lochovsky
%I ACM Press and Addison-Wesley
%D 1989

%L Kim88b
%K olit oopsla88
%A Won Kim
%A Nat Ballou
%A Jay Banerjee
%A Hong-Tai Chou
%A Jorge F. Garza
%A Darrell Woelk
%T Integrating an Object-Oriented Programming System with a Database System
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 142-152

%L Kim92a
%K olit-oodb ecoop92
%A Won Kim
%T On Unifying Relational and Object-Oriented Database Systems
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 1-18

%L Kley88a
%K olit-obc oopsla88
%A Michael F. Kleyn
%A Paul C. Gingrich
%T GraphTrace -- Understanding Object-Oriented Systems Using
   Concurrently Animated Views
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 191-205

%L Knud88a
%K olit ecoop88
%A J\/orgen Lindskov Knudsen
%A Ole Lehrmann Madsen
%T Teaching Object-Oriented Programming Is More than Teaching
   Object-Oriented Programming Languages
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 21-40

%L Knud88b
%K olit ecoop88
%A J\/orgen Lindskov Knudsen
%T Name Collision in Multiple Classification Hierarchies
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 93-109

%L Knut73a
%K misc searching
%A D.E. Knuth
%T Sorting and Searching
%V 3
%S The Art of Computer Programming
%I Addison-Wesley
%C Reading, Mass
%D 1973

%L Kohl81a
%K olit reliability recovery
%A Walter H. Kohler
%T A Survey of Techniques for Synchronization and Recovery
   in Decentralized Computer Systems
%J ACM Computing Surveys
%V 13
%N 2
%D June 1981
%P 149-183

%L Kons88a
%K olit-obcl hybrid chloe-ftp aoe88
%A Dimitri Konstantas
%A Oscar Nierstrasz
%A Michael Papathomas
%T An Implementation of Hybrid, a Concurrent Object-Oriented Language
%R Active Object Environments
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1988
%% REPORT
%P 61-105
%X This paper is a report on a prototype implementation of Hybrid, a
   strongly-typed, concurrent, object-oriented language.  The
   implementation we describe features a compile-time system for
   translating Hybrid object type definitions into C, a run-time system
   for supporting communication, obc and object persistence, and a
   type manager that mediates between the two.
%% MIR
%% ftp: cui.unige.ch:OO-articles/hybridImplementation.ps.Z

%L Kons90a
%K olit hybrid chloe om90
%A Dimitri Konstantas
%T A Dynamically Scalable Distributed Object-Oriented System
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 245-254
%X We present a model of a distributed system that preserves the
   personal aspects of today's advanced personal workstations. Its
   advantages over conventional distributed systems are described, and
   design issues are presented. Finally, we sketch the extensions needed
   to convert the object oriented language and system, Hybrid, to the new
   distributed system model.

%L Kons91a
%% CB07
%K olit-obc cell chloe oc91 chloe-book
%A Dimitri Konstantas
%T Cell: A Model for Strongly Distributed Object Based Systems
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 225-237
%O Working paper
%X Cell, a model for strongly Distributed Object Based systems is
   discussed.  Its components, the nucleus and the membrane, are presented
   and their characteristics are described. The notions of trading and
   type transparency in the context of the Cell model are described and
   issues related to their design and implementation are presented.

%L Kons91b
%K olit oopsla91
%A Joseph A. Konstan
%A Lawrence A. Rowe
%T Developing a GUIDE Using Object-Oriented Programming
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 75-88

%L Kons91c
%K olit chloe
%A Dimitri Konstantas
%T Design Issues of a Strongly Distributed Object Based System
%B Proceedings of 2nd IEEE International Workshop for Object-Orientation
   in Operating Systems (I-WOOOS '91)
%C Palo-Alto
%D October 17-18 1991
%P 156-163

%L Kons92a
%K olit hybrid chloe of92
%A Dimitri Konstantas
%T Hybrid Update
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 109-118

%L Kons92b
%K olit hybrid chloe of92
%A Dimitri Konstantas
%T The Implementation of the Hybrid Cell
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 119-136

%L Kons93a
%% CB08
%K olit ecoop93 chloe-ftp chloe-book vo93
%A Dimitri Konstantas
%T Object-Oriented Interoperability
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 80-102
%X Object Oriented Interoperability is an extension and generalization
   of the Procedure Oriented Interoperability approaches taken in the
   past. It provides an interoperability support frame by considering
   the object as the basic interoperation unit. This way interoperation
   is based on higher level abstractions and it is independent of the
   specific interface through which a service is used.  A prototype
   implementation demonstrates both the feasibility of the ideas and
   the related implementation issues.
%% ftp: cui.unige.ch:OO-articles/objectOrientedInterop.ps.Z

%L Kons93b
%K olit hybrid chloe-ftp
%A Dimitri Konstantas
%T Hybrid Cell: An Implementation of an Object Based Strongly Distributed System
%B Proceedings of the International Symposium on Autonomous Decentralized Systems
   -- ISADS 93
%C Kawasaki, Japan
%D March 30 1993
%O to appear
%% ftp: cui.unige.ch:OO-articles/cellImplementation.ps.Z

%L Kosk82a
%K compiler generator hlp patterns
%A K. Koskimies
%A K-J. R\:aih\:a
%A M. Sarjakoski
%T Compiler Construction Using Attribute Grammars
%J ACM SIGPLAN Notices, Proceedings 1982 Symposium
   on Compiler Construction
%V 17
%N 6
%D June 1982
%P 153-159

%L Kosk84a
%K compiler generator hlp patterns
%A K. Koskimies
%T A Specification Language for One-Pass Semantic Analysis
%J ACM SIGPLAN Notices, Proceedings 1984 Symposium
   on Compiler Construction
%V 19
%N 6
%D June 1984
%P 179-189

%L Koza93a
%K olit ieee
%A Wojtek Kozaczynski
%A Annie Kuntzmann-Combelles
%T What It Takes to Make OO Work
%J IEEE Software (Special Issue on "Making O-O Work")
%V 10
%N 1
%D Jan 1993
%P 20-23

%L Krak90a
%K olit-obcl guide joop
%A Sacha Krakowiak
%A M. Meysembourg
%A H. Nguyen Van
%A Michel Riveill
%A C. Roisin
%A X. Rousset de Pina
%T Design and Implementation of an Object-Oriented Strongly Typed
   Language for Distributed Applications
%J Journal of Object-Oriented Programming
%V 3
%N 3
%D Sept/Oct 1990
%P 11-22

%L Kram89a
%K visprog scripting binder
%A Jeffrey Kramer
%A J. Magee
%A K. Ng
%T Graphical Support for Configuration Programming
%J Hawaii International Conference on System Sciences
%D Jan. 1989
%P 860-870

%L Kram89b
%K visprog scripting
%A Jeffrey Kramer
%A J. Magee
%A M. Sloman
%T Configuration Support for System Description, Construction and
   Evolution
%B Proc 5th Int Workshop on Software Specification and Design
%D May 1989
%C Pittsburgh, Pennsylvania
%P 28-33

%L Kram89c
%K visprog scripting
%A Jeffrey Kramer
%A J. Magee
%A K. Ng
%T Graphical Configuration Programming
%J IEEE Computer
%V 22
%N 10
%D Oct. 1989
%P 53-65

%L Kras80a
%K olit-appl music smalltalk casais
%A G. Krasner
%T Machine Tongues VIII: the Design of a Smalltalk Music System
%J Computer Music Journal
%V 4
%N 4
%D Winter 1980

%L Kras83a
%K olit-oopl smalltalk implementation casais obib(oopl)
%A G. Krasner
%T Smalltalk-80: Bits of History, Words of Advice
%I Addison-Wesley
%C Reading MA
%D 1983

%L Kreu87a
%K olit ecoop87
%A Wolfgang Kreutzer
%T A Modeller's Workbench: Experiments in Object-Oriented Simulation
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 203-212

%L Kris82a
%K olit-oopl beta
%A Bent Bruun Kristensen
%A Ole Lehrmann Madsen
%A Birger M\/oller-Pedersen
%A Kristen Nygaard
%T BETA project working notes 1-8
%I Norwegian Computing Center, Oslo, Computer Sciences department,
   Aarhus University
%D 1976-1982

%L Kris83a
%K olit-oopl beta popl83
%A Bent Bruun Kristensen
%A Ole Lehrmann Madsen
%A Birger M\/oller-Pedersen
%A Kristen Nygaard
%T Abstraction Mechanisms in the BETA Programming Language
%B Proceedings POPL '83
%C Austin, Texas
%D Jan 24-26, 1983
%P 285-298

%L Kris83b
%K olit-oopl beta
%A Bent Bruun Kristensen
%A Ole Lehrmann Madsen
%A Birger M\/oller-Pedersen
%A Kristen Nygaard
%T From SIMULA 67 to BETA
%B Proceedings of the 11th SIMULA 67 User's Conference
%C Paris
%D Sept 1983

%L Kris85a
%K olit-oopl beta
%A Bent Bruun Kristensen
%A Ole Lehrmann Madsen
%A Birger M\/oller-Pedersen
%A Kristen Nygaard
%T Multi-sequential execution in the BETA programming language
%J SIGPLAN Notices
%V 20
%N 4
%D April 1985
%P 57-70

%L Kris87a
%K olit-obcl beta concurrency rdoop87 binder(oop) obib(obcp)
%A Bent Bruun Kristensen
%A Ole Lehrmann Madsen
%A Birger M\/oller-Pedersen
%A Kristen Nygaard
%T The BETA Programming Language
%B Research Directions in Object-Oriented Programming
%E B. Shriver, P. Wegner
%I MIT Press
%C Cambridge, Massachusetts
%D 1987
%P 7-48

%L Kris87b
%K olit-oopl beta ecoop87
%A Bent Bruun Kristensen
%A Ole Lehrmann Madsen
%A Birger M\/oller-Pedersen
%A Kristen Nygaard
%T Classification of Actions, or Inheritance also for Methods
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 98-107

%L Kung81a
%K concurrency other
%A H.T. Kung
%A J.T. Robinson
%T On Optimistic Methods for Concurrency Control
%J ACM TODS
%V 6
%N 2
%D June 1981

%L Laco91a
%K olit-obcl guide ecoop91 exceptions
%A Serge Lacourte
%T Exceptions in Guide, an Object-Oriented Language for Distributed
   Applications
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 268-287

%L Laen88a
%K olit-oopl oops+ oodb ecoop88
%A Els Laenens
%A Dirk Vermeir
%T An Overview of OOPS+, An Object-Oriented Database Programming Language
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 350-373

%L Laen89a
%K olit-oodb ecoop89
%A Els Laenens
%A Fran\,cois Staes
%A Dirk Vermeir
%T A Customizable Window-Interface to Object-Oriented Databases
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 367-381

%L Laff85a
%K olit-oopl smallworld
%A M.R. Laff
%A Brent Hailpern
%T SW 2 -- An Object-based Programming Environment
%R Technical Report
%I IBM Thomas J. Watson Research Center, Yorktown Heights, New York
%D 1985

%L Laff92a
%K olit-obcl procol concurrency binder (shelf)
%A Chris Laffra
%T PROCOL -- A Concurrent Object Language with Protocols, Delegation,
   Persistence and Constraints
%R Ph.D. Dissertation
%I Erasmus University of Rotterdam
%D May, 1992

%L Lafo88a
%K linear-logic binder
%A Yves Lafont
%T The Linear Abstract Machine
%J Theoretical Computer Science
%V 59
%I North-Holland
%D 1988
%P 157-180

%L Lafo88b
%K linear-logic binder
%A Yves Lafont
%T Introduction to Linear Logic
%R Lecture notes for the Summer School on Constructive Logics and
   Category Theory
%C Isle of Thorna
%D Aug. 1988

%L Lafo90a
%K linear-logic binder(visprog) popl90
%A Yves Lafont
%T Interaction Nets
%B Proceedings POPL '90
%C San Francisco
%D Jan 17-19, 1990
%P 95-108

%L Lafo90b
%K linear-logic binder
%A Yves Lafont
%T Sequent Calculus and Linear Logic
%R Lecture Notes for the 2nd European Summer School in Language,
   Logic and Information
%C Leuven
%D July-Aug. 1990

%L Lai88a
%K olit
%A K-Y. Lai
%A T.W. Malone
%T Object Lens: A ``Spreadsheet'' for Cooperative Work
%B Proceedings CSCW '88
%C Portland, Oregon
%D Sept. 1991
%P 115-124

%L Lalo86a
%K olit concepts smalltalk oopsla86 binder(oop)
%A Wilf R. LaLonde
%A Dave A. Thomas
%A John R. Pugh
%T An Exemplar Based Smalltalk
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 322-330

%L Lalo88a
%K olit oopsla88
%A Wilf R. LaLonde
%A Mark Van Gulik
%T Building a Backtracking Facility in Smalltalk Without Kernel Support
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 105-122

%L Lalo91a
%K olit joop
%A W. LaLonde
%A John Pugh
%T Subclassing \/= Subtyping \/= Is-a
%J Journal of Object-Oriented Programming
%V 3
%N 5
%D Jan 1991
%P 57-62

%L Lamm93a
%K olit ecoop93
%A Michael G. Lamming
%T Intimate Computing and the Memory Prosthesis: A Challenge for
   Computer Systems Research?
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 1-3
%X (abstract of keynote address)

%L Lamp78a
%K concurrency other distribution synchronization
%A Leslie Lamport
%T Time, Clocks, and the Ordering of Events in a Distributed System
%J CACM
%V 21
%N 7
%D July 1978

%L Lamp80a
%K olit-oopl mesa
%A Butler W. Lampson
%A D.D. Redell
%T Experience with Processes and Monitors in Mesa
%J CACM
%V 23
%N 2
%D Feb 1980
%P 105-117

%L Lamp81a
%K olit transactions
%A Butler W. Lampson
%T Atomic Transactions
%B Distributed Systems -- Architecture and Implementation
%S LNCS 150
%E B.W. Lampson, M. Paul and H.J. Siegert
%I Springer-Verlag
%D 1981
%P 246-265

%L Lamp83a
%K concurrency
%A Leslie Lamport
%T Specifying Concurrent Program Modules
%J ACM TOPLAS
%V 5
%N 2
%D April 1983
%P 190-222

%L Lamp88a
%K concurrency safety
%A Leslie Lamport
%T Control Predicates Are Better Than Dummy Variables for
   Reasoning About Program Control
%J ACM TOPLAS
%V 10
%N 2
%D April 1988
%P 267-281

%L Lamp89a
%K concurrency safety
%A Leslie Lamport
%T A Simple Approach to Specifying Concurrent Systems
%J CACM
%V 32
%N 1
%D Jan 1989
%P 32-45

%L Lamp90a
%K temporal-logic tla binder (shelf)
%A Leslie Lamport
%T A Temporal Logic of Actions
%R Technical Report 57
%I DEC Systems Research Center
%C Palo Alto, California
%D April 1990

%L Lamp91a
%K temporal-logic tla binder (shelf)
%A Leslie Lamport
%T The Temporal Logic of Actions
%R Technical Report 79
%I DEC Systems Research Center
%C Palo Alto, California
%D Dec. 1991

%L Land66a
%K fpl iswim binder(fp)
%A P.J. Landin
%T The Next 700 Programming Languages
%J Communications of the ACM
%V 9
%N 3
%D March 1966
%P 157-166

%L Land81a
%K security olit
%A C.E. Landwehr
%T Formal Models for Computer Security
%J ACM Computing Surveys
%V 13
%N 3
%D Sept 1981
%P 247-278

%L Lane92a
%K pcalc mobility (uwe)
%% INPROCEEDINGS
%A Cosimo Laneve
%A Ugo Montanari
%T Mobility in the CC-Paradigm
%I Springer
%S LNCS 629
%D 1992
%P 336-345

%L Lang86a
%K olit-oopl oaklisp lisp tfc oopsla86
%A Kevin J. Lang
%A Barak A. Pearlmutter
%T Oaklisp: an Object-Oriented Scheme with First Class Types
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 30-37

%L Lano92a
%K olit specification ecoop92
%A K.C. Lano
%A H. Haughton
%T Reasoning and Refinement in Object-Oriented Specification Languages
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 78-97

%L Lars87a
%K pcalc equivalence ccs icalp87 binder(ccs)
%A Kim G. Larsen
%A Robin Milner
%T Verifying a Protocol Using Relativized Bisimulation
%B Proceedings ICALP '87
%E Th. Ottmann
%I Springer-Verlag
%S LNCS 267
%C Karlsruhe
%D July 1987
%% 5.2 AUT
%P 126-135

%L Lars88a
%K pcalc equivalence ccs binder(ccs) caap88
%A Kim G. Larsen
%T Proof Systems for Hennessy-Milner Logic with Recursion
%B Proceedings CAAP '88
%E M. Dauchet, M. Nivat
%I Springer-Verlag
%S LNCS 299
%C Nancy
%D March 1988
%% 5.32 CAA
%P 215-230

%L Lars88b
%K pcalc equivalence ccs logic binder
%A Kim G. Larsen
%A Bent Thomsen
%T A Modal Process Logic
%B Proceedings 3d Annual Symposium on Logic in Computer Science
%C Edinburgh
%D 1988

%L Lars89a
%K pcalc equivalence ccs binder popl89
%A Kim G. Larsen
%A Arne Skou
%T Bisimulation Through Probabilistic Testing
%B Proceedings POPL '89
%C Austin, Texas
%D Jan 11-13, 1989
%P 344-352

%L Lars89b
%K pcalc ccs equivalence binder
%A Kim G. Larsen
%T Modal Specifications
%B Automatic Verification Methods for Finite State Systems: Proceedings
%E Joseph Sifakis
%I Springer-Verlag
%S LNCS 407
%D 1989
%P 232-246
%% CUI 5.22 AUT

%L Lars90a
%K pcalc ccs icalp90 binder(ccs)
%A Kim G. Larsen
%A Liu Xinxin
%T Compositionality Through an Operational Semantics of Contexts
%B Proceedings ICALP '90
%E M.S. Paterson
%I Springer-Verlag
%S LNCS 443
%C Warwick U.
%D July 1990
%% 5.2 AUT
%P 526-539

%L Lau92a
%K olit-obc ecoop92
%A Wing-cheong Lau
%A Vineet Singh
%T An Object-Oriented Class Library for Scalable Parallel Heuristic Search
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 252-267

%L Laur87a
%K olit oopsla87
%A Jane Laursen
%A Robert Atkinson
%T Opus: A Smalltalk Production System
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 377-387

%L Leav90a
%K types olit oopsla90 ecoop90
%A Gary T. Leavens
%A William E. Weihl
%T Reasoning about Object-Oriented Programs that Use Subtypes
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 212-223

%L Ledg77a
%K types data abstraction
%A H.F. Ledgard
%A R.W. Taylor
%T Two Views of Data Abstraction
%J CACM
%V 20
%N 6
%D June 1977
%P 382-384

%L Lee72a
%K misc
%A E.T. Lee
%T Proximity Measures for the Classification of Geometric Figures
%J Journal of Cybernetics
%V 2
%N 4
%D 1972
%P 43-59

%L Lee83a
%K misc voice
%A D.L. Lee
%A Frederick H. Lochovsky
%T Voice Response Systems
%J ACM Computing Surveys
%V 15
%N 4
%D Dec 1983

%L Lee84a
%K oislit documents
%A Allison Lee
%A Carson Woo
%A Frederick H. Lochovsky
%T Officeaid: An Integrated Document Management System
%B Proceedings of ACM SIGOA Conference
%D June 1984
%P 170-180

%L Lee85a
%K uilit oact85
%A Allison Lee
%A Frederick H. Lochovsky
%T User Interface Design
%B Office Automation: Concepts and Tools
%E D. Tsichritzis
%I Springer Verlag
%C Heidelberg
%D 1985
%P 3-20

%L Lejt92a
%K olit
%A Moises Lejter
%A Scott Meyers
%A Steven P. Reiss
%T Support for Maintaining Object-Oriented Programs
%J IEEE Transactions on Software Engineering
%V SE-18
%N 12
%D Dec 1992
%P 1045-1052

%L Lern90a
%K olit oopsla90 ecoop90
%A Barbara Staudt Lerner
%A A. Nico Habermann
%T Beyond Schema Evolution to Database Reorganization
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 67-76

%L Lesc92a
%K olit-obcl actalk concurrency binder (shelf)
%A Lo\:ic Lescaudron
%T Prototypage d'environnements de programmation pours les langages \`a
   objets concurrents: une r\'ealisation en Smalltak-80 pour Actalk
%R Ph.D. thesis
%I Universit\'e Paris VI
%D 1992

%L Lesk75a
%K misc unix lex
%A M.E. Lesk
%A E. Schmidt
%T Lex -- A Lexical Analyzer Generator
%R Computer Science Technical Report #39
%I Bell Laboratories
%C Murray Hill, NJ
%D 1975

%L Leth91a
%K pcalc mobility (uwe)
%% PHDTHESIS
%A Lone Leth
%T Functional Programs as Reconfigurable Networks of Communicating Processes
%R PhD thesis
%I Imperial College, University of London
%D 1991

%L Leth92a
%K pcalc mobility (uwe)
%% TECHREPORT
%A Lone Leth
%T A New Direction in Functions as Processes
%R ECRC-92-5
%I European Computer-Industry Research Centre, Munich
%D 1992

%L Lewi86a
%K olit architecture swamp smalltalk oopsla86
%A David M. Lewis
%A David R. Galloway
%A Robert J. Francis
%A Brian W. Thomson
%T Swamp: A Fast Processor for Smalltalk-80
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 131-139

%L Lewi91a
%K olit-reuse oopsla91
%A John A. Lewis
%A Sallie M. Henry
%A Dennis G. Kafura
%A Robert S. Schulman
%T An Empirical Study of the Object-Oriented Paradigm and Software Reuse
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 184-196

%L Li91a
%K olit-ithaca adl
%A Jiarong Li
%T ADL and Its Compiler
%R ITHACA Report Bull.91.U2.#3
%I Bull SA
%C Massy, France
%D June 28, 1991

%L Lieb81a
%K olit memory real-time casais
%A Henry Lieberman
%A Carl Hewitt
%T A Real Time Garbage Collector Based on
   the Lifetimes of Objects
%R AI memo no 569
%I MIT
%D 1981

%L Lieb82a
%K olit-appl music casais
%A Henry Lieberman
%T Machine Tongues IX: Object-Oriented Programming
%J Computer Music Journal
%V 6
%N 3
%D Fall 1982

%L Lieb86a
%K olit concepts oopsla86 obib(inh)
%A Henry Lieberman
%T Using Prototypical Objects to Implement Shared Behavior
   in Object Oriented Systems
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 214-223

%L Lieb87a
%K olit-obcl act1 oocp87 obib(obcp)
%A Henry Lieberman
%T Concurrent Object-Oriented Programming in Act 1
%B Object-Oriented Concurrent Programming
%E A. Yonezawa, M. Tokoro
%I MIT Press
%C Cambridge, Massachusetts
%D 1987
%P 9-36

%L Lieb87b
%K olit ecoop87
%A Henry Lieberman
%T Reversible Object-Oriented Interpreters
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 11-19

%L Lieb88a
%K olit oopsla88
%A Karl J. Lieberherr
%A Ian M. Holland
%A Arthur Riel
%T Object-Oriented Programming: An Objective Sense of Style
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 323-334

%L Lieb89a
%K olit oopsla89
%A Karl J. Lieberherr
%A Arthur J. Riel
%T Contributions to Teaching Object Oriented Design and Programming
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 11-22

%L Lins88a
%K olit ecoop88
%A Yngve Linsj\/orn
%A Dag Sj\/oberg
%T Database Concepts Discussed in Object-Oriented Perspective
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 300-318

%L Lint89a
%K olit
%A M. Linton
%A John Vlissides
%A P. Calder
%T Composing User Interfaces with InterViews
%J IEEE Computer
%V 22
%N 2
%D February 1989
%P 8-22

%L Lipp91a
%K olit ecoop91
%A Ernst Lippe
%A Gert Florijn
%T Implementation Techniques for Integral Version Management
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 342-359

%L Lisk77a
%K olit lang clu data abstraction
%A Barbara Liskov
%A Alan Snyder
%A Robert Atkinson
%A Craig Schaffert
%T Abstraction Mechanisms in CLU
%J CACM
%V 20
%N 8
%D Aug 1977
%P 564-576

%L Lisk79a
%K olit lang clu exceptions binder
%A Barbara Liskov
%A Alan Snyder
%T Exception Handling in CLU
%J IEEE Transactions on Software Engineering
%V 5
%N 6
%D Nov 1979
%P 546-558

%L Lisk83a
%K olit-oopl argus guardians transactions
%A Barbara Liskov
%A R. Scheifler
%T Guardians and Actions: Linguistic Support for
   Robust, Distributed Programs
%J ACM TOPLAS
%V 5
%N 3
%D July 1983
%P 381-404

%L Lisk86a
%K olit-oopl clu data abstraction specification obib(oopl)
%A Barbara Liskov
%A John Guttag
%T Abstraction and Specification in Program Development
%I MIT Press/McGraw-Hill
%C Cambridge, Massachusetts
%D 1986

%L Lisk86b
%K concurrency popl86
%A Barbara Liskov
%A Maurice Herlihy
%A L. Gilbert
%T Limitations of Synchronous Communication with Static Process
   Structure in Languages for Distributed Computing
%B Proceedings POPL '86
%C St. Petersburg Beach, Florida
%D Jan 13-15, 1986

%L Lisk93a
%K olit ecoop93
%A Barbara Liskov
%A Jeannette M. Wing
%T A New Definition of the Subtype Relation
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 118-141
%X The use of hierarchy is an important component of object-oriented
   design.  Hierarchy allows the use of type families, in which higher
   level supertypes capture the behavior that all of their subtypes
   have in common. For this methodology to be effective, it is
   necessary to have a clear understanding of how subtypes and
   supertypes are related.  This paper presents a new definition of the
   subtype relation that ensures that any property proved about
   supertype objects also holds for subtype objects. It also discusses
   the ramifications of the definition on the design of type families.

%L Liu92a
%K olit oopsla92
%A Chamond Liu
%A Stephen Goetze
%A Bill Glynn
%T What Contributes to Successful Object-Oriented Learning?
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 77-86

%L Liu92b
%K olit-oodb obc vldb92 binder
%A Ling Liu
%A Robert Meersman
%T Activity Model: A Declarative Approach for Capturing Communication Behaviour
   in Object-Oriented Database
%B Proceedings of the 18th VLDB Conference
%C Vancouver, BC
%D 1992

%L Loch83a
%K oislit ai
%A Frederick H. Lochovsky
%T A Knowledge-Based Approach to Supporting Office Work
%J IEEE Database Engineering
%V 6
%N 3
%D Sept 1983
%P 43-51

%L Loch85a
%K olit survey special issue obib(gen)
%T Special Issue on Object-Oriented Systems
%E Fred H. Lochovsky
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985

%L Loeh92a
%K olit-obc eiffel oopsla92
%A Klaus-Peter L\:ohr
%T Concurrency Annotations
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 327-340

%L Logr88a
%K pcalc lotos ccs binder(conc)
%A L. Logrippo
%A A. Obaid
%A J.P. Briand
%A M.C. Fehri
%T An Interpreter for LOTOS, A Specification Language for Distributed Systems
%J Software -- Practice and Experience
%V 18
%N 4
%D April 1988
%P 365-385

%L Loom87a
%K olit ecoop87
%A M.E.S. Loomis
%A Ashwin V. Shah
%A James E. Rumbaugh
%T An Object Modelling Technique for Conceptual Design
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 192-202

%L Lorh77a
%K compiler generator delta patterns
%A Bernard Lorho
%T Semantic Attributes Processing in the System DELTA
%B Methods of Algorithmic Language Implementation
%S LNCS 47
%E A. Ershov and C.H.A. Koster
%I Springer-Verlag
%D 1977
%P 21-40

%L Low88a
%K olit ecoop88
%A Colin Low
%T A Shared, Persistent Object Store
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 390-410

%L Lowr92a
%K plang hermes binder (shelf)
%A Andy Lowry
%T The Hermes Language in Outline Form
%J ACM SIGPLAN Notices
%V 27
%N 8
%D August 1992
%P 51-70

%L Luca78a
%K pl-semantics vdm
%A P. Lucas
%T On the Formalization of Programming Languages:
   Early History and Main Approaches
%B The Vienna Development Method: The Meta-Language
%S LNCS 61
%E D. Bj\/orner and C.B. Jones
%I Springer Verlag
%C Heidelberg
%D 1978
%P 1-23

%L Luca88a
%K concurrency fx binder(conc) popl88
%A John M. Lucassen
%A David K. Gifford
%T Polymorphic Effect Systems
%B Proceedings POPL '88
%C San Diego
%D Jan 13-15, 1988
%% 4.2 ACM
%P 47-57

%L Lucc87a
%K olit-obc oopsla87
%A Steven E. Lucco
%T Parallel Programming in a Virtual Object Space
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 26-34

%L Lyng84a
%K olit-oodb distribution ois
%A P. Lyngbaek
%A Dennis McLeod
%T Object Management in Distributed Information Systems
%J ACM TOOIS
%V 2
%N 2
%D 1984
%P 96-122

%L Mada89a
%K olit ecoop89
%A Peter W. Madany
%A Roy H. Campbell
%A Vincent F. Russo
%A Douglas E. Leyens
%T A Class Hierarchy for Building Stream-Oriented File Systems
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 311-328

%L Mads80a
%K compiler generator patterns
%A Ole Lehrmann Madsen
%T On Defining Semantics by Means of Extended Attribute Grammars
%B Semantics-Directed Compiler Generation
%S LNCS 94
%E N.D. Jones
%I Springer-Verlag
%D 1980
%P 259-299

%L Mads86a
%K olit concepts oopws86
%A Ole Lehrmann Madsen
%T Block Structure and Object Oriented Languages
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 133-142

%L Mads88a
%K olit ecoop88
%A Ole Lehrmann Madsen
%A Birger M\/oller-Pedersen
%T What Object-Oriented Programming May Be -- and What It Does Not Have To Be
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 1-20

%L Mads89a
%K olit oopsla89
%A Ole Lehrmann Madsen
%A Birger M\/oller-Pedersen
%T Virtual Classes: A Powerful Mechanism in Object-Oriented Programming
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 397-406

%L Mads90a
%K olit oopsla90 ecoop90
%A Ole Lehrmann Madsen
%A Boris Magnusson
%A Birger M\/oller-Pedersen
%T Strong Typing of Object-Oriented Languages Revisited
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 140-150

%L Mads93a
%K olit-oopl beta binder (shelf)
%A Ole Lehrmann Madsen
%A Birger M\/oller-Pedersen
%A Kristen Nygaard
%T Object-Oriented Programming in the Beta Programming Language
%I Addison Wesley
%D 1993

%L Maes87a
%K olit oopsla87
%A Pattie Maes
%T Concepts and Experiments in Computational Reflection
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 147-155

%L Mage89a
%K visprog scripting
%A J. Magee
%A Jeffrey Kramer
%A M. Sloman
%T Constructing Distributed Systems in Conic
%J IEEE Transactions on Software Engineering
%V SE-15
%N 6
%D 1989
%P 663-675

%L Magn90a
%K olit joop
%A Boris Magnusson
%T SCOOP-Europe Report and Introducing OOP Research at the University of Geneva
%J Journal of Object-Oriented Programming
%V 3
%N 4
%D 1990
%P 66-70

%L Maie85a
%K olit-oopl gemstone
%A David Maier
%A Allen Otis
%A Alan Purdy
%T Object-Oriented Database Development at Servio Logic
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 58-65

%L Maie86a
%K olit-oodb gemstone oopsla86
%A David Maier
%A Jacob Stein
%A Allen Otis
%A Alan Purdy
%T Development of an Object-Oriented DBMS
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 472-482

%L Maie87a
%K olit-oodb gemstone rdoop87 obib(oodb)
%A David Maier
%A Jacob Stein
%T Development and Implementation of an Object-Oriented DBMS
%B Research Directions in Object-Oriented Programming
%E B. Shriver, P. Wegner
%I MIT Press
%C Cambridge, Massachusetts
%D 1987
%P 355-392

%L Male89a
%K olit-oopl objvprolog ecoop89
%A Jacques Malenfant
%A Guy Lapalme
%A Jean Vaucher
%T ObjVProlog: Metaclasses in Logic
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 257-269

%L Mall82a
%K types other graphics
%A W.R. Mallgren
%T Formal Specifications of Graphic Data Types
%J ACM TOPLAS
%V 4
%N 4
%D Oct 1982
%P 687-710

%L Malo89a
%K olit oopsla89
%A John Maloney
%A Alan Borning
%A Bjorn N. Freeman-Benson
%T Constraint Technology fur User-Interface Construction in ThingLab II
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 381-388

%L Mann81a
%K temporal-logic temporal logic
%A Zohar Manna
%A Amir Pnueli
%T Verification of Concurrent Programs: the Temporal Framework
%B The Correctness Problem in Computer Science
%E R.S. Boyer and J.S. Moore
%I Academic Press
%D 1981
%P 215-273

%L Mann81b
%K temporal-logic temporal logic
%A Zohar Manna
%A Amir Pnueli
%T Verification of Concurrent Programs: Temporal Proof Principle
%B Logics of Programs (Proceedings 1981)
%E D. Kozen
%S LNCS 131
%I Springer-Verlag
%D 1981
%P 200-252

%L Mann84a
%K temporal-logic csp binder(csp)
%A Zohar Manna
%A Pierre Wolper
%T Synthesis of Communicating Processes from Temporal Logic Specifications
%J ACM TOPLAS
%V 6
%N 1
%D Jan 1984
%P 68-93

%L Mann87a
%K olit ecoop87
%A Carl Manning
%T Traveler: The Apiary Observatory
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 89-97

%L Mao80a
%K concurrency other tugs
%A T.W. Mao
%A R.T. Yeh
%T Communication Port: a Language Concept for Concurrent Programming
%J IEEE Transactions on Software Engineering
%V SE-6
%N 2
%D March 1980
%P 194-204

%L Marq89a
%K olit oopsla89
%A Jos\'e Alves Marques
%A Paulo Guedes
%T Extending the Operating System to Support an Object-Oriented Environment
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 113-122

%L Mart82a
%K oislit mail
%A Pat Martin
%A Dennis Tsichritzis
%T A Message Management Model
%R Alpha-Beta, Technical Report CSRG-143
%I University of Toronto
%D May 1982
%P 63-77

%L Mart84a
%K oislit mail
%A T. Patrick Martin
%T A Communication Model for Message Management Systems
%R Ph.D. thesis
%I Department of Computer Science, University of Toronto
%D 1984

%L Mart89a
%K linear-logic concurrency
%A N. Mart\'i-Oliet
%A Jos\'e Meseguer
%T From Petri Nets to Linear Logic
%B Proceedings, Category Theory and Computer Science
%E D. Pitt et al.
%I Springer Verlag
%S LNCS 389
%C Manchester
%D Sept 1989
%% 5.2 CAT
%P 313-340

%L Mart91a
%K olit chloe oc91
%A Pat Martin
%A Simon Gibbs
%T Software Clearinghouses -- Form and Function
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 239-254
%X Software clearinghouses are repositories of software and
   software-related information. A software clearinghouse is accessible by
   members of an associated software community and serves to facilitate
   the exchange and dissemination of information within the community.
   This paper describes a variety of both existing and possible
   clearinghouses and establishes a set of criteria by which these
   clearinghouses can be evaluated.

%L Maru87a
%K olit-obc paradise simulation ecoop87
%A Takeo Maruichi
%A Tetsuya Uchiki
%A Mario Tokoro
%T Behavioral Simulation Based on Knowledge Objects
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 213-222

%L Masi89a
%K olit
%T Les Mardis Objets du CRIN, 20 Oct 1987 -- 31 Mai 1988
%R (CRIN 89-R-072)
%E G. Masini, Amedeo Napoli, D. Colnet D. L\'eonard and Karl Tombre
%I Centre de Recherche en Informatique de Nancy,
   Vandoeuvre-l\`es-Nancy
%D 1989

%L Maso83a
%K misc information
%A R.E.A. Mason
%A T.T. Carey
%T Prototyping Interactive Information Systems
%J CACM
%V 26
%D 1983
%P 347-354

%L Masu92a
%K olit-obc oopsla92
%A Hidehiko Masuhara
%A Satoshi Matsuoka
%A Takuo Watanabe
%A Akinori Yonezawa
%T Object-Oriented Concurrent Reflective Languages can be Implemented Efficiently
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 127-144

%L Mats88a
%K olit oopsla88
%A Satoshi Matsuoka
%A Satoru Kawai
%T Using Tuple Space Communication in Distributed Object-Oriented Languages
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 276-284

%L Mats91a
%K olit-obc ecoop91
%A Satoshi Matsuoka
%A Takuo Watanabe
%A Akinori Yonezawa
%T Hybrid Group Reflective Architecture for Object-Oriented Concurrent
   Reflective Programming
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 231-250

%L Mats91b
%K olit-obc inheritance anomaly
%A Satoshi Matsuoka
%A Ken Wakita
%A Akinori Yonezawa
%T On Inheritance in Concurrent Object-Oriented Languages
%J Proceedings of 7th Annual Conference of Japan Society for
   Software Science and Technology (JSSST)
%C Tokyo, Japan
%D 1991
%P 65-68
%% Earliest ref. to inheritance anomaly

%L Mats92a
%K olit-obc obc91
%A Satoshi Matsuoka
%A Takuo Watanabe
%A Yuuji Ichisugi
%A Akinori Yonezawa
%T Object-Oriented Concurrent Reflective Architectures
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 211-226

%L Mauw87a
%K pcalc regular processes
%A S. Mauw
%T A Constructive Version of the Approximation Induction Principle
%B Proceedings SION Conference (CSN 87)
%I CWI
%C Amsterdam
%D 1987
%P 235-252

%L May89a
%K concurrency petri occam binder(conc)
%A David May
%A Roger Shephard
%T Occam and the Transputer
%B Advances in Petri Nets 1989
%S LNCS 424
%E G. Rozenberg
%I Springer-Verlag
%D 1989
%% 5.32 ADV
%P 329-353

%L Maze84a
%K oislit mail routing
%A Murray S. Mazer
%A Frederick H. Lochovsky
%T Logical Routing Specification in Office Information Systems
%J ACM TOOIS
%V 2
%N 4
%D Oct 1984
%P 303-330

%L Maze86a
%K oislit
%A Murray S. Mazer
%T Exploring the link between office support systems and distributed
   problem solving systems
%E F.H. Lochovsky
%R Office and Data Base Systems Research 86',
   Technical Report CSRI-183
%I Computer Systems Research Institute, University of Toronto
%C Toronto
%D July 1986

%L McCa60a
%K fpl lisp
%A J. McCarthy
%T Recursive Functions of Symbolic Expressions and Their
   Computation by Machine, Part I
%J CACM
%V 3
%N 4
%D April 1960
%P 184-195

%L McCu87a
%K olit oopsla87
%A Paul L. McCullough
%T Transparent Forwarding: First Steps
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 331-341

%L McCu92a
%K olit ecoop92
%A Daniel L. McCue
%T Developing a Class Hierarchy for Object-Oriented Transaction Processing
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 413-426

%L McDo89a
%K olit oopsla89
%A John Alan McDonald
%T Object-Oriented Programming for Linear Algebra
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 175-184

%L McDo90a
%K olit oopsla90 ecoop90
%A John Alan McDonald
%A Werner Stuetzle
%A Andreas Buja
%T Painting Multiple Views of Complex Objects
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 245-257

%L McHa91a
%K olit-obc obc concurrency binder
%A Ciaran McHale
%A Bridget Walsh
%A Se\'an Baker
%A Alexis Donnelly
%T Scheduling Predicates
%R draft
%D Feb. 28, 1991
%O submitted for publication

%L McHa92a
%K olit-obc obc91
%A Ciaran McHale
%A Bridget Walsh
%A Se\'an Baker
%A Alexis Donnelly
%T Scheduling Predicates
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 177-193

%L McIl69a
%K olit binder
%A M.D. McIlroy
%T Mass Produced Software Components
%B Software Engineering
%E P. Naur and B. Randell
%I NATO Science Committee
%D Jan 1969
%P 138-150
%% 2.40 SOF

%L McLe81a
%K misc documents
%A I.A. McLeod
%T A Data Base Management System for Document Retrieval Applications
%J Information Systems
%V 6
%N 2
%D 1981
%P 131-137

%L McLe85a
%K olit-oodb knowrep
%A Dennis McLeod
%A S. Widjojo
%T Object Management and Sharing in Autonomous, Distributed
   Data/Knowledge Bases
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 83-89

%L Mede91a
%K olit ecoop91
%A Claudia Bauzer Medeiros
%A Patrick Pfeffer
%T Object Integrity Using Rules
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 219-230

%L Mell87a
%K olit ecoop87
%A Paola Mello
%A Antonio Natali
%T Objects as Communicating Prolog Units
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 181-191

%L Merr87a
%K olit oopsla87
%A Thomas Merrow
%A Jane Laursen
%T A Pragmatic System for Shared Persistent Objects
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 103-110

%L Mese90a
%K olit-obcl maude semantics oopsla90 ecoop90
%A Jos\'e Meseguer
%T A Logical Theory of Concurrent Objects
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 101-115

%L Mese90b
%K concurrency semantics binder (shelf)
%A Jos\'e Meseguer
%T Rewriting as a Unified Model of Concurrency
%R SRI-CSL-90-02R
%I SRI International
%D June 1990

%L Mese92a
%K olit-obcl maude semantics binder (shelf)
%A Jos\'e Meseguer
%T A Logical Theory of Concurrent Objects and its Realization in the
   Maude Language
%R SRI-CSL-92-08
%I SRI International
%D July 1992

%L Mese93a
%K olit ecoop93
%A Jos\'e Meseguer
%T Solving the Inheritance Anomaly in Concurrent Object-Oriented Programming
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 220-246
%X The inheritance anomaly refers to the serious difficulty in
   combining inheritance and concurrency in a simple and satisfactory
   way within a concurrent object-oriented language.  The problem is
   closely connected with the need to impose synchronization
   constraints on the acceptance of a message by an object.  In most
   concurrent object-oriented languages this synchronization is
   achieved by synchronization code controlling the acceptance of
   messages by objects.  Synchronization code is often hard to inherit
   and tends to require extensive redefinitions.  The solutions that
   have appeared so far in the literature to alleviate this problem
   seem to implicitly assume that better, more reusable, mechanisms are
   needed to create and structure synchronization code.  The approach
   taken in this paper is to consider the inheritance anomaly as a
   problem caused by the very presence of synchronization code.  The
   goal is then to completely eliminate synchronization code.  This is
   achieved by using order-sorted rewriting logic, an abstract model of
   concurrent computation that is machine-independent and extremely
   fine grain, and that can be used directly to program concurrent
   object-oriented systems.  Our proposed solution involves a
   distinction between two different notions of inheritance, a
   type-theoretic one called class inheritance, and a notion called
   module inheritance that supports reuse and modification of code.
   These two different notions address two different ways in which the
   inheritance anomaly can appear; for each of them we propose
   declarative solutions in which no explicit synchronization code is
   ever used.

%L Metc76a
%K misc ethernet networks
%A R.M. Metcalfe
%A D.R. Boggs
%T Ethernet: Distributed Packet Switching for Local Computer Networks
%J CACM
%V 19
%N 7
%D July 1976
%P 395-404

%L Meul87a
%K olit oopsla87
%A Pieter S. van der Meulen
%T INSIST: Interactive Simulation in Smalltalk
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 366-376

%L Mey90a
%K olit-ithaca vista scripting
%A Vicki de Mey
%T Vista Implementation
%R ITHACA report CUI.90.E.4.#1
%I Centre Universitaire d'Informatique, University of Geneva
%D Dec, 1990

%L Mey90b
%K olit-ithaca vista scripting
%A Vicki de Mey
%T Vista User's Guide
%R ITHACA report CUI.90.E.4.#2
%I Centre Universitaire d'Informatique, University of Geneva
%D Dec, 1990

%L Mey91a
%K olit-ithaca chloe vista oc91
%A Vicki de Mey
%A Betty Junod
%A Serge Renfer
%A Marc Stadelmann
%A Ino Simitsek
%T The Implementation of Vista -- A Visual Scripting Tool
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 31-56
%X This paper describes the implementation of a visual scripting tool
   called Vista. Vista is being developed within the scope of ITHACA, an
   Esprit II project. Major implementation issues are highlighted,
   implementation experience is discussed and code examples are included.

%L Mey91b
%K olit chloe oc91
%A Vicki de Mey
%T Flexible Graphic Design Systems
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 145-155
%O A version of the following was presented as a position paper at the
   Second Eurographics Workshop on Object-Oriented Graphics, Texel, the
   Netherlands, June 4-7, 1991.
%X Today's graphic design systems do not sufficiently support the
   designer.  Advances have been made and there is no doubt that the
   computer is here to stay in the design community but not with out
   further modifications. This paper discusses the current situation and
   attempts to highlight some of the key areas where computer support is
   needed. A flexible graphic design system is proposed and some useful
   technologies for its conception are presented.

%L Mey92a
%K olit-ithaca chloe of92
%A Vicki de Mey
%A Christian Breiteneder
%A Laurent Dami
%A Simon Gibbs
%A Dennis Tsichritzis
%T Visual Composition and Multimedia
%J Proceedings of Eurographics 1992, Computer Graphics Forum
%V 11
%N 3
%I Blackwell Publishers
%D 1992
%P 9-22

%L Mey92b
%K olit-ithaca chloe of92
%A Vicki de Mey
%T Experimenting with Component-Oriented Software Development
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 221-241

%L Mey92c
%% CB14
%K olit-ithaca chloe vista chloe-book
%A Vicki de Mey
%A Betty Junod
%A Serge Renfer
%T Vista Implementation
%R ITHACA.CUI.92.Vista.#1
%I Centre Universitaire d'Informatique, University of Geneva
%D Dec. 1992
%X This paper describes the implementation of a visual scripting tool
   called Vista. Vista is being developed within the scope of ITHACA,
   an Esprit II project. Major implementation issues are highlighted,
   implementation experience is discussed and code examples are
   included.

%L Mey92d
%K olit-ithaca chloe vista
%A Vicki de Mey
%A Betty Junod
%A Serge Renfer
%T Vista User's Guide
%R ITHACA.CUI.92.Vista.#2
%I Centre Universitaire d'Informatique, University of Geneva
%D Dec. 1992

%L Mey92e
%K olit-ithaca chloe
%A Vicki de Mey
%T Experience with Vista
%R ITHACA.CUI.92.Vista.#3
%I Centre Universitaire d'Informatique, University of Geneva
%D Nov. 1992

%L Mey92f
%K olit-ithaca chloe
%A Vicki de Mey
%A Oscar Nierstrasz
%A Serge Renfer
%A Roberto Bellinzona
%A Mariagrazia Fugini
%A Panos Constantopoulos
%A Martin D\:orr
%A Maria Theodoridou
%T RECAST/Vista/SIB Integration
%R ITHACA.CUI-POLIMI-FORTH.92.Vista.Recast.SIB.#1
%I Centre Universitaire d'Informatique, University of Geneva
%D Dec. 1992
%% REPORT

%L Mey92g
%K olit-ithaca chloe
%A Vicki de Mey
%A Simon Gibbs
%T Working with Multimedia
%J OUTPUT, special issue on Informatik-Szene Schweiz 1993
%D Dec. 11, 1992
%P 54-56

%L Mey93a
%% CB19
%K olit chloe vo93 chloe-book
%A Vicki de Mey
%A Simon Gibbs
%T A Multimedia Component Kit
%B Proceedings ACM Multimedia '93
%C Annaheim, CA
%D Aug 4-6, 1993
%O to appear
%X In this paper we present an object-oriented perspective to
   multimedia and discuss a testbed for prototyping distributed
   multimedia applications. We describe the implementation of the
   testbed which includes a driver application, called a virtual
   museum, and a visual composition tool. The tool allows interactive
   construction of multimedia applications from generic software
   components by direct manipulation and graphical editing. A videotape
   of the virtual museum and the visual composition tool is used for
   the presentation of the testbed.

%L Mey93b
%K olit-ithaca chloe-ftp vo93
%A Vicki de Mey
%A Oscar Nierstrasz
%T The ITHACA Application Development Environment
%R Visual Objects
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1993
%P 267-280
%% REPORT
%X The goal of ITHACA is to produce a complete object-oriented
   application development environment. This paper reports on the
   status of ITHACA in relation to this ambitious goal concentrating on
   the tools comprising the application development environment. Some
   general observations and recommendations are made concerning the
   integration of the tools.  Future directions of the project are also
   outlined.
%% ftp: cui.unige.ch:OO-articles/ithacaADE.ps.Z

%L Meye85a
%K pcalc regular processes
%A J.-J.Ch. Meyer
%T Merging Regular Processes by Means of Fixed Point Theory
%J Theoretical Computer Science
%V 45
%I North-Holland
%D 1985
%P 193-260

%L Meye86a
%K types olit inheritance eiffel polymorphism oopsla86 obib(inh)
%A Bertrand Meyer
%T Genericity versus Inheritance
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 391-405

%L Meye88a
%K olit-oopl eiffel obib(oopl)
%A Bertrand Meyer
%T Object-oriented Software Construction
%I Prentice Hall
%D 1988

%L Meye88b
%K olit eiffel exceptions binder
%A Bertrand Meyer
%T Disciplined Exceptions
%R TR-EI-22/EX
%I Interactive Software Engineering
%C Goleta, CA
%D 1988

%L Meye89a
%K olit tools89
%A Bertrand Meyer
%T The New Culture of Software Development: Reflections
   on the Practice of Object-Oriented Design
%B Proceedings TOOLS '89
%D Nov. 1989
%P 13-23

%L Meye92a
%K olit-oopl eiffel obib(oopl)
%A Bertrand Meyer
%T Eiffel: The Language
%I Prentice Hall
%D 1992

%L Meye92b
%K olit-oopl ieee
%A Bertrand Meyer
%T Applying "Design by Contract"
%J IEEE Computer (Special Issue on Inheritance & Classification)
%V 25
%N 10
%D Oct 1992
%P 40-52

%L Meyr82a
%K uilit editing
%A Norman Meyrowitz
%A Andy van Dam
%T Interactive Editing Systems (Parts I and II)
%J ACM Computing Surveys
%V 14
%N 3
%D Sept 1982
%P 321-415

%L Meyr86a
%K olit survey special issue oopsla86 obib(gen)
%T Proceedings OOPSLA '86
%E Norman Meyrowitz
%J ACM SIGPLAN Notices
%V 21
%N 11
%C Portland, Oregon
%D Nov 1986

%L Meyr86b
%K olit-appl intermedia hypertext oopsla86 obib(sys)
%A Norman Meyrowitz
%T Intermedia: The Architecture and Construction of an
   Object-Oriented Hypermedia System and Applications Framework
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 186-201

%L Meyr87a
%K olit survey special issue oopsla87 obib(gen)
%T Proceedings OOPSLA '87
%E Norman Meyrowitz
%J ACM SIGPLAN Notices
%V 22
%N 12
%C Orlando, Florida
%D Dec 1987

%L Meyr88a
%K olit survey special issue oopsla88 obib(gen)
%T Proceedings OOPSLA '88
%E Norman Meyrowitz
%J ACM SIGPLAN Notices
%V 23
%N 11
%C San Diego, California
%D Nov 1988

%L Meyr89a
%K olit survey special issue oopsla89 obib(gen)
%T Proceedings OOPSLA '89
%E Norman Meyrowitz
%J ACM SIGPLAN Notices
%V 24
%N 10
%C New Orleans, Louisiana
%D Oct 1989

%L Meyr90a
%K olit survey special issue oopsla90 ecoop90 obib(gen)
%T Proceedings OOPSLA/ECOOP '90
%E Norman Meyrowitz
%J ACM SIGPLAN Notices
%V 25
%N 10
%C Ottawa, Canada
%D Oct 1990

%L Mill77a
%K concurrency other
%A R. Miller
%A C.K. Yap
%T Formal Specification and Analysis of Loosely Connected Processes
%R IBM Research Report #28917
%I Yorktown Heights
%C N.Y.
%D 1977

%L Mill86a
%K olit-appl aais smalltalk oopsla86
%A Michael S. Miller
%A Howard Cunningham
%A Chan Lee
%A Steven R. Vegdahl
%T The Application Accelerator Illustration System
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 294-302

%L Miln78a
%K types fp polymorphism binder
%A Robin Milner
%T A Theory of Type Polymorphism in Programming
%J Journal of Computer and System Sciences
%V 17
%D 1978
%P 348-375

%L Miln79a
%K pcalc semantics domains
%A G. Milne
%A Robin Milner
%T Concurrent Processes and Their Syntax
%J Journal of the ACM
%V 26
%N 2
%D April 1979
%P 302-321

%L Miln80a
%K pcalc equivalence ccs
%A Robin Milner
%T A Calculus of Communicating Systems
%S LNCS 92
%E G. Goos and J. Hartmanis
%I Springer-Verlag
%D 1980

%L Miln81a
%K pcalc equivalence ccs caap81 binder(ccs)
%A Robin Milner
%T A Modal Characterization of Observable Machine-Behaviour
%B Proceedings CAAP '81
%E E. Astesiano and C. B\:ohm
%I Springer-Verlag
%S LNCS 112
%C Genoa
%D March 1981
%% 5.32 CAA
%P 25-34

%L Miln83a
%K pcalc equivalence ccs binder(ccs)
%A Robin Milner
%T Calculi for Synchrony and Asynchrony
%J Theoretical Computer Science
%V 25
%I North-Holland
%D 1983
%P 267-310

%L Miln84a
%K pcalc regular processes binder
%A Robin Milner
%T A Complete Inference System for a Class of Regular Behaviours
%J Journal of Computer and System Sciences
%V 28
%I Academic Press
%D 1984
%P 439-466

%L Miln89a
%K pcalc equivalence ccs
%A Robin Milner
%T Communication and Concurrency
%I Prentice-Hall
%D 1989

%L Miln89b
%K pcalc mobility ccs binder(ccs)
%A Robin Milner
%T Functions as Processes
%I University of Edinburgh
%D June 1989
%O Working paper

%L Miln89c
%K pcalc mobility ccs binder (shelf)
%A Robin Milner
%A Joachim Parrow
%A David Walker
%T A Calculus of Mobile Processes, Parts I and II
%R Reports ECS-LFCS-89-85 and -86
%I Computer Science Dept., University of Edinburgh
%D March 1989

%L Miln90a
%K pcalc mobility ccs icalp90 binder(ccs)
%A Robin Milner
%T Functions as Processes
%B Proceedings ICALP '90
%E M.S. Paterson
%I Springer-Verlag
%S LNCS 443
%C Warwick U.
%D July 1990
%% 5.2 AUT
%P 167-180

%L Miln90b
%K pcalc mobility ccs icalp90 binder(ccs)
%A Robin Milner
%T Sorts and Types in the \pi Calculus
%R manuscript (RM15)
%I Computer Science Dept., University of Edinburgh
%D December 1990

%L Miln90c
%K fpl ml semantics
%A Robin Milner
%A M. Tofte
%A R. Harper
%T The definition of standard ML.
%I MIT Press
%C Cambridge
%D 1990
%% D.1.1 MIL

%L Miln90d
%K pcalc mobility (uwe)
%% TECHREPORT
%A Robin Milner
%T Functions as Processes
%I INRIA Sofia-Antipolis
%R Rapport de Recherche 1154
%D 1990

%L Miln91a
%K pcalc mobility equivalence ccs binder
%A Robin Milner
%A Davide Sangiorgi
%T Barbed Bisimulation
%B Proceedings ICALP '92
%C Vienna
%D 1992
%O to appear
%% draft version

%L Miln91b
%K fpl ml semantics
%A Robin Milner
%A M. Tofte
%T Commentary on standard ML.
%I MIT Press
%C Cambridge
%D 1991
%% D.1.1 MIL

%L Miln91c
%K pcalc mobility binder
%A Robin Milner
%T The Polyadic \pi Calculus
%R ECS-LFCS-91-180
%I Computer Science Dept., University of Edinburgh
%D Oct. 1991

%L Miln91d
%K pcalc mobility equivalence concur91 binder
%A Robin Milner
%A Joachim Parrow
%A David Walker
%T Modal Logics for Mobile Processes
%B Proceedings of CONCUR'91
%E J.C.M. Baeten and J.F. Groote
%S LNCS 527
%I Springer-Verlag
%C Amsterdam
%D Aug. 1991
%P 45-60
%% Also: ECS-LFCS-91-136

%L Miln91e
%K pcalc mobility (uwe)
%% INPROCEEDINGS
%A Robin Milner
%T Concurrency and Compositionality
%D 1991
%O Workshop at Goslar

%L Miln92a
%K pcalc mobility (uwe)
%% ARTICLE
%A Robin Milner
%A Joachim Parrow
%A David Walker
%T A Calculus of Mobile Processes, Part I/II
%J Information and Computation
%V 100
%D 1992
%P 1-77

%L Miln92b
%K pcalc mobility (uwe)
%% ARTICLE
%A Robin Milner
%T Functions as Processes
%J Mathematical Structures in Computer Science
%V 2
%N 2
%D 1992
%P 119-141

%L Mins67a
%K misc computability
%A M. Minsky
%T Computation: Finite and Infinite Machines
%I Prentice-Hall
%D 1967

%L Mins87a
%K olit-oopl darwin oopsla87
%A Naftaly H. Minsky
%A David Rozenshtein
%T A Law-Based Approach to Object-Oriented Programming
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 482-493

%L Mins89a
%K olit oopsla89
%A Naftaly H. Minsky
%A David Rozenshtein
%T Controllable Delegation: An Exercise in Law-Governed Systems
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 371-380

%L Mira87a
%K olit oopsla87
%A Eliot Miranda
%T BrouHaHa - A Portable Smalltalk Interpreter
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 354-365

%L Misr88a
%K olit 4gl
%A S.K. Misra
%A P.J. Jalic
%T Third-Generation versus Fourth-Generation Software Development
%J IEEE Software
%V 5
%N 4
%D July 1988
%P 8-14

%L Mitc79a
%K olit-oopl mesa monitors
%A J.G. Mitchell
%A W. Maybury
%A R. Sweet
%T Mesa Language Manual, version 5.0
%R CSL-79-3
%I Xerox Palo Alto Research Centre
%D April 1979

%L Mitc85a
%K types fpl sol popl85
%A John C. Mitchell
%A Gordon D. Plotkin
%T Abstract Types Have Existential Type
%B Proceedings POPL '85
%C New Orleans
%D Jan. 14-16, 1985
%P 37-51

%L Mitc88a
%K types fpl sol binder
%A John C. Mitchell
%A Gordon D. Plotkin
%T Abstract Types Have Existential Type
%J ACM TOPLAS
%V 10
%N 3
%D July 1988
%P 470-502

%L Mitc90a
%K types binder
%A John C. Mitchell
%T Type Systems for Programming Languages
%B Handbook of Theoretical Computer Science
%E J. van Leeuwen
%I Elsevier
%D 1990
%P 367-458

%L Mitt86a
%K olit-oopl loops oopsla86
%A Sanja Mittal
%A Daniel G. Bobrow
%A Kenneth M. Kahn
%T Virtual Copies -- At the Boundary Between Classes and Instances
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 159-166

%L Moer92a
%K olit-oodb binder
%A Guido Moerkotte
%A Andreas Zachmann
%T Multiple Substitutability Without Affecting the Taxonomy
%B Proceedings EDBT '92
%D 1992

%L Moer93a
%K olit-oodb binder
%A Guido Moerkotte
%A Andreas Zachmann
%T Towards More Flexible Schema Management in Object Bases
%J IEEE Data Engineering
%D 1993
%O to appear

%L Moon84a
%K olit-oopl oz ois
%A J. Mooney
%T Oz: An Object-based System for Implementing Office Information Systems
%R M.Sc. thesis
%I Department of Computer Science, University of Toronto
%D 1984

%L Moon86a
%K olit-oopl flavors lisp oopsla86 obib(oopl)
%A David A. Moon
%T Object-Oriented Programming with Flavors
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 1-8

%L Moon89a
%K olit tfc oocda89
%A David A. Moon
%T The Common Lisp Object-Oriented Programming Language Standard
%B Object-Oriented Concepts, Databases and Applications
%E W. Kim and F. Lochovsky
%I ACM Press and Addison-Wesley
%D 1989
%P 49-78

%L Mori86a
%K misc selit pegasys
%A M. Moriconi
%A D. Hare
%T The PegaSys System: Pictures as Formal Documentation of Large Programs
%J ACM TOPLAS
%V 8
%N 4
%D Oct 1986
%P 419-490

%L Mori89a
%K olit
%A R. Mori
%A M. Kawahara
%T Superdistribution: The Concept and the Architecture
%J Transactions of the IEICE
%V E 73
%N 7
%D July 1990
%P 1133-1146

%L Morz91a
%K olit ecoop91
%A Angelo Morzenti
%A Pierluigi San Pietro
%T An Object-Oriented Logic Language for Modular System Specification
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 39-58

%L Moss81a
%K olit transactions reliability binder (shelf)
%A J. Eliot B. Moss
%T Nested Transactions: An Approach to Reliable Distributed Computing
%R Ph.D. thesis, MIT/LCS/TR-260
%I MIT Dept EE and CS
%D April 1981

%L Moss82a
%K dblit transactions reliability
%A J. Eliot B. Moss
%T Nested Transactions and Reliable Distributed Computing
%B Proceedings 2nd Symposium on Reliability in
   Distributed Software and Database Systems
%C Pittsburgh, PA
%D July 1982
%P 33-39

%L Moss83a
%K dblit transactions reliability
%A J. Eliot B. Moss
%T Checkpoint and Restart in Distributed Transaction Systems
%B Proceedings 3rd Symposium on Reliability in
   Distributed Software and Database Systems
%D 1983

%L Moss87a
%K olit-obcl trellis owl ecoop87 obib(obcp)
%A J. Eliot B. Moss
%A Walter H. Kohler
%T Concurrency Features for the Trellis/Owl Language
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 171-180

%L Moss89a
%K pl-semantics
%A Peter D. Mosses
%T Unified Algebras and Action Semantics
%B Proceedings of the 6th Annual Symposium on Theoretical Aspects of
   Computer Science, STACS'89
%S LNCS 349
%I Springer-Verlag
%C Paderborn
%D Feb. 1989
%P 17-35

%L Moss92a
%K olit
%A J. Eliot B. Moss
%T Working with Persistent Objects: To Swizzle or Not to Swizzle
%J IEEE Transactions on Software Engineering
%V SE-18
%N 8
%D Aug 1992
%P 657-673

%L Muel89a
%K olit-oopl ase ecoop89
%A Gerhard M\:uller
%A Anna-Kristin Pr\:ofrock
%T Four Steps and a Rest in Putting an Object-Oriented Programming
   Environment to Practical Use
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 271-282

%L Mugr91a
%K types olit ecoop91
%A Warwick B. Mugridge
%A John Hamer
%A John G. Hosking
%T Multi-Methods in a Statically-Typed Programming Language
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 307-324

%L Murp90a
%K pcalc ccs real-time
%A D. Murphy
%T Approaching a Real-Timed Concurrency Theory
%B Semantics for Concurrency
%E M.Z. Kwiatkowska, M.W. Shields and R.M. Thomas
%S Workshops in Computing
%I Springer-Verlag
%D 1990
%% 5.24 SEM
%P 294-310

%L Myer87a
%K uilit
%A Brad Myers
%T Creating User Interfaces by Demonstration
%R Ph.D. thesis, CSRI Technical Report #196
%I Department of Computer Science, University of Toronto
%D May 1987

%L Myer92a
%K olit oopsla92
%A Brad A. Myers
%A Dario A. Giuse
%A Brad Vander Zanden
%T Declarative Programming in a Prototype-Instance System:
   Object-Oriented Programming Without Writing Methods
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 184-200

%L Mylo80a
%K olit-oopl taxis
%A John Mylopoulos
%A Philip A. Bernstein
%A H.K.T. Wong
%T TAXIS: A Language Facility for Designing Database-Intensive Applications
%J ACM TODS
%V 5
%N 2
%D June 1980
%P 185-207

%L Mylo83a
%K misc ai
%A John Mylopoulos
%A H. Levesque
%T An Overview of Knowledge Representation
%B On Conceptual Modelling: Perspectives from Artificial
   Intelligence, Databases and Programming Languages
%E M. Brodie, J. Mylopoulos
%I Springer-Verlag
%C New York
%D 1983
%P 3-17

%L Naff81a
%K oislit multitype documents
%A Najah Naffah
%T Editing Multitype Documents
%B Proceedings of the International Workshop
   on Office Information Systems
%D Oct 1981

%L Najm91a
%K pcalc-obc tapsoft91 binder
%A Elle Najm
%A Jean-Bernard Stefani
%T Object-Based Concurrency: A Process Calculus Analysis
%B Proceedings TAPSOFT '91
%S LNCS 493
%E S. Abramsky and T. Maibaum
%I Springer-Verlag
%D 1991
%% K.6.3 TAP
%P 359-380

%L Nest92a
%K pcalc binder (shelf)
%A Uwe Nestmann
%A L\'aszl\'o Teleki
%T Towards a Calculus of Communicating Functions
%R IMMD7-13/92
%I Univ. Erlangen-N\:urnberg
%D Dec 1992
%O submitted for publication

%L Nest92b
%K pcalc binder (shelf)
%A Uwe Nestmann
%A L\'aszl\'o Teleki
%T A Chemical Abstract Machine for a Calculus of Communicating Functions
%R IMMD7-14/92
%I Univ. Erlangen-N\:urnberg
%D Dec 1992
%O submitted for publication

%L Neus91a
%K olit ecoop91
%A Christian Neusius
%T Synchronizing Actions
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 118-132

%L Newm79a
%K misc graphics
%A W.M. Newman
%A R.F. Sproull
%T Principles of Interactive Computer Graphics
%O Second edition
%S Computer Science Series
%I McGraw-Hill
%D 1979

%L Next89a
%K olit scripting interface builder
%T NeXT Preliminary 1.0 System Reference Manual: Concepts
%I NeXT Inc.
%D 1989

%L Nguy86a
%K olit-obc concepts messages oopws86
%A V. Nguyen
%A Brent Hailpern
%T A Generalized Object Model
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 78-87

%L Nguy92a
%K olit ecoop92
%A G.T. Nguyen
%A D. Rieu
%A J. Escamilla
%T An Object Model for Engineering Design
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 233-251

%L Niel90a
%K pcalc binder(conc)
%A Flemming Nielson
%T The Typed Lambda-Calculus with First-Class Processes
%B Proceedings PARLE '89, Vol II
%S LNCS 366
%E E. Odijk, J-C. Syre
%I Springer Verlag
%C Eindhoven
%D June 1989
%P 357-373

%L Nier81a
%K oislit forms tla
%A Oscar Nierstrasz
%T Automatic Coordination and Processing of Electronic Forms in TLA
%R M.Sc. thesis
%I Department of Computer Science, University of Toronto
%D 1981
%% REPORT

%L Nier82a
%K oislit mail modeling
%A Oscar Nierstrasz
%A Dennis Tsichritzis
%T Message Flow Modeling
%R Alpha Beta, Technical Report 143
%I Computer Systems Research Group, University of Toronto
%D 1982
%% REPORT
%X A message management system provides users with a facility for
   automatically handling messages.  This paper describes a technique
   for characterizing the behaviour of such a system in terms of
   message flow.  Messages may be conveniently classed according to
   what \fIpath\fR or sequences of stations they visit.  Complicated or
   unpredictable behaviour may be modeled non-deterministically, and
   the resulting message paths are shown to be regular expressions.

%L Nier83a
%K olit-oopl oz ois
%A Oscar Nierstrasz
%A J. Mooney
%A K.J. Twaites
%T Using Objects to Implement Office Procedures
%B Proceedings of the Canadian Information Processing Society Conference
%C Ottawa
%D May 1983
%P 65-73
%% JOURNAL
%X Office information systems (OISs) provide facilities for
   automatically triggering procedures when certain conditions become
   true or particular events take place such as receipt of mail.  Such
   systems are characterized by a high degree of parallel activity that
   cooperates with but may run independently of user processes.
   Traditional high-level programming languages do not readily capture
   this sort of behaviour.  This makes building a customized OIS a
   painful process.  "Objects" are entities with contents and a set of
   rules describing their use.  We believe that objects are a useful
   primitive for designing and building such systems quickly.

%L Nier83b
%K oislit mail modeling
%A Oscar Nierstrasz
%A Dennis Tsichritzis
%T Office Object Flow
%R Technical Report 150
%I Computer Systems Research Group, University of Toronto
%D 1983
%% REPORT
%X Office information systems provide facilities for automatically
   triggering procedures when certain conditions become true or
   particular events take place such as receipt of mail.  When these
   procedures operate concurrently and independently in a common
   environment, the overall behaviour of the system may be unexpected.
   \fIFiring expressions\fP are proposed as a tool for describing
   global behaviour and for detecting unusual properties of the
   system.

%L Nier84a
%K oislit mail modeling
%A Oscar Nierstrasz
%T Message Flow Analysis
%R Ph.D. thesis, CSRI Technical Report #165
%I Department of Computer Science, University of Toronto
%D 1984
%% REPORT
%X A message management system enables its users to automatically
   process messages.  Procedures associated with a workstation may scan
   incoming mail, perform some routine processing and possibly forward
   the mail.  The global properties of such systems may be far from
   obvious when large numbers of procedures are present.  We attempt to
   gain insight into global behaviour by studying "message flow".  We
   do so by partitioning message domains into state-spaces, and
   analyzing the state transitions effected by procedures.  Message
   flow for messages of a given type can thus be represented by a
   finite automaton whose states are the message states.  The finite
   automata for the various message types can be "welded together" to
   form a Petri net that accurately captures both the message flow for
   individual message types and the coordination by procedures of
   messages of different types.  The model is useful for obtaining a
   descriptive analysis of behaviour, and for analyzing interesting
   behaviour such as blocking, deadlock, "message loops" and "procedure
   loops".  In addition we present some techniques useful for detecting
   message loops and procedure loops at run time.

%L Nier85a
%K olit-oopl oz (crete) oact85
%A Oscar Nierstrasz
%T An Object-Oriented System
%B Office Automation: Concepts and Tools
%E D. Tsichritzis
%I Springer Verlag
%C Heidelberg
%D 1985
%P 167-190
%% ARTICLE
%X Applications in Office Information Systems are often very difficult
   to implement and prototype, largely because of the lack of
   appropriate programming tools.  We argue here that "objects" have
   many of the primitives that we need for building OIS systems, and we
   describe an object-oriented programming system that we have
   developed.

%L Nier85b
%K oislit mail modeling (crete) oact85
%A Oscar Nierstrasz
%T Message Flow Analysis
%B Office Automation: Concepts and Tools
%E D. Tsichritzis
%I Springer Verlag
%C Heidelberg
%D 1985
%P 283-314
%% ARTICLE
%X Message management systems with facilities for the automatic
   processing of messages can exhibit anomalous behaviour such as
   infinite loops and deadlock.  In this paper we present some methods
   for analyzing the behaviour of these systems by generating
   expressions of message flow from the procedure specifications.
   Message domains are partitioned into state spaces, and procedures
   can be interpreted as automata effecting state changes.  Blocking of
   procedures and procedure loops can then be detected by studying the
   resulting finite automaton and Petri net representations of message
   flow.

%L Nier85c
%K olit-oopl hybrid oz ois knos
%A Oscar Nierstrasz
%A Dennis Tsichritzis
%T An Object-Oriented Environment for OIS Applications
%B Proceedings, Conference on Very Large Data Bases
%C Stockholm
%D Aug 1985
%P 335-345
%% JOURNAL
%X Object-oriented programming environments are increasingly needed for
   programming OIS applications.  A prototype object-oriented language
   has been implemented, and we are refining the language and its
   implementation.  The environment integrates a number of database and
   operating system concepts, in particular, abstract data types,
   database constraints, atomic transactions, data persistency,
   triggering of events, reliability and crash recovery, and a large
   virtual memory.  We outline the object model, discuss a number of
   implementation issues, and give some examples of objects useful in
   an OIS application environment.

%L Nier85d
%K olit-oopl hybrid
%A Oscar Nierstrasz
%T Hybrid: A Unified Object-Oriented System
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 49-57
%% JOURNAL
%X Hybrid is a data abstraction language that attempts to unify a
   number of object-oriented concepts into a single, coherent system.
   In this paper we give an overview of our object model, describe a
   number of the language constructs, and briefly discuss the issue of
   object management.

%L Nier86a
%K olit survey chloe oat87
%A Oscar Nierstrasz
%T What is the `Object' in Object-oriented Programming?
%B Proceedings of the CERN School of Computing
%V CERN 87-04
%C Renesse, The Netherlands
%D Sept 1986
%P 43-53
%% ARTICLE
%X Object-oriented programming has become quite widespread in recent
   years, although there are few guidelines to help us distinguish when
   a system is ``truly'' object-oriented or not.  In this paper we
   discuss what have emerged as the main concepts in the
   object-oriented approach, and we attempt to motivate these concepts
   in terms of how they aid in software development.

%L Nier87a
%K olit-obcl hybrid types chloe oat87
%A Oscar Nierstrasz
%T Hybrid -- A Language for Programming with Active Objects
%R Objects and Things
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D March 1987
%% REPORT
%P 15-42
%% MIR
%X Hybrid is an object-oriented programming language in which objects
   are the active entities. Active objects in Hybrid are both
   concurrent and persistent, thus unifying the notion of an "object"
   with that of processes and files.  Hybrid introduces the concept of
   an activity as a means for controlling the interactions between
   active objects. The language provides constructs that allow one to
   restrict or relax this control in a fairly simple way. In
   particular, mechanisms for delaying and "delegating" activities are
   provided.  Furthermore, Hybrid is designed so as to provide powerful
   constructs for reusing code in a way that is consistent with
   strong-typing.

%L Nier87b
%K olit-obc hybrid triggers deadlock chloe oat87
%A Oscar Nierstrasz
%T Triggering Active Objects
%R Objects and Things
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D March 1987
%% REPORT
%P 43-78
%% MIR
%X Active objects are concurrent, active entities based on the
   object-oriented paradigm. We present a model for understanding
   active objects based on the remote procedure call, and on the notion
   of activities, which capture a single-thread flow of control between
   objects. We also present simple mechanisms for creating activities,
   interleaving and delaying activities, and for constructing atomic
   actions and concurrent subactivities. We show how these mechanisms
   can be used to capture very general forms of triggering. Our model
   for active objects, and the mechanisms for manipulating activities
   are embedded in Hybrid, a concurrent, object-oriented language. The
   model is also useful for understanding and dealing with deadlock in
   such systems.

%L Nier87c
%K olit-obcl hybrid triggers chloe-ftp oopsla87 obib(obcp)
%A Oscar Nierstrasz
%T Active Objects in Hybrid
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 243-253
%% JOURNAL
%% ftp: cui.unige.ch:OO-articles/activeObjectsInHybrid.ps.Z
%X Most object-oriented languages are strong on reusability
   or on strong-typing, but weak on concurrency.  In response to this
   gap, we are developing Hybrid, an object-oriented language in which
   objects are the active entities.  Objects in Hybrid are organized
   into domains, and concurrent executions into activities.  All object
   communications are based on remote procedure-calls.  Unstructured
   sends and accepts are forbidden.  To this the mechanisms
   of delegation and delay queues are added to enable
   switching and triggering of activities.  Concurrent subactivities
   and atomic actions are provided for compactness and simplicity.  We
   show how solutions to many important concurrent problems, such a
   pipelining, constraint management and ``administration'' can be
   compactly expressed using these mechanisms.

%L Nier87d
%K olit survey chloe oat87
%A Oscar Nierstrasz
%T Object-oriented Issues: A Literature Review
%R Objects and Things
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D March 1987
%% REPORT
%P 183-206
%X Papers dealing with object-oriented issues are grouped according to
   whether they are concerned with languages and systems or
   applications.  Papers dealing with related issues are also listed.
   An alphabetical bibliography is given at the end.  Some effort has
   been made to discard obsolete or hard-to-find papers.

%L Nier88a
%K olit-obc abacus chloe aoe88
%A Oscar Nierstrasz
%T Mapping Object Descriptions to Behaviours
%R Active Object Environments
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1988
%P 106-113
%% REPORT
%X There is a lack of good formalisms and tools for describing the
   semantics of object-oriented and concurrent programming languages.
   We propose a computational model for objects in which {\it events}
   are synchronous communications between concurrent agents, {\it
   computations} are partial orderings of events, and {\it behaviours}
   are the possible event unfoldings in which an agent, or a system of
   concurrent agents, may participate.  Furthermore, we introduce a
   language called {\it Abacus} for defining executable behaviour
   expressions, and we speculate how this language may be used as part
   of a practical system for defining the formal semantics of
   programming languages.

%L Nier89a
%K olit survey chloe-ftp aoe88 oocda89 obib(gen)
%A Oscar Nierstrasz
%T A Survey of Object-Oriented Concepts
%B Object-Oriented Concepts, Databases and Applications
%E W. Kim and F. Lochovsky
%I ACM Press and Addison-Wesley
%D 1989
%% MIR
%P 3-21
%% ARTICLE
%X The object-oriented paradigm has gained popularity in various guises
   not only in programming languages, but in user interfaces, operating
   systems, databases, and other areas.  We argue that the fundamental
   object-oriented concept is {\it encapsulation}, and that all
   object-oriented mechanisms and approaches exploit this idea to
   various ends.  We introduce the most important of these mechanisms
   as they are manifested in existing object-oriented systems, and we
   discuss their relevance in the context of modern application
   development.
%% ftp: cui.unige.ch:OO-articles/surveyOfOOConcepts.ps

%L Nier89b
%K olit-appl survey chloe-ftp aoe88 oocda89
%A Oscar Nierstrasz
%A Dennis Tsichritzis
%T Integrated Office Systems
%B Object-Oriented Concepts, Databases and Applications
%E W. Kim and F. Lochovsky
%I ACM Press and Addison-Wesley
%D 1989
%P 199-215
%% MIR
%% ARTICLE
%X New techniques are sorely needed to aid in the
   development and maintenance of large application systems.  The
   problem with traditional approaches to software engineering is well
   in evidence in the field of office information systems: it is costly
   and difficult to extend existing applications, and to get unrelated
   applications to ``talk'' to each other.  The object-oriented
   approach is already being tentatively applied in the modeling of
   ``office objects'' and in the presentation of these entities to
   users as such in ``desktop'' interfaces to office software.  In
   order to fully exploit the approach to achieve integrated office
   systems, we need to use object-oriented programming languages,
   object-oriented run-time support, and object-oriented software
   engineering environments.
%% ftp: cui.unige.ch:OO-articles/integratedOfficeSystems.ps.Z

%L Nier89c
%K olit-obc abacus obcp89
%A Oscar Nierstrasz
%T Two Models of Concurrent Objects
%J ACM SIGPLAN Notices, Proceedings Workshop on Object-Based
   Concurrent Programming (San Diego, Sept 26-27, 1988)
%V 24
%N 4
%D April 1989
%P 174-176
%% REPORT

%L Nier89d
%K pcalc-obc semantics abacus chloe ood89
%A Oscar Nierstrasz
%T Abacus: a Notation for Describing Concurrent Computations
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%% REPORT
%P 247-275
%X Abacus is an experimental notation for specifying concurrent
   computations, to be used as a semantic target for defining and
   prototyping concurrent language constructs.  We present the current
   implementation and its underlying computational model, and we
   illustrate its computational power and expressiveness through
   examples and by demonstrating equivalence with other models.

%L Nier89e
%K olit-obcl hybrid tour chloe
%A Oscar Nierstrasz
%T A Tour of Hybrid
%B Les Mardis Objets du CRIN, CRIN 89-R-072
%E G. Masini, A. Napoli, D. Colnet, D. L\'eonard, K. Tombre
%I Centre de Recherche en Informatique de Nancy,
   Vandoeuvre-l\`es-Nancy
%D 1989
%P 237-248
%% REPORT

%L Nier90a
%K olit-obc semantics abacus oopsla90 ecoop90 chloe-ftp om90
%A Oscar Nierstrasz
%A Michael Papathomas
%T Viewing Objects as Patterns of Communicating Agents
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 38-43
%X Following our own experience developing a concurrent object-oriented
   language as well of that of other researchers, we have identified
   several key problems in the design of a obc model compatible
   with the mechanisms of object-oriented programming. We propose an
   approach to language design in which an executable notation describing
   the behaviour of communicating agents is extended by syntactic patterns
   that encapsulate language constructs. We indicate how various language
   models can be accommodated, and how mechanisms such as inheritance can
   be modeled. Finally, we introduce a new notion of types that
   characterizes concurrent objects in terms of their externally visible
   behaviour.
%% MIR
%% JOURNAL
%% ftp: cui.unige.ch:OO-articles/viewingObjectsAsPatterns.ps.Z

%L Nier90b
%K olit-ithaca scripting vst vista chloe-ftp om90
%A Oscar Nierstrasz
%A Laurent Dami
%A Vicki de Mey
%A Marc Stadelmann
%A Dennis Tsichritzis
%A Jan Vitek
%T Visual Scripting -- Towards Interactive Construction of
   Object-Oriented Applications
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 315-331
%X Object-oriented programming techniques are known to improve the
   flexibility and reusability of certain kinds of software. Libraries of
   object classes, however, continue to be difficult both to develop and
   to reuse. We present an approach to object-oriented application
   development in which applications are constructed by interactively
   "scripting" cooperating, reusable software objects. A visual scripting
   tool is being developed within ITHACA, an Esprit II project which seeks
   to produce an integrated environment for the rapid and flexible
   development of object-oriented applications for selected application
   domains.
%% REPORT
%% ftp: cui.unige.ch:OO-articles/16_VisualScriptingTool.ps.Z

%L Nier90c
%K pcalc-obc semantics abacus chloe om90
%A Oscar Nierstrasz
%T A Guide to Specifying Concurrent Behaviour with Abacus
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 267-293
%X We present the syntax, semantics and usage of Abacus, an executable
   notation for specifying concurrent computations that extends CCS with
   label prefixing and filtering operators for encapsulating systems of
   communicating agents and a pattern mechanism for parameterizing
   behaviour expressions. Abacus is intended to be used as a semantic
   target and a prototyping tool for the specification of concurrent
   object-based languages and systems. We illustrate the use of Abacus
   through a series of standard obc examples, concluding with an
   executable specification of SAL, a Simple Actor Language.
%% REPORT

%L Nier90d
%K olit-obc pcalc equivalence semantics abacus chloe-ftp om90 obc90
%A Oscar Nierstrasz
%A Michael Papathomas
%T Towards a Type Theory for Active Objects
%J ACM OOPS Messenger, Proceedings OOPSLA/ECOOP 90 Workshop
   on Object-Based Concurrent Systems
%V 2
%N 2
%D April 1991
%P 89-93
%X Currently popular notions of types, such as signature compatibility,
   fail to express essential properties of concurrent active objects that
   are necessary for their correct use in new contexts. We propose and
   explore a new notion of compatibility called interaction conformance
   defined in terms of the possible interactions between an object and its
   clients. We relate interaction conformance to known equivalence
   relations between communicating concurrent agents, and we show that, by
   viewing types as certain kinds of indeterminate agents, interaction
   conformance gives us a subtype relationship. We briefly explore the
   potential for applying these ideas to concurrent object-oriented
   languages.
%% REPORT
%% ftp: cui.unige.ch:OO-articles/towardsATypeTheory.ps.Z

%L Nier91a
%K olit-obc hybrid abacus scol chloe oc91
%A Oscar Nierstrasz
%T The Next 700 Concurrent Object-Oriented Languages -- Reflections on the
   Future of Object-Based Concurrency
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 165-187
%X There has been a flurry of activity in recent years to extend
   existing languages with object-oriented features, and to extend
   object-oriented concepts and languages with seemingly orthogonal
   features, such as obc and persistence, to improve their
   expressive power and potential as a solution to the "software crisis".
   In many cases these integration efforts have uncovered various forms of
   semantic interference between features. We claim that the majority of
   these difficulties are concerned with the very aspect of
   object-orientation that we seek most urgently to exploit, namely
   software compositionality. We shall review the problems of integrating
   obc and object-oriented features from this viewpoint and
   discuss some of the more important requirements to be met. Finally, we
   propose a view of objects as patterns of communicating agents that
   suggests the development of a class of concurrent object-oriented
   languages parameterized by patterns that address the needs of
   particular application domains.
%% REPORT

%L Nier91b
%K olit-ithaca vista scripting chloe-ftp oc91
%A Oscar Nierstrasz
%A Dennis Tsichritzis
%A Vicki de Mey
%A Marc Stadelmann
%T Objects + Scripts = Applications
%B Proceedings, Esprit 1991 Conference
%I Kluwer Academic Publishers
%C Dordrecht, NL
%D 1991
%P 534-552
%X We argue that object-oriented programming is only half of the
   story.  Flexible, configurable applications can be viewed as
   collections of reusable objects conforming to standard interfaces
   together with scripts that bind these objects together to perform
   certain tasks. Scripting encourages a component-oriented approach to
   application development in which frameworks of reusable components
   (objects and scripts) are carefully engineered in an evolutionary
   software life-cycle, with the ultimate goal of supporting application
   construction largely from these interchangeable, prefabricated
   components. The activity of constructing the running application is
   supported by a visual scripting tool that replaces the textual paradigm
   of programming with a visual paradigm of direct manipulation and
   editing of both application and user interface components. We present
   scripting by means of some simple examples, and we describe a prototype
   of a visual scripting tool, called Vista.  We conclude with some
   observations on the environmental support needed to support a
   component-oriented software life-cycle, using as a specific example the
   application de velopment environment of ITHACA, a large European
   project of which Vista is a part.
%% JOURNAL
%% ftp: cui.unige.ch:OO-articles/objects+Scripts=Applications.ps.Z

%L Nier91c
%K olit-ithaca chloe vista
%A Oscar Nierstrasz
%T The ADL Scripting Model and Component Set
%R ITHACA.CUI.91.Vista.#6.1
%I Centre Universitaire d'Informatique, University of Geneva
%D Dec 1991
%% REPORT

%L Nier92a
%% CB05
%K pcalc-obc mobility oc obc91 of92 chloe-ftp-book
%A Oscar Nierstrasz
%T Towards an Object Calculus
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 1-20
%X The development of concurrent object-based programming languages has
   suffered from the lack of any generally accepted formal foundations for
   defining their semantics.  Furthermore, the delicate relationship
   between object-oriented features supporting reuse and operational
   features concerning interaction and state change is poorly understood
   in a concurrent setting.  To address this problem, we propose the
   development of an object calculus, borrowing heavily from relevant work
   in the area of process calculi.  To this end, we briefly review some of
   this work, we pose some informal requirements for an object calculus,
   and we present the syntax, operational semantics and use through
   examples of a proposed object calculus, called OC.
%% ARTICLE
%% ftp: cui.unige.ch:OO-articles/towardsAnObjectCalculus.ps.Z

%L Nier92b
%% CB12
%K olit-ithaca chloe-ftp of92 chloe-book
%A Oscar Nierstrasz
%A Simon Gibbs
%A Dennis Tsichritzis
%T Component-Oriented Software Development
%J Communications of the ACM
%V 35
%N 9
%D Sept 1992
%P 160-165
%X Object-oriented programming techniques promote a new approach to
   software engineering in which reliable, open applications can be
   largely constructed, rather than programmed, by reusing "frameworks" of
   plug-compatible software components. We outline a series of ongoing
   research projects at the University of Geneva that address
   component-oriented software development at the levels of languages,
   tools and frameworks, in particular, (1) the integration of
   object-oriented language features that support software composition
   with features concerned with other issues, like obc, (2)
   application development tools to support composition and reuse, and (3)
   the development of reusable application frameworks, specifically in the
   domain of multimedia applications.
%% JOURNAL
%% ftp: cui.unige.ch:OO-articles/componentOrientedSoftDevt.ps.Z

%L Nier92c
%K olit-obcl hybrid tour chloe-ftp
%A Oscar Nierstrasz
%T A Tour of Hybrid -- A Language for Programming with Active Objects
%B Advances in Object-Oriented Software Engineering
%E D. Mandrioli, B. Meyer
%I Prentice-Hall
%D 1992
%P 167-182
%X Object-oriented programming is a powerful paradigm for organizing
   software into reusable components.  There have been several attempts to
   adapt and extend this paradigm to the programming of concurrent and
   distributed applications.  Hybrid is a language whose design attempts
   to retain multiple inheritance, genericity and strong-typing, and
   incorporate a notion of active objects.  Objects in Hybrid are
   potentially active entities that communicate with one another through a
   message-passing protocol loosely based on remote procedure calls.
   Non-blocking calls and delay queues are the two basic mechanisms for
   interleaving and scheduling activities.  A prototype implementation of
   a compiler and run-time system for Hybrid have been completed.  We
   shall review aspects of the language design and attempt to evaluate its
   shortcomings.  We conclude with a list of requirements that we pose as
   a challenge for the design of future concurrent object-oriented
   languages.
%% ARTICLE
%% ftp: cui.unige.ch:OO-articles/tourOfHybrid.ps.Z

%L Nier93a
%K olit-obc pcalc hybrid oc scol chloe-ftp
%A Oscar Nierstrasz
%T Composing Active Objects --
   The Next 700 Concurrent Object-Oriented Languages
%B Research Directions in Concurrent Object Oriented Programming
%E G. Agha, P. Wegner and A. Yonezawa
%I MIT Press
%D 1993
%O to appear
%X Many of the shortcomings of present-day object-oriented programming
   languages can be traced to two phenomena:  (i) the lack of general
   support for software composition, and (ii) the semantic interference
   between language features addressing operational and compositional
   aspects of object-oriented programming.  To remedy this situation, we
   propose the development of a "pattern language" for active objects in
   which objects and, more generally, applications, are constructed by
   composing software patterns.  A "pattern" can be any reusable
   software abstraction, including functions, objects, classes and
   generics.  In this paper we seek to establish both informal
   requirements for a pattern language and a formal basis for defining the
   semantics of patterns.  First, we identify some basic requirements for
   supporting object composition and we review the principal language
   design choices with respect to these requirements.  We then survey the
   various problems of semantic interference in existing languages.  Next,
   we present a formal "object calculus" and show how it can be used to
   define the semantics of patterns in much the same way that the lambda
   calculus can be used to give meaning to constructs of functional
   programming languages.  We conclude by summarizing the principle open
   problems that remain to define a practical pattern language for active
   objects.
%% ARTICLE
%% ftp: cui.unige.ch:OO-articles/composingActiveObjects.ps.Z

%L Nier93b
%K olit chassis chloe afcet93
%T CHASSIS -- Une Plate-forme pour la Construction de Syst\`emes
   d'Information Ouverts
%A Oscar Nierstrasz
%A Dimitri Konstantas
%A Klaus Dittrich
%A Dirk Jonscher
%B Proceedings, AFCET '93 -- Vers des Syst\`emes d'Information Flexibles
%C Versailles
%D June 8-10, 1993
%P 153-161
%O In French
%X Les syst\`emes d'information d'aujourd'hui ont de plus en plus la
   n\'ecessit\'e d'\<etre ouverts. Ceci implique qu'ils doivent
   r\'epondre aux besoins de r\'eseaux ouverts, de logiciel et de
   mat\'eriel h\'et\'erog\`enes et "inter-op\'erables," et, surtout,
   \`a des besoins \'evolutifs et changeants. Le projet CHASSIS vise le
   d\'eveloppement d'un cadre informatique et m\'ethodologique pour (i)
   la conception et la construction de syst\`emes d'information
   h\'et\'erog\`enes, s\<urs et fiables \`a partir de composants de
   logiciel et bases de donn\'ees soit d\'ej\`a existants soit
   d\'evelopp\'es pour l'occasion, et (ii) leur int\'egration s\<ure et
   fiable.  Dans CHASSIS, l'orientation-objet est la technologie cl\'e
   pour la construction d'un tel syst\`eme, car son interface uniforme
   est r\'ealis\'ee par un mod\`ele de donn\'ees orient\'e-objet, et la
   couche d'int\'egration est r\'ealis\'ee par du logiciel
   orient\'e-objet. CHASSIS consiste en des mod\`eles objets pour
   l'int\'egration de base de donn\'ees et langages de programmation,
   du logiciel orient\'e-objet pour l'int\'egration des syst\`emes, des
   m\'ethodes de sp\'ecification pour soutenir le processus de
   conception, et des m\'ecanismes de s\'ecurit\'e avanc\'es qui
   permettent d'assurer un haut degr\'e de s\'ecurit\'e pour le
   syst\`eme d'information r\'esultant.  CHASSIS est un projet de
   collaboration Suisse entre l'Universit\'e de Z\:urich,
   l'Universit\'e de Gen\`eve, et le centre de recherche d'Asea Brown
   Boveri (Baden).
%% ARTICLE

%L Nier93c
%K olit chassis chloe-ftp afcet93 vo93
%A Oscar Nierstrasz
%A Dimitri Konstantas
%A Klaus Dittrich
%A Dirk Jonscher
%T CHASSIS -- A Platform for Constructing Open Information Systems
%R Visual Objects
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1993
%P 237-247
%O English version of "CHASSIS -- Une Plate-forme pour la Construction
   de Syst\`emes d'Information Ouverts"
%X Present-day computer-based information systems are increasingly
   required to be open systems. This means that they must cope with
   open networks, heterogeneous interoperable hardware and software
   systems, and, above all, evolving and changing requirements.  The
   CHASSIS project aims to develop a software and methodology framework
   for (i) the security- and reliability-oriented systematic design and
   construction of heterogeneous information systems from individual
   existing and newly developed application software components and
   database systems, and (ii) their secure and reliable
   interoperation.  In CHASSIS, object-orientation is the key
   technology for the construction of such a system as its uniform
   interface is realized by an object-oriented data model and the
   homogenization layer is realized by object-oriented software.
   CHASSIS includes object models for database and language
   integration, software to support system integration, specification
   methods to support the design process and advanced security
   mechanisms to provide the resulting information system with a high
   degree of security. CHASSIS is a joint Swiss project between the
   University of Zrich, the University of Geneva, and the Asea Brown
   Boveri Research Centre (Baden).
%% REPORT
%% ftp: cui.unige.ch:OO-articles/chassis.ps.Z

%L Nier93d
%K olit-obc pcalc equivalence types chloe-ftp oopsla93 vo93
%A Oscar Nierstrasz
%T Regular Types for Active Objects
%J Proceedings OOPSLA '93, ACM SIGPLAN Notices
%D 1993
%O To appear
%% JOURNAL
%X Previous work on type-theoretic foundations for object-oriented
   programming languages has mostly focussed on applying or extending
   functional type theory to functional "objects." This approach, while
   benefitting from a vast body of existing literature, has the
   disadvantage of dealing with state change either in a roundabout way
   or not at all, and completely side-stepping issues of concurrency.
   In particular, dynamic issues of non-uniform service availability
   and conformance to protocols are not addressed by functional types.
   We propose a new type framework that characterizes objects as
   regular (finite state) processes that provide guarantees of service
   along public channels. We also propose an original notion of
   subtyping for regular types that extends Wegner and Zdonik's
   "principle of substitutability" to non-uniform service availability,
   and we relate it to known process equivalences. Finally, we
   formalize what it means to "satisfy a client's expectations," and we
   show how regular types can be used to tell when sequential or
   concurrent clients are satisfied.
%% ftp: cui.unige.ch:OO-articles/regularTypes.ps.Z

%L Nier93e
%K olit ecoop93 binder (shelf)
%E Oscar Nierstrasz
%T Proceedings ECOOP '93
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993

%L Nolt92a
%K olit distribution binder (shelf)
%A J\:org Nolte
%T Language-Level Support for Remote Object Invocations
%R Working Paper 654
%I GMD
%C Sankt Augustin
%D May 1992

%L Nord90a
%K types dependent
%A B. Nordstr\:om
%A K. Petersson
%A J. M. Smith
%T Programming in Martin-L\:ofs Type Theory, An Introduction
%I Clarendon Press
%C Oxford
%D 1990
%% suggested by MH

%L Nori81a
%K plang pascal p-code
%A K.V. Nori
%A U. Ammann
%A K. Jensen
%A H.H. Nageli
%A Ch. Jacobi
%T Pascal-P Implementation Notes
%B Pascal -- The Language and its Implementation
%E D.W. Barron
%I John Wiley & Sons, Ltd.
%D 1981
%P 125-170

%L Norm92a
%K olit ecoop92
%A Veronique Normand
%A Jo\:elle Coutaz
%T Unifying the Design and Implementation of User Interfaces through
   the Object Paradigm
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 153-169

%L Nyga86a
%K olit survey oopws86
%A Kristen Nygaard
%T Basic Concepts in Object Oriented Programming
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 128-132

%L Obcp89a
%K olit-obc obcp89 obib(obcp)
%Q Workshop on Object-Based Concurrent Programming
%T Workshop Proceedings
%J ACM SIGPLAN Notices
%E G. Agha, P. Wegner, A. Yonezawa
%V 24
%N 4
%C San Diego, (Sept 26-27, 1988)
%D April 1989

%L Obj86a
%K olit survey oopws86 obib(gen)
%Q OOP Workshop
%T Object-Oriented Programming Workshop
%E P. Wegner, B. Shriver
%J ACM SIGPLAN Notices (Special Issue)
%V 21
%N 10
%D Oct 1986

%L Obri87a
%K olit-oopl trellis owl oopsla87
%A Patrick D. O'Brien
%A Daniel C. Halbert
%A Michael F. Kilian
%T The Trellis Programming Environment
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 91-102

%L Ohor89a
%K types olit oopsla89
%A Atsushi Ohori
%A Peter Buneman
%T Static Type Inference for Parametric Classes
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 445-456

%L Oki83a
%K olit reliability transactions
%A B.M. Oki
%T Reliable Object Storage to Support Atomic Actions
%R M.Sc. Thesis, MIT/LCS/TR-308
%I MIT Dept EE and CS
%D May 1983

%L Olde85a
%K pcalc binder(csp)
%A Ernst-R\:udiger Olderog
%T Process Theory: Semantics, Specification and Verification
%B Current Trends in Concurrency
%S LNCS 224
%E J.W. de Bakker, W-P. de Roever and G. Rozenberg
%I Springer Verlag
%D 1985
%% 4.32 CUR
%P 442-509

%L Olde86a
%K pcalc safety binder(csp)
%A Ernst-R\:udiger Olderog
%A C.A.R. Hoare
%T Specification-Oriented Semantics for Communicating Processes
%J Acta Informatica
%V 23
%N 1
%D 1986
%P 9-66

%L Olth86a
%K olit-oopl modpascal oopsla86
%A Walter G. Olthoff
%T Augmentation of Object-Oriented Programming by Concepts
   of Abstract Data Type Theory: The ModPascal Experience
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 429-443

%L Oppe83a
%K security olit ois
%A D.C. Oppen
%A Y.K. Dalal
%T The Clearinghouse: A Decentralized Agent for Locating
   Named Objects in a Distributed Environment
%J ACM TOOIS
%V 1
%N 3
%D July 1983
%P 230-253

%L Orav90a
%K pcalc mobility (uwe)
%% INPROCEEDINGS
%A Fredrik Orava
%A Joachim Parrow
%T Algebraic Descriptions of Mobile Networks: An Example
%B Protocol Specification, Testing and Verfication, X
%I IFIP, North-Holland
%D 1990
%P 275-291

%L Orav92a
%K pcalc mobility (uwe)
%% ARTICLE
%A Fredrik Orava
%A Joachim Parrow
%T An Algebraic Verification of a Mobile Network
%J Formal Aspects of Computing
%V 4
%N 6
%D 1992
%P 497-543

%L Ossh86a
%K olit concepts oopws86
%A Harold Ossher
%T A Mechanism for Specifying the Structure of Large, Layered,
   Object-Oriented Programs
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 143-152

%L Ossh92a
%K olit oopsla92
%A Harold Ossher
%A William Harrison
%T Combination of Inheritance Hierarchies
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 25-40

%L Owe88a
%K olit-obc obc concurrency lift binder
%A Olaf Owe
%T The Response Function method for Specifying Concurrent Systems
%R Research Report No. 96
%I University of Oslo, Dept. Informatics
%D April 1988

%L Oxho92a
%K types olit ecoop92
%A Nicholas Oxh\/oj
%A Jens Palsberg
%A Michael I. Schwartzbach
%T Making Type Inference Practical
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 329-349

%L Paep88a
%K olit ecoop88
%A Andreas Paepcke
%T PCLOS: A Flexible Implementation of CLOS Persistence
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 374-389

%L Paep89a
%K olit oopsla89
%A Andreas Paepcke
%T PCLOS: A Critical Review
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 221-254

%L Paep90a
%K olit oopsla90 ecoop90
%A Andreas Paepcke
%T PCLOS: Stress Testing CLOS Experiencing the Metaobject protocol
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 194-211

%L Paep91a
%K olit survey special issue oopsla91 obib(gen)
%T Proceedings OOPSLA '91
%E Andreas Paepcke
%J ACM SIGPLAN Notices
%V 26
%N 11
%C Phoenix, Arizona
%D Nov 1991

%L Paep92a
%K olit survey special issue oopsla92 obib(gen)
%T Proceedings OOPSLA '92
%E Andreas Paepcke
%J ACM SIGPLAN Notices
%V 27
%N 10
%C Vancouver, British Columbia
%D Oct 1992

%L Page89a
%K olit oopsla89
%A Thomas W. Page, Jr.
%A Steven Berson
%A William Cheng
%A Richard R. Muntz
%T An Object-Oriented Modeling Environment
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 287-296

%L Pals90a
%K types olit oopsla90 ecoop90
%A Jens Palsberg
%A Michael I. Schwartzbach
%T Type Substitution for Object-Oriented Programming
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 151-160

%L Pals91a
%K types olit ecoop91
%A Jens Palsberg
%A Michael I. Schwartzbach
%T What is Type-Safe Code Reuse?
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 325-341

%L Pals91b
%K types olit oopsla91
%A Jens Palsberg
%A Michael I. Schwartzbach
%T Object-Oriented Type Inference
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 146-161

%L Papa82a
%K misc combinatorics book
%A C.H. Papadimitriou
%A K. Steiglitz
%T Combinatorial Optimization
%I Prentice-Hall
%D 1982

%L Papa89a
%% CB02
%K olit-obc chloe-ftp ood89 chloe-book
%A Michael Papathomas
%T Concurrency Issues in Object-Oriented Programming Languages
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 207-245
%% MIR
%X The integration of concurrent and object-oriented programming,
   although promising, presents problems that have not yet been fully
   explored. In this paper we attempt to identify issues in the design
   of concurrent object-oriented languages that must be addressed to
   achieve a satisfactory integration of concurrency in the
   object-oriented framework. We consider the approaches followed by
   object-oriented languages for supporting concurrency   and identify
   six categories of concurrent object-oriented languages. Then, we
   review several concurrent object-oriented languages and  examine the
   interaction of their concurrency features with their object-oriented
   features and with object-oriented software construction.
%% ftp: cui.unige.ch:OO-articles/concurrency.ps.Z

%L Papa90a
%K olit-obc hybrid chloe-ftp om90
%A Michael Papathomas
%A Dimitri Konstantas
%T Integrating Concurrency and Object-Oriented Programming --
   An Evaluation of Hybrid
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 229-244
%X In this paper we address the effective use of the object-oriented
   programming approach for concurrent programming from a language design
   viewpoint. We present a set of requirements for the design of
   concurrent object-oriented languages. We then use a particular
   language, Hybrid, as a concrete example and examine to what extent its
   features meet these requirements. We identify the solutions offered by
   Hybrid and its shortcomings and we underline both the difficulties and
   promising directions for the design of concurrent object-oriented languages.
%% ftp: cui.unige.ch:OO-articles/hybridEvaluation.ps.Z

%L Papa91a
%% CB03
%K olit-obc chloe-ftp oc91 chloe-book
%A Michael Papathomas
%A Oscar Nierstrasz
%T Supporting Software Reuse in Concurrent Object-Oriented Languages: Exploring
   the Language Design Space
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 189-204
%X The design of programming languages that cleanly integrate
   obc constructs and object-oriented features that promote
   software reuse is an open problem. We describe a design space that
   characterizes approaches to object-oriented obc in terms of a
   number of language design choices concerning the relationship between
   objects and obc. We identify requirements for software reuse
   and, with the help of an example that illustrates several of these
   requirements, explore the design space in order to evaluate which
   design choices interfere with reuse and which appear to adequately
   support it. We conclude by highlighting open research issues which, we
   believe, are essential for achieving effective reuse of concurrent
   software.
%% REPORT
%% ftp: cui.unige.ch:OO-articles/concLangDesignSpace.ps.Z

%L Papa91b
%% CB04
%K olit-obc pcalc chloe-ftp oc91 chloe-book
%A Michael Papathomas
%T A Unifying Framework for Process Calculus Semantics of Concurrent
   Object-Based Languages and Features
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 205-224
%O Working paper
%X A framework for the semantic description of concurrent
   object-oriented languages based on CCS is outlined. We discuss how the
   essential object-oriented features, such as encapsulation, object
   identity, classes, inheritance and obc are captured. Then, the
   proposed framework is used for defining the semantics of significantly
   different versions of a toy language which supports the above features.
   The ease with which the different versions of this language are
   accommodated provides some evidence for the applicability of the
   framework for a wide range of languages, as well as its usefulness for
   comparing different language designs and examining the interaction of a
   rich set of object-oriented features.
%% ftp: cui.unige.ch:OO-articles/concSemanticFrame.ps.Z

%L Papa92a
%K olit-obc pcalc chloe obc91
%A Michael Papathomas
%T A Unifying Framework for Process Calculus Semantics of
   Concurrent Object-Oriented Languages
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 53-79

%L Papa92b
%K olit-obc pcalc chloe
%A Michael Papathomas
%T Language Design Rationale and Semantic Framework for Concurrent
   Object-Oriented Programming
%R Ph.D. thesis No. 2522
%I Dept. of Computer Science, University of Geneva
%D 1992

%L Papa92c
%K olit pcalc chloe-ftp of92
%A Michael Papathomas
%T Behaviour Compatibility and Specification for Active Objects
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 31-40
%X For taking advantage of object-oriented programming features such as
   data-abstraction, late binding, type polymorphism and inheritance
   for software reuse, it is essential to have a precise understanding
   of whether or not classes providing similar functionality are
   interchangeable within programs and to be able to determine and
   state what are the behavioural constraints to be met by a class
   implementation. We discuss the importance of these issues in the
   context of concurrent programs where determining substitutability of
   classes may be extremely complex, and discuss the use of process
   calculi for modelling object-behaviours and investigating behaviour
   compatibility between classes. We then identify some issues that
   should be addressed by such models and discuss directions for
   further investigation of these issues.
%% ftp: cui.unige.ch:OO-articles/behaviourCompatibility.ps.Z

%L Papa93a
%K olit chloe vo93
%A Michael Papathomas
%A Christian Breiteneder
%A Simon Gibbs
%A Vicki de Mey
%T Synchronization in Virtual Worlds
%B Virtual Worlds and Multimedia
%E N. Thalmann and D. Thalmann
%I John Wiley & Sons
%D 1993
%O to appear
%X Virtual worlds are constructed from a wide range of equipment
   including various input devices, special purpose audio and graphics
   hardware, and a variety of output devices.  Distributed
   multi-participant or multimedia virtual worlds further expand the
   range of possibilities.  For easily constructing and experimenting
   with different virtual world infrastructures we use an approach
   based on developing and configuring reusable components. A key
   problem is the synchronization of components: components must be
   designed to work in different configurations with, possibly,
   different synchronization requirements.  In this paper we discuss
   support for synchronization in virtual world infrastructures
   constructed by configuring reusable components.

%L Park81a
%K pcalc equivalence bisimulation binder
%A David Park
%T Concurrency and Automata on Infinite Sequences
%B Theoretical Computer Science, 5th GI-Conf.
%C Karlsruhe
%I Springer-Verlag
%S LNCS 104
%D March 1981
%P 167-183

%L Parn72a
%K olit specification data abstraction
%A D.L. Parnas
%T A Technique for Software Module Specification with Examples
%J CACM
%V 15
%N 5
%D May 1972
%P 330-336

%L Parr88a
%K olit-obc ecoop88
%A Graham D. Parrington
%A Santosh K. Shrivastava
%T Implementing Concurrency Control in Reliable Object-Oriented Systems
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 233-249

%L Parr93a
%K pcalc mobility (uwe)
%% UNPUBLISHED
%A Joachim Parrow
%A Davide Sangiorgi
%T Axiomatisations for \pi-calculus
%D 1993
%O In preparation

%L Pasc86a
%K olit-oopl smalltalk oopsla86
%A Geoffrey A. Pascoe
%T Encapsulators: A New Software Paradigm in Smalltalk-80
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 341-346

%L Pasq88a
%K olit ecoop88
%A Jacques Pasquier-Boltuck
%A Ed Grossman
%A G\'erald Collaud
%T Prototyping an Interactive Electronic Book System Using an
   Object-Oriented Approach
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 177-190

%L Patt83a
%K olit architecture soar risc smalltalk casais
%A David A. Patterson
%T Smalltalk on RISC: Architectural Investigations
%B Proceedings of CS292R, Univ. of California
%C Berkeley
%D Apr. 1983

%L Pavl77a
%K misc image book
%A T. Pavlidis
%T Structural Pattern Recognition
%I Springer-Verlag
%D 1977

%L Pede89a
%K olit-inheritance oopsla89
%A Claus H. Pedersen
%T Extending Ordinary Inheritance Schemes to Include Generalization
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 407-418

%L Pele90a
%K pcalc ccs icalp90 binder(conc)
%A Doron Peled
%A Amir Pnueli
%T Proving Partial Order Liveness Properties
%B Proceedings ICALP '90
%E M.S. Paterson
%I Springer-Verlag
%S LNCS 443
%C Warwick U.
%D July 1990
%% 5.2 AUT
%P 553-571

%L Penn87a
%K olit oopsla87
%A D. Jason Penney
%A Jacob Stein
%T Class Modification in the GemStone Object-Oriented DBMS
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 111-117

%L Pern89a
%K olit chloe ood89
%A Barbara Pernici
%T Objects with Roles
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 75-100

%L Pern90a
%K olit chloe om90
%A Barbara Pernici
%T Class Design and Meta-Design
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 117-131
%X We present a methodology to guide the application developer in the
   design of applications based on reusable objects. Design information is
   associated with each class to guide the developer in building
   applications, addressing separately the various design aspects. The
   refinement process during the construction of a given application and
   the problem of inserting the necessary design support information in a
   repository are discussed.

%L Pern90b
%K olit chloe ood89
%A Barbara Pernici
%T Objects with Roles
%J Proceedings ACM-IEEE Conference of Office Information Systems (COIS)
%C Boston
%D April 1990

%L Perr88a
%K concurrency
%A Ronald H. Perrott
%T Parallel Programming
%I Addison-Wesley
%C Wokingham
%S International computer science series
%D 1988
%% Cote:  4.32 PER

%L Perr91a
%K pcalc-obc ccs binder
%A Nigel Perry
%T Towards a Concurrent Object/Process Oriented Functional Language
%R Draft
%I Massey University, NZ
%D 1991

%L Perr91b
%K pcalc ccs binder
%A Nigel Perry
%T Non-Strict Fpm -- A High Performance Lazy Abstract Machine
%R Draft
%I Massey University, NZ
%D 1991

%L Perr91c
%K fpl hope binder (shelf)
%A Nigel Perry
%T The Implementation of Practical Functional Programming Languages
%R Ph.D. thesis
%I Imperial College
%C London
%D 1991

%L Pete77a
%K concurrency other nets binder(conc)
%A James L. Peterson
%T Petri Nets
%J ACM Computing Surveys
%V 9
%N 3
%D Sept 1977
%P 223-252

%L Pete83a
%K misc nets book
%A James L. Peterson
%T Petri Nets Theory and the Modeling of Systems
%I Prentice-Hall
%D 1983

%L Pfaf85a
%K uilit
%T User Interface Management Systems
%E G. Pfaff
%I Springer-Verlag
%C New York
%D 1985
%O Proceedings of the IFIP/EG Workshop on User Interface Management Systems,
   Seeheim, FRG, October 1983

%L Phil87a
%K pcalc equivalence ccs binder(ccs)
%A Iain Phillips
%T Refusal Testing
%J Theoretical Computer Science
%V 50
%I North-Holland
%D 1987
%P 241-284

%L Pier86a
%K olit-appl asp smalltalk oopsla86
%A Kurt W. Piersol
%T Object Oriented Spreadsheets: The Analytic Spreadsheet Package
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 385-390

%L Pier89a
%K types lambda binder
%A Benjamin C. Pierce
%A Scott Dietzen
%A Spiro Michaylov
%T Programming in Higher-Order Typed Lambda-Calculi
%R CMU-CS-89-111
%I Carnegie Mellon University
%D March 1989

%L Pier91a
%K misc category theory
%A Benjamin C. Pierce
%T Basic Category Theory for Computert Scientists
%I MIT Press
%C Cambridge, Massachusetts
%D 1991

%L Pier92a
%K types olit binder
%A Benjamin C. Pierce
%A David N. Turner
%T Object-Oriented Programming Without Recursive Types
%R ECS-LFCS-92-226
%I Computer Science Dept., University of Edinburgh
%D August, 1992

%L Pier92b
%K types olit binder
%A Benjamin C. Pierce
%T Intersection Types and Bounded Polymorphism
%R ECS-LFCS-92-200
%I Computer Science Dept., University of Edinburgh
%D March, 1992

%L Pier92c
%K types olit binder
%A Benjamin C. Pierce
%A David N. Turner
%T Simple Type-Theoretic Foundations for Object-Oriented Programming
%R Draft manuscript
%I Computer Science Dept., University of Edinburgh
%D August, 1992

%L Pier92d
%K types olit binder
%A Benjamin C. Pierce
%A David N. Turner
%T Statically Typed Multi-Methods via Partially Abstract Types
%R Draft manuscript
%I Computer Science Dept., University of Edinburgh
%D Oct., 1992

%L Pier92e
%K types f-omega binder
%A Benjamin C. Pierce
%T F-Omega-Sub User's Manual Version 1.0
%R Documentation
%I Computer Science Dept., University of Edinburgh
%D Oct., 1992

%L Pier92f
%K types olit f-omega binder
%A Benjamin C. Pierce
%T OOrientierungstage Exercises and Solutions
%R Course Notes
%I Computer Science Dept., University of Edinburgh
%D Oct., 1992

%L Pier92g
%K pcalc mobility (uwe)
%% UNPUBLISHED
%A Benjamin C. Pierce
%A Davide Sangiorgi
%T Typing and Subtyping for Mobile Processes
%D 1992

%L Pii89a
%K olit duotalk joop
%A C. Pii Lunau
%T Separation of Hierarchies in Duo-Talk
%J Journal of Object-Oriented Programming
%V 2
%N 2
%D July/Aug 1989
%P 20-25

%L Pint88a
%K olit affinity browser chloe aoe88
%A Xavier Pintado
%A Dennis Tsichritzis
%T An Affinity Browser
%R Active Object Environments
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1988
%P 51-60

%L Pint88b
%K olit-oopl grafields chloe aoe88
%A Xavier Pintado
%A Eugene Fiume
%T Grafields: Field-Directed Dynamic Splines for
   Interactive Motion Control
%B Proceedings of Eurographics 1988 (North-Holland)
%E Duce and Jancene
%I North-Holland
%C Nice
%D Sept. 1988
%P 43-54

%L Pint89a
%K olit chloe ood89
%A Xavier Pintado
%A Dennis Tsichritzis
%T Satellite: A Navigation Tool for Hypermedia
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 61-73

%L Pint90a
%K olit-reuse chloe-ftp om90
%A Xavier Pintado
%T Selection and Exploration in an Object-Oriented Environment:
   The Affinity Browser
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 79-88
%X Reusability is widely believed to be a key to improving software
   development productivity. However, in practice, effective reuse is
   more an achievement of good development environments than a strategy
   for software development. It seems natural that a reduction of the
   effort needed for reuse should have a positive impact on reuse. Among
   the various lines of attack that may lead to a reduction of the reuse
   effort, we address the problem of finding and understanding reusable
   functionality in an object-oriented software environment. This paper
   presents the Affinity Browser, a selection and exploration tool based
   on the notion of affinity between objects. The user is presented with
   a two dimensional display where the objects are displayed in such a way
   that their relative positions convey their affinity i.e., objects lying
   closer together are more strongly related than objects lying farther
   apart. The browser provides for different views of the relationships
   among objects. Each view is based on a different measure of affinity
   and thus portrays a different relationship. We discuss the rationale
   behind the Affinity Browser tool and discuss the way users can take
   advantage of it to understand the functionality provided by a set of
   classes. The Affinity Browser's ability to help understanding
   relationships between objects will be illustrated by two examples of
   view construction.
%% ftp: cui.unige.ch:OO-articles/affinityBrowsing.ps.Z

%L Pint90b
%% CB13
%K olit chloe chloe-book
%A Xavier Pintado
%A Dennis Tsichritzis
%T Satellite: A Visualization and Navigation Tool for Hypermedia
%J Proceedings of the ACM Conference on Office Information Systems (COIS),
   SIGOIS Bulletin
%V 11
%N 2,3
%C Cambridge, Mass.
%D April 25-27 1990
%P 271-280
%X Satellite is a visualization and navigation tool for a hypermedia
   system. It is based on the concept of affinity between objects; that
   is, a relationship with an associated intensity. The user is
   presented with a two dimensional map that provides a view of the
   hypermedia environment where objects lying close together have a
   greater affinity than those lying further apart. The system provides
   different views by allowing modification of the underlying measure
   of affinity.  The system is also able to track dynamically the
   evolution of the objects' relationships.  Based on the affinity
   concept, we develop new dynamic presentation techniques that do not
   depend on the explicit display of links between the nodes of the
   graph. The dynamic layout algorithm that we present at the end of
   the paper is based on these techniques and it allows for the display
   of rapidly changing relationships between objects.

%L Pint91a
%K olit chloe oc91
%A Xavier Pintado
%A Dennis Tsichritzis
%T Fuzzy Relationships and Affinity Links
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 273-285
%X In this paper we present affinity links as a mechanism which
   combines some of the advantages of the different ways that are commonly
   used to express relationships. We define this mechanism in terms of
   fuzzy relations. We introduce affinity contexts as a way of expressing
   contexts of relationships on a set of objects and we present operations
   that allow for their combination. We outline Satellite, a tool for the
   visualization and exploration of affinity contexts. Satellite promotes
   navigation by context-dependent proximity. The tool allows for the
   simultaneous exploration of multiple contexts and is able to track fast
   evolving relationships. We provide examples of the usefulness of our
   approach in the domains of object-oriented systems development and
   Hypermedia environments.

%L Pint91b
%K olit-reuse chloe oc91
%A Xavier Pintado
%T Gluons: Connecting Software Components
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 73-83
%O Working paper
%X This paper presents an approach to software construction that relies
   on the connection of reusable components. The approach is derived from
   the observation that a design framework plays a central role in the
   reuse process in the sense that both the design of applications and the
   design of reusable components must follow the same design discipline.
   The interaction between components is mediated by an object: the gluon.
   Gluons are attached to reusable components and they represent the
   rights to a service provided by the component. Gluons can be seen as
   coupons: once detached they grant a service that can be exchanged among
   objects. Gluons can also encapsulate an activity performed by a set of
   cooperating components. With this approach, the construction of
   applications can be seen as a market where components that ask for
   services can purchase rights from other components that offer them.

%L Pint92a
%% CB16
%K olit chloe of92 chloe-book
%A Xavier Pintado
%A Betty Junod
%T Gluons: Support for Software Component Cooperation
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 311-346
%X This paper presents gluons as objects that mediate software
   component cooperation. We discuss the advantages of encapsulating
   inter-component interaction inside a set of special objects. We
   present the design of a hierarchy of gluon classes that provide the
   support for the application domain independent part of component
   interaction protocols. As an example, we present the design of a
   financial information framework and we discuss the role that gluons
   play in the definition of the framework.

%L Pint93a
%% CB20
%K olit chloe chloe-book
%A Xavier Pintado
%T Advances in Information Visualisation Techniques
%R working paper
%I Centre Universitaire d'Informatique, University of Geneva
%D 1993
%O in preparation
%X The availability of affordable fast graphics hardware will have a
   strong impact on the way people deal with information. Highly
   interactive interfaces relying on fast 2-dimensional bitmap
   operations, and fast 3-dimensional image synthesis will soon become
   available. This paper explores some new representation techniques
   based on fast graphics primitives.  The first technique relies on
   fast a chanel operations to visualize multiple representation layers
   simultaneously.  Each layer being translucent allows to see layers
   that lay behind it.  The second technique is based on fast
   3-dimensional image synthesis.  The idea is that a virtual camera
   allows for the visualization of a world. The camera is controlled by
   a fuzzy controller to which the user can specify its interests with
   fuzzy logic rules based on linguistic variables. This technique is
   well suited for the visualisation of real time financial data.

%L Pint93b
%K olit chloe vo93
%A Xavier Pintado
%T New Approaches for the Visualization of Financial Information
%R Visual Objects
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1993
%P 111-128
%X The availability of affordable fast graphics hardware will have
   considerable impact on the way people deal with information. Highly
   interactive interfaces relying on fast 2-dimensional bitmap
   operations, and fast 3-dimensional image synthesis are becoming
   available. This paper explores some new representation techniques
   based on fast graphics primitives.  We present first financial
   information radars as a flexible data representation technique for
   financial information. The concept of information radar takes
   inspiration on traditional oscilloscopes and radars.  Information
   radars are 2D visualization tools that display multiple superimposed
   translucent data representation layers. Each representation layer
   being translucent allows the layers that lay behind it to be seen.
   The radar provides multiple interaction modes so that the user can
   interact with the various layers either to modify representations,
   to explore data relationships, or to access other tools. Information
   radars rely on fast a-channel operations to visualize multiple
   representation layers simultaneously.  The second data
   representation technique is based on fast 3-dimensional image
   synthesis.  The idea is that a virtual camera allows for the
   visualization of a virtual world composed of objects that exhibit
   dynamic behaviours.  The camera is driven by a fuzzy controller to
   which users can specify viewing interests expressed as rules in
   terms of fuzzy logic linguistic variables. The fuzzy controller
   drives the movement of the camera so that the camera shows what the
   user expressed interest in. This technique is particularly well
   suited for the visualization of real time financial data.

%L Pitt93a
%K olit ieee
%A Matthew Pittman
%T Lessons Learned in Managing Object-Oriented Development
%J IEEE Software (Special Issue on "Making O-O Work")
%V 10
%N 1
%D Jan 1993
%P 43-53

%L Pnue85a
%K pcalc ccs icalp85 binder(conc)
%A Amir Pnueli
%T Linear and Branching Structures in the Semantics and Logics of
   Reactive Systems
%B Proceedings ICALP '85
%E W. Brauer
%I Springer-Verlag
%S LNCS 194
%C Nafplion
%D July 1985
%% 5.22 AUT
%P 15-32

%L Pras90a
%K concurrency facile icalp90 binder
%A Sanjiv Prasad
%A Alessandro Giacalone
%A Prateek Mishra
%T Operational and Algebraic Semantics for Facile:
   A Symmetric Integration of Concurrent and Functional Programming
%B Proceedings ICALP '90
%E M.S. Paterson
%I Springer-Verlag
%S LNCS 443
%C Warwick U.
%D July 1990
%% 5.2 AUT
%P 765-780

%L Pras91a
%K pcalc ccs tapsoft91 binder(ccs)
%A K.V.S. Prasad
%T A Calculus of Broadcasting Systems
%B Proceedings TAPSOFT '91
%S LNCS 493
%E S. Abramsky and T. Maibaum
%I Springer-Verlag
%D 1991
%% K.6.3 TAP
%P 338-358

%L Prei92a
%K misc os distribution binder (shelf)
%A Wolfgang Schr\:oder-Preikschat
%T PEACE -- The Evolution of a Parallel Operating System
%R Working Paper 646
%I GMD
%C Sankt Augustin
%D May 1992

%L Prev90a
%K olit chloe om90
%A Vassili Prevelakis
%T Versioning Issues for Hypertext Systems
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 89-105
%X Hypertext systems have gained acceptance in a wide range of
   application domains (e.g. CASE, systems design, outline processors
   etc.). However, in order to function effectively in these domains,
   hypertext systems must support versioning. In this paper we will
   examine the issues involved in providing versioning facilities that not
   only support but enhance the special features provided by hypertext. We
   analyse the requirements that should be satisfied by a versioning
   system and we examine how existing hypertext systems cope with these
   requirements. We then describe a set of mechanisms that are powerful
   enough to comply with our requirements. Finally, we present a
   demonstration system that will be used to evaluate the effectiveness of
   our versioning mechanisms.

%L Prie91a
%K olit-reuse
%A R. Pietro-Diaz
%T Implementing Faceted Classification for Software Reuse
%J CACM
%V 34
%N 5
%D May 1991
%P 88-97

%L Prof89a
%K olit-ithaca chloe-ftp ood89
%A Anna-Kristin Pr\:ofrock
%A Dennis Tsichritzis
%A Gerhard M\:uller
%A Martin Ader
%T ITHACA: An Integrated Toolkit for Highly Advanced Computer Applications
%R Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989
%P 321-344
%% MIR
%X The aim of the ITHACA project is to develop an integrated
   application development and support environment based on the
   object-oriented programming approach.  The object-oriented approach
   of the type envisaged in this project incorporates a wide range of
   features, such as data encapsulation, data abstraction and
   inheritance, which promote high application quality and reusability
   on a large scale.
%% ftp: cui.unige.ch:OO-articles/ithaca.ps.Z

%L Prof90a
%K olit-ithaca
%A Anna-Kristin Pr\:ofrock
%A Martin Ader
%A Gerhard M\:uller
%A Dennis Tsichritzis
%T ITHACA: An Overview
%B Proceedings of the Spring 1990 EUUG Conference
%D 1990
%P 99-105

%L Pun89a
%K olit design ecoop89
%A Winnie W.Y. Pun
%A Russel L. Winder
%T A Design Method for Object-Oriented Programming
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 225-240

%L Purc90a
%K olit-obc oopsla90 ecoop90 obc binder
%A Jan A. Purchase
%A Russel L. Winder
%T Message Pattern Specifications: A New Technique for Handling Errors
   in Parallel Object Oriented Systems
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 116-125

%L Purd87a
%K olit-oodb gemstone opal
%A Alan Purdy
%A B. Schuchardt
%A David Maier
%T Integrating an Object-Server with Other Worlds
%J ACM TOOIS
%V 5
%N 1
%D Jan 1987
%P 27-47

%L Purv83a
%K oislit star ui
%A R. Purvy
%A J. Farrel
%A P. Klose
%T The Design of Star's Records Processing:
   Data Processing for the Noncomputer Professional
%J ACM TOOIS
%V 1
%N 1
%D 1983
%P 3-24

%L QNM78a
%K misc queueing
%T Special issue on Queueing Network Models of Computer System Performance
%J ACM Computing Surveys
%V 10
%N 3
%D Sept 1977

%L Quar85a
%K misc unix
%A J.S. Quarterman
%A A. Silberschatz
%A James L. Peterson
%T 4.2BSD and 4.3BSD as Examples of the UNIX System
%J ACM Computing Surveys
%V 17
%N 4
%D Dec 1985
%P 379-418

%L Raj89a
%K olit-inheritance ecoop89 binder(oop)
%A Rajendra K. Raj
%A Henry M. Levy
%T A Compositional Model for Software Reuse
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 3-24

%L Rao91a
%K olit ecoop91
%A Ramana Rao
%T Implementational Reflection in Silica
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 251-267

%L Raz92a
%K olit transactions vldb92 binder
%A Yoav Raz
%T The Principle of Commitment Ordering, or, Guaranteeing Serializability
   in a Heterogeneous Environment of Multiple Autonomous Resource
   Managers Using Atomic Commitment
%B Proceedings of the 18th VLDB Conference
%C Vancouver, BC
%D 1992

%L Reed88a
%K concurrency liveness
%A J. Reed
%A R.T. Yeh
%T Specification and Verification of Liveness Properties
   of Cyclic Concurrent Processes
%J ACM TOPLAS
%V 10
%N 1
%D Jan 1988
%P 156-177

%L Reen89a
%K olit oopsla89
%A Trygve Reenskaug
%A Anna Lise Skaar
%T An Environment for Literate Smalltalk Programming
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 337-346

%L Regh91a
%K olit-obc ecoop91
%A Stefano Crespi Reghizzi
%A Guido Galli de Paratesi
%A Stefano Genolini
%T Definition of Reusable Concurrent Software Components
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 148-166

%L Reid80a
%K misc scribe documents
%A B.K. Reid
%T Scribe: A Document Specification Language and its Compiler
%R Ph.D. thesis
%I Department of Computer Science, Carnegie-Mellon University
%D 1980

%L Reis85a
%K visprog ptyping
%A S.P. Reiss
%T PECAN: Program Development Systems that Support Multiple Views
%J IEEE Transactions on Software Engineering
%V SE-11
%N 3
%D March 1985
%P 276-285

%L Reis86a
%K visprog
%A S.P. Reiss
%T GARDEN Tools: Support for Graphical Programming
%E R. Conradi
%E T.M. Didriksen
%E D.H. Wanvik
%B Advanced Programming Environments, Proc of an Int Workshop
%I Springer-Verlag
%S LNCS 244
%C Trondheim
%D June 1986
%P 59-72

%L Reis86b
%K visprog olit appl garden graphics oopws86
%A S.P. Reiss
%T An Object-Oriented Framework for Graphical Programming
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 49-57

%L Reis87a
%K visprog
%A S.P. Reiss
%T Working in the Garden Environment for Conceptual Programming
%J IEEE Software
%V 4
%N 6
%D 1987
%P 16-27

%L Reis87b
%K visprog olit
%A S.P. Reiss
%T An Object-Oriented Framework for Conceptual Programming
%E B. Shriver
%E P. Wegner
%B Research Directions in Object-Oriented Programming
%I MIT Press
%D 1987
%P 189-218

%L Repp91a
%K concurrency fpl cml binder
%A John H. Reppy
%T CML: A Higher-Order Concurrent Language
%J ACM SIGPLAN '91 Conference on Programming Language Design and Implementation,
   SIGPLAN Notices
%V 26
%N 6
%C Toronto
%D June 26-28, 1991
%P 293-305

%L Reyn85a
%K types tapsoft85 caap85 binder
%A John C. Reynolds
%T Three Approaches to Type Structure
%B Proceedings TAPSOFT '85
%S LNCS 185
%E Ehrig, Floyd, Nivat and Thatcher
%I Springer-Verlag
%D 1985
%% 4.0 INT
%P 97-138

%L Reyn91a
%K types forsythe tacs91
%A John C. Reynolds
%T The Coherence of Languages with Intersection Types
%B Proceedings Theoretical Aspects of Computer Science (TACS '91)
%E T. Ito and A.R. Meyer
%I Springer-Verlag
%S LNCS 526
%C Sendai, Japan
%D Sept. 1991
%% F.0.0 THE
%P 675-700

%L Rich71a
%K plang bcpl o-code
%A M. Richards
%T The Portability of the BCPL Compiler
%J Software -- Practice and Experience
%V 1
%D 1971
%P 135-146

%L Rich77a
%K plang bcpl o-code
%A M. Richards
%T The Implementation of BCPL
%B Software Portability
%E P.J. Brown
%I Cambridge University Press
%D 1977
%P 192-202

%L Rich92a
%K olit oopsla92
%A Joel Richardson
%A Peter Schwarz
%A Luis-Felipe Cabrera
%T CACL: Efficient Fine-Grained Protection for Objects
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 263-275

%L Riek87a
%K olit ecoop87
%A Wolf-Fritz Riekert
%T The ZOO Metasystem: A Direct-Manipulation Interface to
   Object-Oriented Knowledge Bases
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 131-139

%L Robi85a
%K security hardware
%A K. Robinson
%T Copy-resistant EPROM Increases Software Security Against Piracy
%J Computer Systems Equipment Design
%D March 1985
%P 17-22

%L Roge67a
%K misc computability
%A H. Rogers, Jr.
%T Theory of Recursive Functions and Effective Computability
%I McGraw-Hill
%D 1967

%L Rose88a
%K olit oopsla88
%A John R. Rose
%T Fast Dispatch Mechanisms for Stock Hardware
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 27-35

%L Rose89a
%K types olit oopsla89
%A William R. Rosenblatt
%A Jack C. Wileden
%A Alexander L. Wolf
%T OROS: Toward a Type Model for Software Development Environments
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 297-304

%L Rose93a
%K olit ecoop93
%A Ellen Rose
%A Arie Segev
%T TOOA: A Temporal Object-Oriented Algebra
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 297-325
%X In this paper, we present a temporal, object-oriented algebra which
   serves as a formal basis for the query language of a temporal,
   object-oriented data model.  Our algebra is a super-set of the
   relational algebra in that it provides support for manipulating
   temporal objects, temporal types, type hierarchies and class
   lattices, multiple time-lines, and correction sequences in addition
   to supporting the five relational algebra operators.  Graphs are
   used as the visual representations of both the schema and the object
   instances.  The algebra provides constructs to modify and manipulate
   the schema graph and its extension, the object graph.  The algebra
   operates on a collection or collections of objects and returns a
   collection of objects.  This algebra is a first step in providing a
   formal foundation for query processing and optimizing in a temporal,
   object-oriented data model.

%L Ross89a
%K olit oopsla89
%A Mary Beth Rosson
%A Eric Gold
%T Problem-Solution Mapping in Object-Oriented Design
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 7-10

%L Ross93a
%K olit ecoop93
%A Mary Beth Rosson
%A John M. Carroll
%T Active Programming Strategies in Reuse
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 4-20
%X In order to capitalize on the potential for software reuse in
   object-oriented programming, we must better understand the process
   involved in software reuse.  Our work addresses this need, analyzing
   four experienced Smalltalk programmers as they enhanced applications
   by reusing new classes. These were {\itactive} programmers: rather
   than suspending programming activity to reflect on how to use the
   new components, they began work immediately recruiting code from
   example usage contexts and relying heavily on the system debugger to
   guide them in applying the borrowed context.  We discuss the
   implications of these findings for reuse documentation, programming
   instruction and tools to support reuse.

%L Rovn86a
%K olit-oopl modula-2
%A P. Rovner
%T Extending Modula-2 to Build Large Integrated Systems
%J IEEE Software
%D November 1986
%O Incomplete (Vol, No & pp)

%L Rubi86a
%K visprog ptyping
%A R.V. Rubin
%T Language Constructs for Pogramming by Example
%J 3rd ACM-SIGOIS Conf on Office Information Systems, also SIGOIS Bulletin
%V 7
%N 2-3
%D 1986
%P 92-103

%L Rubi88a
%K olit oopsla88
%A Kenneth S. Rubin
%A Patricia M. Jones
%A Christine M. Mitchell
%A Theodore C. Goldstein
%T A Smalltalk Implementation of an Intelligent Operator's Associate
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 234-247

%L Rumb87a
%K olit oopsla87
%A James Rumbaugh
%T Relations as Semantic Constructs in an Object-Oriented Language
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 466-481

%L Rumb88a
%K olit oopsla88
%A James Rumbaugh
%T Controlling Propagation of Operations Using Attributes on Relations
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 285-296

%L Rumb91a
%K olit omt binder (shelf)
%A James Rumbaugh
%A Michael Blaha
%A William Premerlani
%A Frederick Eddy
%A William Lorensen
%T Object-Oriented Modeling and Design
%I Prentice Hall
%C New Jersey
%D 1991

%L Russ88a
%K olit ai frames oocda89
%A D. Russinoff
%T Proteus: a Frame-based Non-monotonic Inference System
%B Object-Oriented Concepts, Databases and Applications
%E W. Kim and F. Lochovsky
%I ACM Press and Addison-Wesley
%D 1989
%P 127-150

%L Russ88b
%K olit oopsla88
%A Vincent Russo
%A Gary Johnston
%A Roy Campbell
%T Process Mangement and Exception Handling in Multiprocessor Operating Systems
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 248-258

%L Russ89a
%K olit oopsla89
%A Vincent F. Russo
%A Roy H. Campbell
%T Virtual Memory and Backing Storage Management in Multiprocessor
   Operating Systems Using Object-Oriented Design Techniques
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 267-278

%L Rutt87a
%K concurrency acp binder
%A Jan Rutten
%A Jeffrey I. Zucker
%T A Semantic Approach to Fairness
%R Report CS-R8759
%I CWI
%C Amsterdam
%D 1987

%L Ryde88a
%K misc category theory binder
%A D.E. Rydeheard
%T On Category Theory and Computer Science -- An Annotated Bibliography
%R Draft
%I Univ. Erlangen-N\:urnberg
%D July 7, 1988

%L Ryde88b
%K misc category theory
%A David E. Rydeheard
%A Rod M. Burstall
%T Computational Category Theory
%I Prentice Hall
%C New York
%S Prentice Hall international series in computer science
%D 1988
%% Cote:  F.3.3 RYD

%L Sakk88a
%K olit ecoop88 binder
%A Markku Sakkinen
%T On the Darker Side of C++
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 162-176

%L Sakk88b
%K olit demeter binder
%A Markku Sakkinen
%T Comments on the `Law of Demeter' and C++
%J ACM SIGPLAN Notices
%V 23
%N 12
%D Dec. 1988
%P 38-44

%L Sakk89a
%K olit-inheritance ecoop89 binder
%A Markku Sakkinen
%T Disciplined Inheritance
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 39-56

%L Sakk92a
%K olit-inheritance binder(shelf)
%A Markku Sakkinen
%T Inheritance and Other Main Principles of C++ and Other
   Object-Oriented Languages
%S Jyv\:askyl\:a Studies in Computer Science, Economics and Statistics, No. 20
%I University of Jyv\:askyl\:a
%D 1992
%O Ph.D. thesis

%L Sakk92b
%K olit-inheritance binder
%A Markku Sakkinen
%T A Critique of the Inheritance Principles of C++
%J Computing Systems
%V 5
%N 1
%D Winter 1992
%P 69-110

%L Sakk92c
%K olit-inheritance binder
%A Markku Sakkinen
%T The Darker Side of C++ Revisited
%J Structured Programming
%I Springer International
%D 1992
%O to appear

%L Sale92a
%K olit-obc obc91
%A Hayssam Saleh
%A Philippe Gautron
%T A Concurrency Control Mechanism for C++ Objects
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 195-210

%L Samp86a
%K olit architecture soar smalltalk oopsla86
%A A. Dain Samples
%A David Ungar
%A Paul Hilfinger
%T SOAR: Smalltalk Without Bytecodes
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 107-118

%L Sand86a
%K olit-inheritance concepts smalltalk oopsla86
%A David Sandberg
%T An Alternative to Subclassing
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 424-428

%L Sand89a
%K olit-obc READ
%A B. Sanden
%T An Entity-Life Modeling Approach to the Design of Concurrent Systems
%J CACM
%V 32
%N 3
%D March 1989
%P 330-343

%L Sang91a
%K pcalc mobility hopi pi ccs binder
%A Davide Sangiorgi
%T From Higher-Order \pi-calculus to the \pi-calculus
%R manuscript (DS5)
%I Computer Science Dept., University of Edinburgh
%D April 12, 1991

%L Sang91b
%K pcalc mobility types concurrency binder
%A Davide Sangiorgi
%T The Lazy Lambda calculus in a Concurrency Scenario
%R ECS-LFCS-91-189
%I Computer Science Dept., University of Edinburgh
%D Nov. 1991

%L Sang92a
%K pcalc mobility hopi pi ccs
%A Davide Sangiorgi
%T Expressing Mobility in Process Algebras: First-Order and
   Higher-Order Paradigms
%R Ph.D. thesis
%I Computer Science Dept., University of Edinburgh
%D 1992
%O to appear

%L Sang92b
%K pcalc mobility hopi pi ccs binder
%A Davide Sangiorgi
%T From \pi-calculus to Higher-Order \pi-calculus -- and back
%R draft manuscript
%I Computer Science Dept., University of Edinburgh
%D 1992

%L Sang92c
%K pcalc mobility hopi pi ccs binder
%A Davide Sangiorgi
%T An Investigation into Functions as Processes
%R draft manuscript
%I Computer Science Dept., University of Edinburgh
%D 1992
%O submitted for publication

%L Sang92d
%K pcalc equivalence concurrency concur92
%A Davide Sangiorgi
%A Robin Milner
%T The Problem of "Weak Bisimulation Up To"
%B Proceedings of CONCUR'92
%E W.R. Cleaveland
%S LNCS 630
%I Springer-Verlag
%D 1992
%P 32-46
%% Cote:  F.1.2 CON

%L Sato92a
%K olit-obc oopsla92
%A Ichiro Satoh
%A Mario Tokoro
%T A Formalism for Real-Time Concurrent Object-Oriented Computing
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 315-326

%L Sato93a
%K olit ecoop93
%A Ichiro Satoh
%A Mario Tokoro
%T A Timed Calculus for Distributed Objects with Clocks
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 326-345
%X This paper proposes a formalism for reasoning about distributed
   object-oriented computations.  The formalism is an extension of
   Milner's CCS with the notion of local time.  It allows to describe
   and analyze both locally temporal and behavioral properties of
   distributed objects and interactions among them.  We introduce timed
   bisimulations with respect to local time.  These bisimulations
   equate distributed objects if and only if their behaviors are
   completely matched and their timings are within a given bound. The
   bisimulations provide a method to verify distributed objects with
   temporal uncertainties and real-time objects with non-strict time
   constraints.

%L Scal88a
%K olit oopsla88
%A C.A. Scaletti
%A Ralph E. Johnson
%T An Interactive Environment for Object-Oriented Music Composition
   and Sound Synthesis
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 222-233

%L Sced90a
%K concurrency linear logic binder(conc)
%A A. Scedrov
%T A Brief Guide to Linear Logic
%J Bulletin of the EATCS
%V 41
%D June 1990
%P 154-165

%L Scha86a
%K olit-oopl trellis/owl oopsla86 obib(oopl)
%A Craig Schaffert
%A Topher Cooper
%A Bruce Bullis
%A Mike Killian
%A Carrie Wilpolt
%T An Introduction to Trellis/Owl
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 9-16

%L Sche84a
%K dblit
%A Hans-J\:org Schek
%T Nested Transactions in a Combined IRS-DBMS Architecture
%B Proceedings of the Third joint BCS and ACM Symposium
   on Research and Development in Information Retrieval
%C Cambridge, England
%D July 1984

%L Sche86a
%K uilit
%A R.W. Scheifler
%A J. Gettys
%T The X Window System
%J ACM Transactions on Computer Graphics
%V 5
%N 2
%D April 1986
%P 79-109

%L Sche88a
%K olit ecoop88
%A Marcel Schelvis
%A Eddy Bledoeg
%T The Implementation of a Distributed Smalltalk
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 212-232

%L Sche89a
%K olit oopsla89
%A Marcel Schelvis
%T Incremental Distribution of Timestamp Packets: A New Approach
   to Distributed Garbage Collection
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 37-48

%L Sche92a
%K olit-oodb kids binder (shelf)
%A Stefan Scherrer
%T The KIDS Data Model Specification Language
%R preliminary report
%I Universit\:at Z\:urich
%D Dec. 1992

%L Schi82a
%K misc mail
%A P. Schicker
%T Naming and Addressing in a Computer-Based Mail Environment
%J IEEE Trans on Communications
%V COM-30
%N 1
%D Jan 1982
%P 46-62

%L Schm76a
%K concurrency READ
%A H.A. Schmidt
%T On the Efficient Implementation of Conditional Critical Regions
   and the Construction of Monitors
%J Acta Informatica
%V 6
%N 3
%D 1976
%P 227-249

%L Schm86a
%K olit-oopl object-pascal
%A Kurt J. Schmucker
%T Object-Oriented Programming for the Macintosh
%I Hayden Book Company
%D 1986

%L Schm86b
%K pl-semantics
%A D.A. Schmidt
%T Denotational Semantics: A Methodology for Language Development
%I Allyn and Bacon, Inc.
%C Newton, MA
%D 1986

%L Schn91a
%K concurrency graph grammars binder
%A Hans-J\:urgen Schneider
%T Describing Process Systems with shared Data Structures by Graph Grammars
%R Draft
%I Univ. Erlangen-N\:urnberg
%D May 31, 1991

%L Sco82a
%K pl-semantics domains icalp82 binder
%A Dana Scott
%T Domains for Denotational Semantics
%B Proceedings ICALP '82
%E M. Nielsen and E.M. Schmidt
%I Springer-Verlag
%S LNCS 140
%C Aarhus, DK
%D July 1982
%% 5.2 AUT
%P 577-613

%L Scot76a
%K types semantics binder(etc)
%A Dana Scott
%T Data Types as Lattices
%J SIAM J. Comput.
%V 5
%N 3
%D Sept. 1976
%P 522-587

%L Seid87a
%K olit oopsla87
%A Ed Seidewitz
%T Object-Oriented Programming in Smalltalk and ADA
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 202-213

%L Seve74a
%K misc searching
%A D.G. Severance
%T Identifier Search Mechanisms: A Survey and Generalized Model
%J ACM Computing Surveys
%V 6
%N 3
%D Sept 1974
%P 175-194

%L Seve76a
%K misc
%A D.G. Severance
%A R.A. Duhne
%T A Practitioner's Guide to Addressing Algorithms
%J CACM
%V 19
%N 6
%D 1976
%P 314-326

%L Shah89a
%K olit oopsla89
%A Ashwin V. Shah
%A Jung H. Hamel
%A Renee E. Borsari
%A James E. Rumbaugh
%T DSM: An Object-Relationship Modeling Language
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 191-202

%L Sham77a
%K types tfc semantics icalp77
%A A. Shamir
%A W. Wadge
%T Data types as objects
%B Proceedings, ICALP '77
%E Salomaa and Steinby
%S LNCS 52
%I Springer-Verlag
%D July 1977
%% 5.20 AUT
%P 465-479

%L Shan89a
%K olit oopsla89
%A Yen-Ping Shan
%T An Event-Driven Model-View-Controller Framework for Smalltalk
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 347-352

%L Shan90a
%K olit oopsla90 ecoop90
%A Yen-Ping Shan
%T MoDE: A UIMS for Smalltalk
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 258-268

%L Shan92a
%K olit-obcl cluster binder
%A Lujun Shang
%T An Object-Oriented Approach to Construct Concurrent Behaviours
%R draft
%I Comp. Sci Dept., Nanjing University, China
%D 1992
%% received from him when visiting ETH

%L Shap83a
%K olit-obc
%A E. Shapiro
%A A. Takeuchi
%T Object Oriented Programming in Concurrent Prolog
%J New Generation Computing
%V 1
%D 1983
%P 25-48

%L Shap89a
%K olit c++ ecoop89
%A Marc Shapiro
%A Philippe Gautron
%A Laurence Mossieri
%T Persistence and Migration for C++ Objects
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 191-204

%L Shar91a
%K olit oopsla91
%A Ravi Sharma
%A Mary Lou Soffa
%T Parallel Generational Garbage Collection
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 16-32

%L Shaw77a
%K olit lang alphard data abstraction
%A M. Shaw
%A W. Wulf
%T Abstraction and Verification in Alphard:
   Defining and Specifying Iteration and Generators
%J CACM
%V 20
%N 8
%D Aug 1977
%P 553-564

%L Shaw90a
%K olit
%A M. Shaw
%T Prospects for an Engineering Discipline of Software
%J IEEE Software
%V 7
%N 6
%D Nov. 1990
%P 15-24

%L Shel90a
%K types fp tfc binder
%A Mark A. Sheldon
%T Static Dependent Types for First Class Modules
%B ACM Conference on Lisp and Functional Programming
%D June, 1990

%L Shib88a
%K olit-obc oopsla88
%A Etsuya Shibayama
%T How To Invent Distributed Implementation Schemes of an Object-Based
   Concurrent Language: A Transformational Approach
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 297-305

%L Shib92a
%K olit-obc obc91
%A Etsuya Shibayama
%T Semantic Layers of Object-Based Concurrent Computing
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 99-117

%L Shil89a
%K olit binder(oop) oopsla89
%A John J. Shilling
%A Peter F. Sweeney
%T Three Steps to Views: Extending the Object-Oriented Paradigm
%J ACM SIGPLAN Notices, Proceedings OOPSLA '89
%V 24
%N 10
%D Oct 1989
%P 353-361

%L Shin84a
%K olit-obc recovery reliability
%A K.G. Shin
%A Yut-Fai Lee
%T Evaluation of Error Recovery Blocks Used for Cooperating Processes
%J IEEE Transactions on Software Engineering
%V SE-10
%N 6
%D Nov 1984
%P 692-700

%L Shne83a
%K uilit
%A B. Shneiderman
%T Direct Manipulation: A Step Beyond Programming Languages
%J IEEE Computer
%V 16
%N 8
%D 1983
%P 57-69

%L Shoc82a
%K olit-obc distribution worms
%A J. Shoch
%A J. Hupp
%T The Worm Programs -- Early Experience with a Distributed Computation
%J CACM
%V 25
%N 3
%D March 1982
%P 172-180

%L Shri87a
%K olit research obib(gen)
%T Research Directions in Object-Oriented Programming
%E B. Shriver and P. Wegner
%I MIT Press
%C Cambridge, Massachusetts
%D 1987

%L Shu88a
%K visprog
%A Nan C. Shu
%T Visual Programming
%I Van Nostrand Reinhold company
%D 1988

%L Sifa89a
%K concurrency regular processes
%E Joseph Sifakis
%T Automatic Verification Methods for Finite State Systems: Proceedings
%I Springer-Verlag
%S LNCS 407
%D 1989
%% CUI 5.22 AUT
%% 382 pp
%% ISBN 3-540-52148-8

%L Silb84a
%K olit-obc distribution
%A A. Silberschatz
%T Cell: A Distributed Computing Modularization Concept
%J IEEE Transactions on Software Engineering
%V SE-10
%N 2
%D March 1984
%P 178-185

%L Simm91a
%K olit oopsla91
%A Sergui S. Simmel
%A Ivan Godard
%T The Kala Basket: A Semantic Primitive Unifying Object Transactions,
   Access Control, Versions, and Configurations
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 230-246

%L Skar86a
%K types olit oodb encore oopsla86
%A Andrea H. Skarra
%A Stanley B. Zdonik
%T The Management of Changing Types in an Object-Oriented Database
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 483-495

%L Skar87a
%K types olit oodb versions rdoop87 obib(oodb)
%A Andrea H. Skarra
%A Stanley B. Zdonik
%T The Management of Changing Types in an Object-Oriented Database
%B Research Directions in Object-Oriented Programming
%E B. Shriver, P. Wegner
%I MIT Press
%C Cambridge, Massachusetts
%D 1987
%P 393-415

%L Smal81a
%K olit-oopl smalltalk binder
%Q The Xerox Learning Research Group
%T The Smalltalk-80 System
%J Byte
%V 6
%N 8
%D Aug 1981
%P 36-48

%L Smit77a
%K dblit data abstraction
%A J.M. Smith
%A D.C.P. Smith
%T Database Abstractions: Aggregation
%J CACM
%V 20
%N 6
%D June 1977
%P 405-413

%L Smit77b
%K dblit data abstraction
%A J.M. Smith
%A D.C.P. Smith
%T Database abstractions: Aggregation and Generalization
%J ACM TODS
%V 2
%N 2
%D June 1977
%P 105-133

%L Smit82a
%K uilit star
%A D.C.S. Smith
%A C. Irby
%A R. Kimball
%A E. Harslam
%T The Star User Interface: An Overview
%B Proceedings AFIPS National Computer Conference
%V 51
%D June 1982
%P 515-528

%L Smit82b
%K olit-appl star ui
%A D.C.S. Smith
%A C. Irby
%A R. Kimball
%A B. Verplank
%A E. Harlem
%T Designing the Star User Interface
%J Byte
%V 7
%N 4
%D April 1982
%P 242-282

%L Smit83a
%K olit-oopl strobe lisp
%A Reid G. Smith
%T Strobe: Support for Structured Object Knowledge Representation
%B Proceedings of the Eighth International Joint
   Conference on Artificial Intelligence
%V 2
%D August 1983
%P 855-858

%L Smit86a
%K olit-appl impulse86 ui oopsla86
%A Reid G. Smith
%A Rick Dinitz
%A Paul Barth
%T Impulse-86: A Substrate for Object-Oriented Interface Design
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 167-176

%L Smit87a
%K olit oopsla87
%A Karen E. Smith
%A Stanley B. Zdonik
%T Intermedia: A Case Study of the Differences Between Relational and
   Object-Oriented Database Systems
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 452-465

%L Smol89a
%K olit logic binder (shelf)
%A Gert Smolka
%T Feature Constraint Logics for Unification Grammars
%R IWBS Report 93
%I IBM Germany
%C Stuttgart
%D Nov. 1989
%O to appear in Journal of Logic Programming

%L Snod83a
%K olit-oopl oocl
%A R. Snodgrass
%T An Object-Oriented Command Language
%J IEEE Transactions on Software Engineering
%V SE-9
%N 1
%D Jan 1983
%P 1-8

%L Snyd79a
%K olit architecture casais
%A Alan Snyder
%T A Machine Architecture to Support an Object-Oriented Language
%R PH.D. thesis, MIT/LCS/TR209
%I MIT lab. for Computer sciences
%D 1979

%L Snyd86a
%K olit-oopl commonobjects lisp flavors oopws86 obib(oopl)
%A Alan Snyder
%T CommonObjects: An Overview
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 19-28

%L Snyd86b
%K olit-inheritance concepts oopsla86 binder(oop) obib(inh)
%A Alan Snyder
%T Encapsulation and Inheritance in Object-Oriented Programming Languages
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 38-45

%L Snyd91a
%K olit ecoop91
%A Alan Snyder
%T Modeling the C++ Object Model, An Application of an Abstract Object Model
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 1-20

%L Snyd91b
%K olit
%A Alan Snyder
%T How to Get Your Paper Accepted at OOPSLA
%J ACM OOPS Messenger
%V 2
%N 1
%D Jan. 1991
%P 2-7

%L Snyd93a
%K olit ieee
%A Alan Snyder
%T The Essence of Objects: Concepts and Terms
%J IEEE Software (Special Issue on "Making O-O Work")
%V 10
%N 1
%D Jan 1993
%P 31-42

%L Sole90a
%K olit omg
%T Object Management Architecture Guide
%E Richard Soley
%I Object Management Group
%C Frameington, MA
%D Nov. 1990

%L Sorg88a
%K olit ecoop88
%A P\oal S\/orgaard
%T Object-Oriented Programming and Computerised Shared Material
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 319-334

%L Spah88a
%K misc distribution name server
%A Stephane Spahni
%A J\:urgen Harms
%T A Local Name Server for Organizational Message Handling Systems
%B Proceedings 1988 International Zurich Seminar on Digital Communications
%I IEEE Cat. No. 88TH0202-2
%D March 8-10, 1988
%P 239-246

%L Spoo84a
%K security db os
%A David L. Spooner
%A E. Gudes
%T A Unifying Approach to the Design of a Secure
   Database Operating System
%J IEEE Transactions on Software Engineering
%V SE-10
%N 3
%D May 1984
%P 310-319

%L Srid88a
%K olit oopsla88
%A S. Sridhar
%T Configuring Stand-Alone Smalltalk-80 Applications
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 95-104

%L Stad89a
%K olit-ithaca scripting vst
%A Marc Stadelmann
%A Gerti Kappel
%A Jan Vitek
%T ITHACA Visual Scripting Tool: A First Implementation Based on the
   UNIX Shell Scripting Model
%R ITHACA report CUI.89.E4.#5
%I Centre Universitaire d'Informatique, University of Geneva
%D December 8, 1989
%X The architecture of the first prototype of VST, based on the Unix
   shell scripting model is described.
%% MS89: TR.E.1 (E.4)

%L Stad90a
%K olit-ithaca chloe om90
%A Marc Stadelmann
%A Gerti Kappel
%A Jan Vitek
%T VST: A Scripting Tool Based on the UNIX Shell
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 333-344
%X Scripting is a programming technique in which applications are built
   by composing specially designed, pre-packaged software components.
   Depending on the kind of applications different types of components and
   ways of composing them will be used. Hence, we distinguish between
   scripting models, defining the allowed components and kinds of
   connections between them, and scripting tools, helping to build scripts
   in accordance to the underlying model. We describe the implementation
   of the Visual Scripting Tool VST which supports the construction of
   scripts through the interactive editing of scripts' visual
   counterparts. The current version of the VST supports the UNIX shell
   scripting model. Extensions to VST supporting different scripting
   models are discussed.

%L Stad91a
%K olit-reuse chloe oc91
%A Marc Stadelmann
%T TeamWorks: Towards a Framework for Reuse
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 57-71
%X Scripting is a development technique that builds applications by
   composing prefabricated reusable software components and making them
   collaborate through scripts. TeamWorks is an interactive tool for
   scripting. We introduce the basic ideas and concepts of TeamWorks and
   illustrate them with examples.

%L Stef83a
%K olit-oopl loops knowrep
%A Mark Stefik
%A Daniel G. Bobrow
%A Sanja Mittal
%A L. Conway
%T Knowledge Programming in LOOPS: Report on an Experimental Course
%J The AI Magazine
%D Fall 1983
%P 3-13

%L Stef85a
%K olit survey obib(gen)
%A Mark Stefik
%A Daniel G. Bobrow
%T Object-Oriented Programming: Themes and Variations
%J The AI Magazine
%D Dec 1985

%L Stei87a
%K olit-inheritance inheritance delegation oopsla87 obib(inh)
%A Lynn Andrea Stein
%T Delegation Is Inheritance
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 138-146

%L Stey93a
%K olit ecoop93
%A Patrick Steyaert
%A Wim Codenie
%A Theo D'Hondt
%A Koen De Hondt
%A Carine Lucas
%A Marc Van Limberghen
%T Nested Mixin-Methods in Agora
%B Proceedings ECOOP '93
%E O. Nierstrasz
%S LNCS 707
%I Springer-Verlag
%C Kaiserslautern, Germany
%D July 1993
%P 197-219
%X Mixin-based inheritance is an inheritance technique that has been
   shown to subsume a variety of different inheritance mechanisms. It
   is based directly upon an incremental modification model of
   inheritance.  This paper addresses the question of how mixins can be
   seen as named attributes of classes the same way that objects,
   methods, and also classes in their own right, are seen as named
   attributes of classes.  The general idea is to let a class itself
   have control over how it is extended. This results in a powerful
   abstraction mechanism to control the construction of inheritance
   hierarchies in two ways. Firstly, by being able to constrain the
   inheritance hierarchy; secondly, by being able to extend a class in
   a way that is specific for that class. Nested mixins are a direct
   consequence of having mixins as attributes. The scope rules for
   nested mixins are discussed, and shown to preserve the encapsulation
   of objects.

%L Stir89a
%K pcalc tapsoft89 binder(ccs)
%A Colin Stirling
%A David Walker
%T Local Model Checking in the Modal Mu-Calculus
%B Proceedings TAPSOFT '89
%S LNCS 351
%E D\'iaz and Orejas
%I Springer-Verlag
%D 1989
%% 4.0 INT
%P 369-383

%L Ston85a
%K misc triggers db
%A M. Stonebraker
%T Triggers and Interference in Data Base Systems
%R Memorandum No UCB/ERL M85/46
%I Electronics Research Laboratory, U Cal Berkeley
%D May 1985

%L Stoy77a
%K pl-semantics
%A J.E. Stoy
%T Denotational Semantics: The Scott-Strachey Approach
   to Programming Language Theory
%I MIT Press
%D 1977

%L Stoy84a
%K olit survey
%A H. Stoyan
%T What is an `Object-Oriented' Programming Language?
%B Proceedings of the Seventeenth Annual
   Hawaii International Conference on System Sciences
%D 1984

%L Stra90a
%K types olit oopsla90 ecoop90
%A Dave D. Straube
%A M. Tamer Oezsu
%T Type Consistency of Queries in an Object-Oriented Database System
%J Proceedings OOPSLA/ECOOP '90, ACM SIGPLAN Notices
%V 25
%N 10
%D Oct 1990
%P 224-233

%L Stro84a
%K olit-oopl c++
%A Bjarne Stroustrup
%T The C++ Programming Language -- Reference Manual
%R Computing Science Technical Report #108
%I AT&T Bell Laboratories
%C Murray Hill, New Jersey 07974
%D Jan 1984

%L Stro84b
%K olit-oopl c++
%A Bjarne Stroustrup
%T Data Abstraction in C
%R Computing Science Technical Report #109
%I AT&T Bell Laboratories
%C Murray Hill, New Jersey 07974
%D Jan 1984

%L Stro84c
%K olit-oopl c++
%A Bjarne Stroustrup
%T Operator Overloading in C
%R Report
%I AT&T Bell Laboratories
%C Murray Hill, New Jersey 07974
%D Jan 1984

%L Stro84d
%K olit-oopl c++
%A Bjarne Stroustrup
%T Complex Arithmetic in C
%R Report
%I AT&T Bell Laboratories
%C Murray Hill, New Jersey 07974
%D Jan 1984

%L Stro86a
%K olit-oopl c++ obib(oopl)
%A Bjarne Stroustrup
%T The C++ Programming Language
%I Addison-Wesley
%C Reading, Mass.
%D 1986

%L Stro86b
%K olit-oopl c++ oopws86 obib(oopl)
%A Bjarne Stroustrup
%T An Overview of C++
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 7-18

%L Stro86c
%K olit concepts oopws86
%A R. Strom
%T A Comparison of the Object-Oriented and Process Paradigms
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 88-97

%L Stro87a
%K olit ecoop87
%A Bjarne Stroustrup
%T What is "Object-Oriented Programming"?
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 51-70

%L Svob84a
%K olit reliability
%A L. Svobodova
%T Resilient Distributed Computing
%J IEEE Transactions on Software Engineering
%V SE-10
%N 3
%D May 1984
%P 257-268

%L Swar82a
%K misc
%A W. Swartout
%A R. Balzer
%T On the Inevitable Intertwining of Specification and Implementation
%J CACM
%V 25
%D 1982
%P 438-440

%L Swee85a
%K olit-oopl mesa
%A R.E. Sweet
%T The Mesa Programming Environment
%J Proceedings ACM SIGPLAN 85 Symposium on Language Issues
   in Programming Environments, ACM SIGPLAN Notices
%V 20
%N 7
%D July 1985
%P 216-229

%L Swin85a
%K olit cedar
%A D. Swinehart
%A P. Zwellweger
%A R. Hagmann
%T The Structure of Cedar
%J Proceedings ACM SIGPLAN 85 Symposium on Language Issues
   in Programming Environments, ACM SIGPLAN Notices
%V 20
%N 7
%D July 1985
%P 230-244

%L Swin86a
%K olit-oopl cedar
%A D. Swinehart
%A P. Zwellweger
%A Richard Beach
%T A Structural View of the Cedar Programming Environment
%J ACM TOPLAS
%V 8
%N 4
%D Oct 1986
%P 419-490

%L Szcz88a
%K olit oopsla88
%A Martha R. Szczur
%A Philip Miller
%T Transportable Applications Environment (TAE) Plus Experiences in
   "Object"-ively Modernizing a User Interface Environment
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 58-70

%L Szek88a
%K olit oopsla88
%A Pedro Szekely
%A Brad Myers
%T A User Interface Toolkit Based on Graphical Objects and Constraints
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 36-45

%L Szyp92a
%K olit-inheritance ecoop92
%A Clemens A. Szyperski
%T Import is Not Inheritance -- Why We Need Both: Modules and Classes
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 19-32

%L Taen89a
%K olit-reuse inheritance emerald ecoop89 binder(oop)
%A David Taenzer
%A Murthy Ganti
%A Sunil Podar
%T Problems in Object-Oriented Software Reuse
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 25-38

%L Taka92a
%K olit oopsla92
%A Kazunori Takashio
%A Mario Tokoro
%T DROL: An Object-Oriented Programming Language for
   Distributed Real-Time Systems
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 276-297

%L Tane85a
%K olit distribution binder
%A A.S. Tanenbaum
%A R. Van Renesse
%T Distributed Operating Systems
%J ACM Computing Surveys
%V 17
%N 4
%D Dec 1985
%P 419-470

%L Tann83a
%K uilit
%A P.P. Tanner
%A W.A.S. Buxton
%T Some Issues in Future Interface Management System Development
%J IFIP WG 5.2, Workshop on User Interface Management
%C Seeheim, Federal Republic of Germany
%D Nov 1-3, 1983

%L Teit81a
%K plang seelit interlisp
%A W. Teitelman
%A Larry Masinter
%T The Interlisp Programming Environment
%J IEEE Computer
%V 14
%N 4
%D April 1981
%P 25-34

%L Tenn76a
%K pl-semantics binder
%A R.D. Tennent
%T The Denotational Semantics of Programming Languages
%J Communications of the ACM
%V 19
%N 8
%D August 1976
%P 437-453

%L Tesl81a
%K olit-oopl smalltalk
%A L. Tesler
%T The Smalltalk Environment
%J Byte
%V 6
%N 8
%D Aug 1981

%L Ther83a
%K olit-oopl act2 actors
%A D.G. Therault
%T Issues in the Design and Implementation of Act2
%R M.Sc. thesis, TR #728
%I MIT AI Lab
%D June 1983

%L Thom84a
%K security unix
%A Ken Thompson
%T Reflection on Trusting Trust
%J CACM
%V 27
%N 8
%D Aug 1984
%P 761-763

%L Thom88a
%K olit-oopl orwell oopsla88
%A Dave Thomas
%A Kent Johnson
%T Orwell -- A Configuration Management System for Team Programming
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 135-141

%L Thom89a
%K pcalc mobility equivalence chocs binder(ccs) popl89
%A Bent Thomsen
%T A Calculus of Higher Order Communicating Systems
%B Proceedings POPL '89
%C Austin, Texas
%D Jan 11-13, 1989
%P 143-154

%L Thom90a
%K pcalc mobility equivalence chocs binder (shelf)
%A Bent Thomsen
%T Calculi for Higher Order Communicating Systems
%R Ph.D. thesis
%I Imperial College
%C London
%D 1990

%L Thom91a
%K types dependent
%A Simon Thompson
%T Type Theory and Functional Programming
%I Addison-Wesley
%S International Computer Science Series
%D 1991
%% suggested by BCP & MH
%% in our group library

%L Thom92a
%K concurrency semantics facile binder (shelf)
%A Bent Thomsen
%A Lone Leth
%A Alessandro Giacalone
%T Some Issues in the Semantics of Facile Distributed Programming
%R ECRC-92-32
%I ECRC
%C Munich
%D 1992

%L Thor87a
%K types olit oopsla87
%A Lars-Erik Thorelli
%T Modules and Type Checking in PL/LL
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 268-276

%L Thur89a
%K olit-oodb oopsla89
%A M.B. Thuraisingham
%T Mandatory Security in Object-Oriented Database Systems
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 203-210

%L Toft90a
%K pcalc ccs
%A C. Tofts
%T Timed Concurrent Processes
%B Semantics for Concurrency
%E M.Z. Kwiatkowska, M.W. Shields and R.M. Thomas
%S Workshops in Computing
%I Springer-Verlag
%D 1990
%% 5.24 SEM
%P 281-294

%L Toko86a
%K olit-obcl orient84k knowrep actors oopws86
%A Mario Tokoro
%A Yutaka Ishikawa
%T Concurrent Programming in Orient84/K:
   An Object-Oriented Knowledge Representation Language
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 39-48

%L Toko90a
%K concurrency binder
%A Mario Tokoro
%T Computational Field Model: Toward a New Computing Model/Methodology
   for Open Distributed Environment
%R SCSL-TR-90-006
%I Sony Computer Science Lab. Inc.
%C Tokyo
%D June 11, 1990

%L Toko92a
%K olit-obc obc91
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E Mario Tokoro
%E Oscar Nierstrasz
%E Peter Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992

%L Toml88a
%K olit-obcl oocda89 obib(obcp)
%A Chris Tomlinson
%A M. Scheevel
%T Concurrent Object-Oriented Programming Languages
%B Object-Oriented Concepts, Databases and Applications
%E W. Kim and F. Lochovsky
%I ACM Press and Addison-Wesley
%D 1989
%P 79-124

%L Toml89a
%K olit-obcl rosette oopsla89
%A Chris Tomlinson
%A Vineet Singh
%T Inheritance and Synchronization with Enabled Sets
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 103-112

%L Trel82a
%K misc
%A P.C. Treleaven
%A D.R. Brownbridge
%A R.P. Hopkins
%T Data-Driven and Demand-Driven Computer Architecture
%J ACM Computing Surveys
%V 14
%N 1
%D March 1982
%P 93-143

%L Trem75a
%K misc computability logic
%A J.P. Tremblay
%A R. Manohar
%T Discrete Mathemetical Structures with Applications to Computer Science
%I McGraw-Hill
%D 1975

%L Trip88a
%K olit-obcl sina joop
%A Anand Tripathi
%A Mehmet Aksit
%T Communication, Scheduling and Resource Management in SINA
%J Journal of Object-Oriented Programming
%V 2
%N 4
%D Nov/Dec 1988
%P 24-36

%L Trot92a
%K olit chloe of92
%A Claudio Trotta
%A Oscar Nierstrasz
%T Object-Oriented Support for Generic Application Frames
%R Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992
%P 151-195
%% REPORT
%X One step in trying to define a reuse-based software development
   paradigm is reasoning about the development process itself and the
   required information to support it. We work towards this goal by
   proposing a tool for designing Generic Application Frames based on
   the careful structuring of past experience as well as domain
   information.  We claim that the benefits of the object-oriented
   paradigm have yet to be properly scaled, and that they can be
   achieved by applying object-oriented design techniques to describe
   both software components and development methods.

%L Tsic72a
%K security sue os capabilities
%A Dennis Tsichritzis
%T Protection in Operating Systems
%J Information Processing Letters
%V 1
%N 4
%I North-Holland
%C Amsterdam
%D 1972
%P 127-131

%L Tsic76a
%K dblit
%A Dennis Tsichritzis
%A Frederick H. Lochovsky
%T Hierarchical Database Management: A Survey
%J ACM Computing Surveys
%V 8
%N 1
%D March 1976
%P 105-124

%L Tsic82a
%K oislit forms mail tla ofs
%A Dennis Tsichritzis
%A Fausto Rabitti
%A Simon Gibbs
%A Oscar Nierstrasz
%A John Hogg
%T A System for Managing Structured Messages
%J IEEE Transactions on Communications
%V Com-30
%N 1
%D Jan 1982
%P 66-73
%% JOURNAL

%L Tsic82b
%K oislit ofs forms
%A Dennis Tsichritzis
%T Form Management
%J CACM
%V 25
%N 7
%D July 1982
%P 453-478

%L Tsic82c
%K dblit
%A Dennis Tsichritzis
%A Frederick H. Lochovsky
%T Data Models
%I Prentice-Hall
%C Englewood Cliffs, N.J.
%D 1982

%L Tsic83a
%K oislit ofs forms
%A Dennis Tsichritzis
%A Stavros Christodoulakis
%A Panos Economopoulos
%A Christos Faloutsos
%A Allison Lee
%A Dik Lee
%A J. Vandenbroek
%A Carson Woo
%T A Multimedia Office Filing System
%B Proceedings of the Ninth International Conference on Very Large
   Data Bases
%C Florence, Italy
%D 1983
%P 2-7

%L Tsic83b
%K oislit mail
%A Dennis Tsichritzis
%A Stavros Christodoulakis
%T Message Files
%J ACM TOOIS
%V 1
%N 1
%D Jan 1983
%P 88-98

%L Tsic84a
%K oislit mail
%A Dennis Tsichritzis
%T Message Addressing Schemes
%J ACM TOOIS
%V 2
%N 1
%D Jan 1984
%P 58-87

%L Tsic84b
%K misc documents
%A Dennis Tsichritzis
%A Costantino Thanos
%A Fausto Rabitti
%A Stavros Christodoulakis
%A Simon Gibbs
%A Elisa Bertino
%A A. Fedeli
%A Christos Faloutsos
%A Panos Economopoulos
%T Design Issues of a File Server for Multimedia Documents
%B Esprit '84: Status Report of Ongoing Work
%E J. Roukens and J.F. Renuart
%I Elsevier Science Publishers B.V. (North-Holland)
%D 1985

%L Tsic85a
%K misc mail roles oact85
%A Dennis Tsichritzis
%A Simon Gibbs
%T Etiquette Specification in Message Systems
%B Office Automation: Concepts and Tools
%E D. Tsichritzis
%I Springer Verlag
%C Heidelberg
%D 1985
%P 93-112

%L Tsic85b
%K olit-appl knos knowrep oact85
%A Dennis Tsichritzis
%T Objectworld
%B Office Automation: Concepts and Tools
%E D. Tsichritzis
%I Springer Verlag
%C Heidelberg
%D 1985
%P 379-398

%L Tsic85c
%K olit-obc appl knos hybrid
%A Dennis Tsichritzis
%A Oscar Nierstrasz
%T End User Objects
%J B\:uroautomation '85 (German Chapter of the ACM, Berichte 25)
%E H. Wedekind/K. Kratzer
%I B.G. Teubner
%C Stuttgart
%D Oct 4, 1985
%P 215-232
%% ARTICLE

%L Tsic85d
%K olit-appl knos knowrep
%A Dennis Tsichritzis
%T Object Species
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 2-7

%L Tsic85e
%K olit oact85
%T Office Automation: Concepts and Tools
%E D. Tsichritzis
%I Springer Verlag
%C Heidelberg
%D 1985

%L Tsic87a
%K olit-appl knos knowrep chloe-ftp oat87 obib(sys)
%A Dennis Tsichritzis
%A Eugene Fiume
%A Simon Gibbs
%A Oscar Nierstrasz
%T KNOs: KNowledge Acquisition, Dissemination and Manipulation Objects
%J ACM TOOIS
%V 5
%N 1
%D Jan 1987
%P 96-112
%% MIR
%% JOURNAL
%X Most object-oriented systems lack two useful facilities: the ability
   of objects to migrate to new environments, and the ability of
   objects to acquire new operations dynamically. This paper proposes
   Knos, an object-oriented environment which supports these actions.
   Their operations, data structures, and communication mechanisms are
   discussed. Kno objects "learn" by exporting and importing new or
   modified operations. The use of such objects as intellectual support
   tools is outlined. In particular, various applications involving
   co-operation, negotiation, and apprenticeship among objects are
   described.
%% ftp: cui.unige.ch:OO-articles/knos.ps.Z

%L Tsic87b
%K olit chloe oat87
%T Objects and Things
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D March 1987

%L Tsic87c
%K olit oat87
%A Dennis Tsichritzis
%A Simon Gibbs
%T Messages, Messengers and Objects
%B Proceedings of the IEEE Symposium on Office Automation
%C Gaithersburg, MD
%D April 1987

%L Tsic88a
%K olit chloe aoe88
%A Dennis Tsichritzis
%A Oscar Nierstrasz
%T Application Development Using Objects
%B Information Technology for Organisational Systems,
   Proceedings EURINFO '88
%E H-J. Bullinger et al.
%I Elsevier Science Publishers B.V. (North-Holland)
%D 1988
%P 15-23
%X Much of the cost of developing and maintaining applications can be
   attributed to our disposition to build systems largely from
   scratch.  An application development support system would shift the
   emphasis from programming of arbitrary systems to {\it
   configuration} of certain classes of applications from pre-packaged
   software.  In order for this style of application development to be
   successful, we argue that it should be carried out in an
   object-oriented software environment.  Such an environment would
   consist of an object-oriented language and system that integrates
   various object-oriented approaches, user interface tools for
   monitoring and interacting with active objects, object design tools,
   and support for evolving application-oriented objects.
%% ARTICLE

%L Tsic88b
%% CB06
%K olit-oodb ecoop88 chloe-ftp aoe88 obib(oodb) chloe-book
%A Dennis Tsichritzis
%A Oscar Nierstrasz
%T Fitting Round Objects into Square Databases
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 283-299
%% MIR
%X Object-oriented systems could use much of the functionality of
   database systems to manage their objects.  Persistence, object
   identity, storage management, distribution and obc control are
   some of the things that database systems traditionally handle well.
   Unfortunately there is a fundamental difference in philosophy between
   the object-oriented and database approaches, namely that of object
   independence versus data independence.  We discuss the ways in which
   this difference in outlook manifests itself, and we consider the
   possibilities for resolving the two views, including the current work
   on object-oriented databases.  We conclude by proposing an approach to
   co-existence that blurs the boundary between the object-oriented
   execution environment and the database.
%% ARTICLE
%% ftp: cui.unige.ch:OO-articles/roundSquare.ps.Z

%L Tsic88c
%K olit aoe88
%A Dennis Tsichritzis
%T Integrated Application Systems: Esprit I and II
%B Active Object Environments
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1988
%P 219-224

%L Tsic88d
%K olit chloe aoe88
%T Active Object Environments
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1988

%L Tsic89a
%K olit-oopl survey chloe aoe88 oocda89
%A Dennis Tsichritzis
%A Oscar Nierstrasz
%T Directions in Object-Oriented Research
%B Object-Oriented Concepts, Databases and Applications
%E W. Kim and F. Lochovsky
%I ACM Press and Addison-Wesley
%D 1989
%P 523-536
%X Identifies several more traditional research directions dealing with
   object oriented languages and systems, and several more exotic research
   directions concerning evolving active objects.
%% ARTICLE

%L Tsic89b
%K olit chloe ood89
%T Object Oriented Development
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1989

%L Tsic89c
%% CB01
%K olit chloe-ftp ood89 ifip89 chloe-book
%A Dennis Tsichritzis
%T Object-Oriented Development for Open Systems
%J Information Processing 89 (Proceedings IFIP '89)
%I North-Holland
%C San Francisco
%D Aug 28-Sept 1, 1989
%P 1033-1040
%X This paper outines the requirements for a series of tools to develop
   effectively systems in an object-oriented manner.  It points out
   that reusability requires a certain change in philosophy and
   methodology for program development.
%% MIR
%% ftp: cui.unige.ch:OO-articles/ooDevelopmentOpenSystems.ps.Z

%L Tsic90a
%K olit chloe om90
%T Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990

%L Tsic90b
%% CB21
%K olit-reuse chloe-ftp om90 chloe-book
%A Dennis Tsichritzis
%A Simon Gibbs
%T Towards Integrated Software Communities
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 3-11
%O Submitted as a position paper to the Esprit Advisory Board
%X The large-scale reuse and distribution of software components
   requires communities of software developers supported by an
   infrastructure of communication and information services. This paper
   elaborates on the notion of software communities and describes their
   role in software production. Problems associated with sharing
   components within a software community are discussed. Finally the
   paper describes the steps needed to promote the establishment of a
   robust software community.
%% ftp: cui.unige.ch:OO-articles/integratedSoftwareCommunities.ps.Z

%L Tsic90c
%K olit chloe om90
%A Dennis Tsichritzis
%A Simon Gibbs
%T From Custom-Made to Pr\<et-\`a-Porter Software
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 367-376
%X We discuss the different aspects of software development and the different
   lines of activities that a software company may pursue. The choice of
   alternatives and the positioning of a software company is very critical to its
   eventual success. We propose some positive steps for giving companies a better
   chance to succeed in the fiercely competitive international software market.

%L Tsic91a
%K olit chloe oc91
%A Dennis Tsichritzis
%A Simon Gibbs
%A Laurent Dami
%T Active Media
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 115-132
%% Categories and Subject Descriptors: D.2.2 [Software Engineering]:
   Tools and Techniques--user interfaces; H.1.2 [Models and Principles]:
   User/Machine Systems--human information processing; I.3.7 [Computer
   Graphics]: Miscellaneous.  General Terms: Design, Human Factors.
   Additional Key Words and Phrases:  multimedia, scripting, active
   objects, video/graphics integration
%X In this paper we explore an environment for "active media." The
   environment consists of a lower-level object-oriented framework
   intended for multimedia programmers and a higher-level facility
   intended for multimedia designers. We claim that such an environment
   will be both flexible and powerful for constructing complex multimedia
   applications. We first define multimedia objects and then explore
   composition techniques for these objects. Finally, we outline a
   facility for "scripting," that is, specifying the cooperation of such
   objects.

%L Tsic91b
%K olit chloe oc91
%A Dennis Tsichritzis
%A Simon Gibbs
%T Virtual Museums and Virtual Realities
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 157-164
%O A version of this paper will appear in Proc. of the Intl. Conf. on
   Hypermedia and Interactivity in Muse ums, Pittsburgh, 1991.
%X The notion of virtual museum is discussed and related to various
   developments in user-interface, software, and communications
   technology. A prototype implementation, intended to explore the
   integration of interactive 3d graphics with video imagery is
   described.

%L Tsic91c
%K olit chloe oc91 hypertext perspectives versioning
%A Dennis Tsichritzis
%A Vassili Prevelakis
%T Perspectives on Hypertext Structures
%R Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991
%P 255-271
%X Using graph-like structures to store and organise ideas, concepts,
   or even programs is not new. However, difficulties arise when large
   amounts of inter-related information are shared by groups of people.
   This paper describes an organisation based on perspectives that aids in
   structuring hy pertext.  Perspectives provide a uniform model for
   views, versions and contexts -- and can be composed via perspective
   operations. After a brief introduction where we motivate the need for
   structuring mechanisms within hypertext, we give a more rigorous
   description of the model be hind perspectives and the operations that
   can be performed on them. We then present a number of examples that
   demonstrate that perspectives can be used in various application
   domains. Finally, we outline a prototype implementation built to
   demonstrate the power and flexibility of our model.

%L Tsic91d
%K olit chloe oc91
%T Object Composition
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D June 1991

%L Tsic92a
%K olit-reuse chloe-ftp of92
%A Dennis Tsichritzis
%A Oscar Nierstrasz
%A Simon Gibbs
%T Beyond Objects: Objects
%J IJICIS (International Journal of Intelligent & Cooperative
   Information Systems)
%V 1
%N 1
%D 1992
%P 43-60
%X Object-orientation offers more than just objects, classes and
   inheritance as means to structure applications.  It is an approach to
   application development in which software systems can be constructed by
   composing and refining pre-designed, plug-compatible software
   components.  But for this approach to be successfully applied,
   programming languages must provide better support for component
   specification and software composition, the software development
   life-cycle must separate the issues of generic component design and
   reuse from that of constructing applications to meet specific
   requirements, and, more generally, the way we develop, manage, exchange
   and market software must adapt to better support large-scale reuse for
   software communities.  In this paper we shall explore these themes and
   we will highlight a number of key research directions and open problems
   to be explored as steps towards improving the effectiveness of object
   technology.
%% JOURNAL
%% ftp: cui.unige.ch:OO-articles/beyondObjects.ps.Z

%L Tsic92b
%K olit chloe of92
%T Object Frameworks
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1992

%L Tsic93a
%K olit chloe vo93
%T Visual Objects
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1993

%L Turn85a
%K fpl miranda
%A David A. Turner
%T Miranda: A Non-strict Functional Language with Polymorphic Types
%B Proceedings Functional Programming languages and Computer Architecture
%S LNCS 201
%E J-P. Jouannaud
%I Springer-Verlag
%D 1985
%% 4.22 FUN
%P 1-16

%L Turn90a
%K fpl miranda binder(fp)
%A David A. Turner
%T An Overview of Miranda
%B Research Topics in Functional Programming
%E D.A. Turner
%I Addison Wesley
%D 1990
%P 1-16

%L Twai84a
%K olit-oopl oz ois
%A K.J. Twaites
%T An Object-based Programming Environment for Office Information Systems
%R M.Sc. thesis
%I Department of Computer Science, University of Toronto
%D 1984

%L Unga84a
%K olit architecture soar risc smalltalk
%A David Ungar
%A R. Blau
%A P. Foley
%A D. Samples
%A David A. Patterson
%T Architecture of SOAR: Smalltalk on a RISC
%J 11th Annual Symposium on Computer Architecture
%C Ann Arbor, Michigan
%D June 4-7, 1984

%L Unga87a
%K olit-oopl self oopsla87
%A David Ungar
%A Randall B. Smith
%T Self: The Power of Simplicity
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 227-242

%L Unga88a
%K olit oopsla88
%A David Ungar
%A Frank Jackson
%T Tenuring Policies for Generation-Based Storage Reclamation
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 1-17

%L Unga92a
%K olit-oopl self ieee
%A David Ungar
%A Randall B. Smith
%A Craig Chambers
%A Urs H\:olzle
%T Object, Message, and Performance: How They Coexist in Self
%J IEEE Computer (Special Issue on Inheritance & Classification)
%V 25
%N 10
%D Oct 1992
%P 53-65

%L Upfa84a
%K concurrency
%A E. Upfal
%T Efficient Schemes for Parallel Communication
%J Journal of the ACM
%V 31
%N 3
%D July 1984
%P 507-517

%L Uust92a
%K olit ecoop92
%A Tarmo Uustalu
%T Combining Object-Oriented and Logic Paradigms: A Modal Logic
   Programming Approach
%B Proceedings ECOOP '92
%E O. Lehrmann Madsen
%S LNCS 615
%I Springer-Verlag
%C Utrecht, The Netherlands
%D June/July 1992
%P 98-113

%L Vans88a
%K concurrency binder (shelf)
%A Maarten van Steen
%T Modeling Dynamic Systems by Parallel Decision Processes
%R Ph.D. thesis
%I University of Leiden
%D 1988

%L Vasc92a
%K olit-obc obc91
%A Vasco Vasconcelos
%A Mario Tokoro
%T Traces Semantics for Actor Systems
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 141-162

%L Vasc92b
%K pcalc-obc mobility types binder
%A Vasco Vasconcelos
%T (A Preliminary Note on) A Simple Polymorphic Object Calculus
%R draft
%I Keio University
%D Dec 17, 1992

%L Vasc92c
%K pcalc-obc mobility types binder
%A Vasco Vasconcelos
%A Kohei Honda
%T Principle Typing-Schemes in a Polyadic \pi-calculus (extanded abstract)
%R draft
%I Keio University
%D Nov 14, 1992

%L Vauc88a
%K olit-obc ecoop88
%A Jean Vaucher
%A Guy Lapalme
%A Jacques Malenfant
%T SCOOP, Structured Concurrent Object-Oriented Prolog
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 191-211

%L Vegd86a
%K olit-oopl smalltalk oopsla86
%A Steven R. Vegdahl
%T Moving Structures between Smalltalk Images
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 466-471

%L Verb91a
%K olit binder (shelf)
%A Alexander Verbraeck
%T Developing an Adaptive Scheduling Support Environment
%R Ph.D. thesis
%I Technical University of Delft
%D 1991

%L Verh78a
%K dblit reliability recovery db
%A J.S.M. Verhofstad
%T Recovery Techniques for Database Systems
%J ACM Computing Surveys
%V 10
%N 2
%D June 1978
%P 167-195

%L Vite90a
%K olit-reuse scripting chloe om90
%A Jan Vitek
%A Betty Junod
%A Oscar Nierstrasz
%A Serge Renfer
%A Claudia Werner
%T Events and Sensors: Enhancing the Reusability of Objects
%R Object Management
%E D. Tsichritzis
%I Centre Universitaire d'Informatique, University of Geneva
%D July 1990
%P 345-356
%X Object-oriented programming methods promote the development of
   software from reusable components. In practice, reuse of
   object-oriented software is limited by a closed-world constraint: only
   components that are compatible -- that conform to an agreed-upon
   protocol -- may be composed. We seek to facilitate software
   composition. To this end, we propose an approach based on events and
   sensors that enhances the openness of objects, and thus increases the
   possibilities for their reuse.
%% REPORT

%L Vitt81a
%K misc mail
%A J. Vittal
%T Active Message Processing: Messages as Messengers
%B Proceedings of the International Symposium
   on Computer Message Systems, IFIP TC-6, Ottawa, April 1981
%E R.P. Uhlig
%I North Holland Publishing Co
%D 1982
%P 175-195

%L Voyd83a
%K security os networks
%A V.L. Voydock
%A S.T. Kent
%T Security Mechanisms in High-Level Network Protocols
%J ACM Computing Surveys
%V 15
%N 2
%D June 1983
%P 135-171

%L Walk89a
%K pcalc-obc mobility binder(css)
%A David Walker
%T Some Results on the \pi-calculus
%B Concurrency: Theory, Language and Architecture
%% UK/Japan Workshop, Oxford (Sept '89)
%S LNCS 491
%E A. Yonezawa and T. Ito
%I Springer-Verlag
%D 1991
%% D.1.3 CON
%P 21-35

%L Walk90a
%K pcalc-obc mobility semantics ccs binder (shelf)
%A David Walker
%T \pi-calculus Semantics of Object-Oriented Programming Languages
%R Reports ECS-LFCS-90-122
%I Computer Science Dept., University of Edinburgh
%D Oct. 1990

%L Walk93a
%K pcalc-obc mobility semantics ccs binder (shelf)
%A David Walker
%T Objects in the \pi-calculus
%J Information and Computing
%D 1993
%O to appear

%L Wall80a
%K types olit
%A P.J.L. Wallis
%T External Representations of Objects of User-Defined Type
%J ACM TOPLAS
%V 2
%N 2
%D April 1980
%P 137-152

%L Wall90a
%K pl perl binder (shelf)
%A Larry Wall
%A Randal L. Schwartz
%T Programming perl
%I O'Reilly & Associates, Inc.
%D 1990
%% ISBN 0-937175-64-1

%L Wals92a
%K olit oopsla92
%A James F. Walsh
%T Preliminary Defect Data from the Iterative Development of a
   Large C++ Program
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 178-183

%L Walt89a
%K olit oopsla89
%A Sandra S. Walther
%A Richard L. Peskin
%T Strategies for Scientific Prototyping in Smalltalk
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 159-168

%L Wang92a
%K olit oopsla92
%A Michael F. Wangler
%A Peeter Hansen
%T Visualizing Objects: Methods for Exploring Human
   Computer Interaction Concepts
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 146-153

%L Warr80a
%K patterns binder
%A David H.D. Warren
%T Logic Programming and Compiler Writing
%J Software -- Practice and Experience
%V 10
%D 1980
%P 97-125

%L Wata88a
%K olit-obcl abclr oopsla88
%A Takuo Watanabe
%A Akinori Yonezawa
%T Reflection in an Object-Oriented Concurrent Language
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 306-315

%L Webe91a
%K types olit binder
%A Franz Weber
%T Getting Class Correctness and System Correctness Equivalent --
   How to Get Covariance Right
%R draft
%D Dec. 1991
%O submitted for publication

%L Wegn72a
%K pl-semantics
%A Peter Wegner
%T Programming Language Semantics
%B Formal Semantics of Programming Languages
%E R. Rustin
%I Prentice-Hall
%D 1972
%P 149-248

%L Wegn72b
%K pl-semantics vdl binder
%A Peter Wegner
%T The Vienna Definition Language
%J ACM Computing Surveys
%V 4
%N 1
%D March 1972
%P 5-63

%L Wegn84a
%K olit-reuse
%A Peter Wegner
%T Capital-Intensive Software Technology
%J IEEE Software
%V 1
%N 3
%D July 1984
%% Also in Bigg89a

%L Wegn86a
%K olit concepts oopws86 obib(gen)
%A Peter Wegner
%T Classification in Object-Oriented Systems
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 173-182

%L Wegn87a
%K olit concepts survey oopsla87 obib(gen)
%A Peter Wegner
%T Dimensions of Object-Based Language Design
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 168-182

%L Wegn88a
%K olit-inheritance ecoop88 binder(oop) obib(inh)
%A Peter Wegner
%A Stanley B. Zdonik
%T Inheritance as an Incremental Modification Mechanism or
   What Like Is and Isn't Like
%B Proceedings ECOOP '88
%S LNCS 322
%E S. Gjessing and K. Nygaard
%I Springer Verlag
%C Oslo
%D August 15-17, 1988
%P 55-77

%L Wegn89a
%K olit binder(oop) obib(gen)
%A Peter Wegner
%T Learning the Language
%J Byte
%V 14
%N 3
%D March 1989
%P 245-253

%L Wegn90a
%K olit
%A Peter Wegner
%T Concepts and Paradigms of Object-Oriented Programming
%J ACM OOPS Messenger
%V 1
%N 1
%D Aug. 1990
%P 7-87

%L Wegn92a
%K olit-obc obc91
%A Peter Wegner
%T Design Issues for Object-Based Concurrency
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 245-256

%L Wegn92b
%K olit-oopl ieee
%A Peter Wegner
%T Dimensions of Object-Oriented Modeling
%J IEEE Computer (Special Issue on Inheritance & Classification)
%V 25
%N 10
%D Oct 1992
%P 12-21

%L Wei91a
%K olit rex scripting binder
%A Jiawang Wei
%A Markus Endler
%T A Configuration Model for Dynamically Reconfigurable Distributed Systems
%B Proc. 24th Hawaii Conference on System Science
%D Jan. 1991

%L Wei91b
%K olit rex scripting binder
%A Jiawang Wei
%A Markus Endler
%T Programming Dynamic Reconfigurations for Multi-Language Distributed
   Applications
%B Proc. 24th Hawaii Conference on System Science
%D Jan. 1991

%L Weih82a
%K olit-oopl argus reliability
%A W. Weihl
%A Barbara Liskov
%T Specification and Implementation of Resilient Atomic Data Types
%I MIT Department of EE and CS
%R Computation Structures Group Memo #223
%D Dec 1982

%L Wein81a
%K olit-oopl flavors lisp
%A D. Weinreb
%A David Moon
%T The Lisp Machine Manual
%I Symbolics Inc.
%D 1981

%L Wein88a
%K olit oopsla88
%A Andr\'e Weinand
%A Erich Gamma
%A Rudolph Marty
%T ET++ -- An Object-Oriented Application Framework in C++
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 46-57

%L Weis85a
%K olit-oopl oz
%A S.P. Weiser
%T An Object-oriented Protocol for Managing Data
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 41-48

%L Well92a
%K olit-oopl ieee
%A David L. Wells
%A Jos\'e A. Blakely
%A Craig W. Thompson
%T Architecture of an Open Object-Oriented Database
%J IEEE Computer (Special Issue on Inheritance & Classification)
%V 25
%N 10
%D Oct 1992
%P 74-83

%L Weye85a
%K olit-appl hypertext
%A S.A. Weyer
%A Alan H. Borning
%T A Prototype Electronic Encyclopedia
%J ACM TOOIS
%V 3
%N 1
%D Jan 1985
%P 63-88

%L Weze90a
%K pcalc equivalence lotos
%A C.D. Wezeman
%T The CO-OP Method for Compositional Derivation of Canonical Testers
%B Protocol Specification, Testing and Verification, IX
%E E. Brinksma, G. Scollo, C.A. Vissers
%I North Holland
%D 1990
%% presents an algorithm for the construction of the canonical tester
   from a given Basic LOTOS process

%L Whit92a
%K olit-reuse binder
%A Benjamin R. Whittle
%A Mark Ratcliffe
%T The Reuse of Component Interfaces Through Description and Translation
%B Proceedings, International Workshop on Software Reuse
%C Lucca
%D 1992
%O To appear

%L Wieb86a
%K olit-oopl jasmine persistence transactions oopsla86
%A Douglas Wiebe
%T A Distributed Repository for Immutable Persistent Objects
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 453-465

%L Wild92a
%K olit
%A Norman Wilde
%A Ross Huitt
%T Maintenance Support for Object-Oriented Programs
%J IEEE Transactions on Software Engineering
%V SE-18
%N 12
%D Dec 1992
%P 1038-1044

%L Wild93a
%K olit ieee
%A Norman Wilde
%A Paul Matthews
%A Ross Hutt
%T Maintaining Object-Oriented Software
%J IEEE Software (Special Issue on "Making O-O Work")
%V 10
%N 1
%D Jan 1993
%P 75-80

%L Wilk91a
%K olit oopsla91
%A Michael R. Wilk
%T Equate: An Object-Oriented Constraint Solver
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 286-298

%L Will80a
%K misc selit aides cad
%A R.R. Willis
%T AIDES: Computer Aided Design of Software Systems -- II
%B Software Engineering Environments
%E H. H\:unke
%I North-Holland Publishing Co.
%D 1981
%P 27-48

%L Will83a
%K olit-appl lisa smalltalk
%A Geoff Williams
%T The Lisa Computer System
%J Byte
%V 8
%N 2
%D Feb 1983
%P 33-50

%L Will84a
%K olit-appl macintosh
%A Geoff Williams
%T The Apple Macintosh Computer
%J Byte
%V 9
%N 2
%D 1984
%P 30-54

%L Will87a
%K olit ecoop87
%A Ifor Williams
%A Mario Wolczko
%A Trevor Hopkins
%T Dynamic Grouping in an Object-Oriented Virtual Memory Hierarchy
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 79-88

%L Will91a
%K types olit ecoop91
%A Alan Wills
%T Capsules and Types in Fresco
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 59-76

%L Wils89a
%K olit oopsla89
%A Paul R. Wilson
%A Thomas G. Moher
%T Design of the Opportunistic Garbage Collector
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 23-36

%L Wins84a
%K fpl lisp
%A P.H. Winston
%A B.K.P. Horn
%T LISP (second edition)
%I Addison-Wesley
%D 1984

%L Wirf88a
%K olit oopsla88
%A Rebecca Wirfs-Brock
%T An Integrated Color Smalltalk-80 System
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 71-82

%L Wirf88b
%K olit oopsla88
%A Allen Wirfs-Brock
%A Brian Wilkerson
%T An Overview of Modular Smalltalk
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 123-134

%L Wirf89a
%K olit oopsla89
%A Rebecca Wirfs-Brock
%A Brian Wilkerson
%T Object-Oriented Design: A Responsibility-Driven Approach
%J Proceedings OOPSLA '89, ACM SIGPLAN Notices
%V 24
%N 10
%D Oct 1989
%P 71-76

%L Wirf90a
%K olit
%A Rebecca Wirfs-Brock
%A Ralph E. Johnson
%T Surveying Current Research in Object-Oriented Design
%J Communications of the ACM
%V 33
%N 9
%D Sept 1990
%P 104-124

%L Wirt83a
%K olit lang modula
%A Niklaus Wirth
%T Programming in Modula-2
%E D. Gries
%I Springer-Verlag
%C Berlin
%D 1983

%L Wiss90a
%K olit graphics
%A P. Wisskirchen
%T Object-Oriented Graphics
%I Springer-Verlag
%C Heidelberg
%D 1990

%L Wolc87a
%K olit semantics smalltalk ecoop87 obib(gen)
%A Mario Wolczko
%T Semantics of Smalltalk-80
%B Proceedings ECOOP '87
%S LNCS 276
%E J. B\'ezivin, J-M. Hullot, P. Cointe and H. Lieberman
%I Springer Verlag
%C Paris, France
%D June 15-17, 1987
%P 108-120

%L Wolf92a
%K olit-obc concurrency obc91
%A David Wolfram
%A Joseph A. Goguen
%T A Sheaf Semantics for FOOPS Expressions
%B Proceedings of the ECOOP '91 Workshop on Object-Based Concurrent Computing
%E M. Tokoro, O. Nierstrasz, P. Wegner
%S LNCS 612
%I Springer-Verlag
%D 1992
%P 81-98

%L Woli91a
%K olit ecoop91
%A Francis Wolinski
%A Jean-Franc\,ois Perrot
%T Representation of Complex Objects: Multiple Facets with Part-Whole
   Hierarchies
%B Proceedings ECOOP '91
%E P. America
%S LNCS 512
%I Springer-Verlag
%C Geneva, Switzerland
%D July 15-19, 1991
%P 288-306

%L Woo85b
%K olit ois
%A Carson Woo
%A Frederick H. Lochovsky
%T An Object-Based Approach to Modelling Office Work
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 14-22

%L Woo86a
%K olit ois
%A Carson Woo
%A Frederick H. Lochovsky
%T Supporting Distributed Office Problem Solving in Organizations
%J ACM TOOIS
%V 4
%N 3
%D July 1986
%P 185-204

%L Wu84a
%K security os
%A M. Wu
%A T. Hwang
%T Access Control with Single-Key-Lock
%J IEEE Transactions on Software Engineering
%V SE-10
%N 3
%D March 1984
%P 185-191

%L Wulf74a
%K security olit hydra capabilities
%A W. Wulf
%A E. Cohen
%A W. Corwin
%A A. Jones
%A R. Levin
%A C. Pierson
%A F. Pollack
%T HYDRA: The Kernel of a Multiprocessor Operating System
%J CACM
%V 17
%N 6
%D June 1974
%P 337-345

%L Wyat92a
%K olit-obcl
%A Barbara B. Wyatt
%A Krishna Kavi
%A Steve Hufnagel
%T Parallelism in Object-Oriented Language: A Survey
%J IEEE Software
%V 9
%N 6
%D Nov 1992
%P 56-66

%L Yama93a
%K olit ieee
%A Seiichi Yamazaki
%A Kiyohiko Kajihara
%A Mitsutaka Ito
%A Ryuichi Yasuhara
%T Object-Oriented Design of Telecommunication Software
%J IEEE Software (Special Issue on "Making O-O Work")
%V 10
%N 1
%D Jan 1993
%P 81-87

%L Yase91a
%K olit oopsla91
%A Rahim Yaseen
%A Stanley Y.W. Su
%A Herman Lam
%T An Extensible Kernel Object Management System
%J Proceedings OOPSLA '91, ACM SIGPLAN Notices
%V 26
%N 11
%D Nov 1991
%P 247-263

%L Yell89a
%K olit semantics ecoop89
%A Phillip M. Yelland
%T First Steps Towards Fully Abstract Semantics for Object-Oriented Languages
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 347-364

%L Yell92a
%K olit oopsla92
%A Phillip M. Yelland
%T Experimental Classification Facilities for Smalltalk
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 235-246

%L Yoko86a
%K olit-obcl concurrentsmalltalk oopsla86
%A Yasuhiko Yokote
%A Mario Tokoro
%T The Design and Implementation of ConcurrentSmalltalk
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 331-340

%L Yoko87a
%K olit-obcl concurrentsmalltalk obib(obcp)
%A Yasuhiko Yokote
%A Mario Tokoro
%T Concurrent Programming in ConcurrentSmalltalk
%B Object-Oriented Concurrent Programming
%E A. Yonezawa, M. Tokoro
%I MIT Press
%C Cambridge, Massachusetts
%D 1987
%P 129-158

%L Yoko87b
%K olit-obcl concurrentsmalltalk obib(obcp) oopsla87
%A Yasuhiko Yokote
%A Mario Tokoro
%T Experience and Evolution of ConcurrentSmalltalk
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 406-415

%L Yoko89a
%K olit-oopl muse reflection ecoop89
%A Yasuhiko Yokote
%A Fumio Teraoka
%A Mario Tokoro
%T A Reflective Architecture for an Object-Oriented
   Distributed Operating System
%B Proceedings ECOOP '89
%E S. Cook
%C Nottingham
%I Cambridge University Press
%D July 10-14, 1989
%P 89-106

%L Yoko92a
%K olit oopsla92
%A Yasuhiko Yokote
%T The Apertos Reflective Operating System: The Concept and its Implementation
%J Proceedings OOPSLA '92, ACM SIGPLAN Notices
%V 27
%N 10
%D Oct 1992
%P 414-434

%L Yone86a
%K olit-obcl abcl1 lisp oopsla86 obib(obcp)
%A Akinori Yonezawa
%A Jean-Pierre Briot
%A Etsuya Shibayama
%T Object-Oriented Concurrent Programming in ABCL/1
%J Proceedings OOPSLA '86, ACM SIGPLAN Notices
%V 21
%N 11
%D Nov 1986
%P 258-268

%L Yone87a
%K olit-obc obib(obcp)
%A Akinori Yonezawa
%A Mario Tokoro
%T Object-Oriented Concurrent Programming
%I MIT Press
%C Cambridge, Massachusetts
%D 1987

%L Yone87b
%K olit-obcl abcl
%A Akinori Yonezawa
%A Etsuya Shibayama
%A T. Takada
%A Yasuaki Honda
%T Modelling and Programming in an Object-Oriented Concurrent Language ABCL/1
%B Object-Oriented Concurrent Programming
%E A. Yonezawa, M. Tokoro
%I MIT Press
%C Cambridge, Massachusetts
%D 1987
%P 55-89

%L Yosh88a
%K olit oopsla88
%A Nobuko Yoshida
%A Kouji Hino
%T An Object-Oriented Framework of Pattern Recognition Systems
%J Proceedings OOPSLA '88, ACM SIGPLAN Notices
%V 23
%N 11
%D Nov 1988
%P 259-266

%L Yosh90a
%K olit-obcl a'um binder(shelf)
%A Kaoru Yoshida
%T A'UM -- A Stream-Based Concurrent Object-Oriented Programming Language
%R Ph.D. thesis
%I Keio University
%D March 1990

%L Youn87a
%K olit oopsla87
%A Robert L. Young
%T An Object-Oriented Framework for Interactive Data Graphics
%J Proceedings OOPSLA '87, ACM SIGPLAN Notices
%V 22
%N 12
%D Dec 1987
%P 78-90

%L Zdon84a
%K olit-oodb ois
%A Stanley Zdonik
%T Object Management System Concepts
%B Proceedings of the Second ACM SIGOA Conference
%D 1984
%P 13-19

%L Zdon85a
%K olit-oopl encore
%A Stanley Zdonik
%T Object Management Systems for Design Environments
%J IEEE Database Engineering
%V 8
%N 4
%D Dec 1985
%P 23-30

%L Zdon86a
%K olit-oodb versions
%A Stanley B. Zdonik
%T Version Management in an Object-Oriented Database
%J IFIP WG2.4 International Workshop on
   Advanced Programming Environments
%C Trondheim, Norway
%D June 16-18, 1986

%L Zdon86b
%K olit-oodb versions oopws86 obib(oodb)
%A Stanley B. Zdonik
%T Maintaining Consistency in a Database with Changing Types
%J ACM SIGPLAN Notices
%V 21
%N 10
%D Oct 1986
%P 120-127

%L Zimm84a
%K olit-obc messages chorus actors binder (shelf)
%A H. Zimmermann
%A M. Guillemont
%A G. Morisset
%A J. Banino
%T Chorus: A Communication and Processing Architecture
   for Distributed Systems
%I INRIA
%C Rocquencourt
%R Research report no. 328
%D Sept 1984

%L Zloo77a
%K oislit qbe forms
%A M.M. Zloof
%T Query-by-Example: A Database Language
%J IBM System Journal
%V 16
%N 4
%D 1977
%P 324-343

%L Zloo80a
%K oislit sba
%A M.M. Zloof
%T A Language for Office and Business Automation
%J AFIPS Office Automation Conference Digest
%C Atlanta, USA
%D March 1980

%L Zloo81a
%K oislit qbe sba
%A M.M. Zloof
%T QBE/OBE: A Language for Office and Business Automation
%J IEEE Computer 14
%D May 1981
%P 13-22

%L Zloo82a
%K oislit sba mail
%A M.M. Zloof
%T Office-by-Example: A Business Language that Unifies
   Data and Word Processing and Electronic Mail
%J IBM System Journal
%V 21
%N 3
%D 1982
%P 272-304

%L Zwie89a
%K concurrency tnp
%A J. Zwiers
%T Compositionality, Concurrency and Partial Correctness
%S LNCS 321
%E G. Goos and J. Hartmanis
%I Springer-Verlag
%D 1989

