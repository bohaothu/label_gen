%T Applying Decision Requirements to User-Centered Design
%A Gary Klein
%A George L. Kaempf
%A Steve Wolf
%A Marvin Thorsden
%A Thomas Miller
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 1
%P 1-15
%* (c) Copyright 1997 Academic Press
%X The decision requirements of a task are the key decisions and how they are
made.  Most task analysis methods address the steps that have to be followed;
decision requirements offer a complementary picture of the critical and
difficult judgments and decisions needed to carry out the task.  This article
describes the use of Cognitive Task Analysis methods to identify decision
requirements, as part of a project to improve the decision making of AEGIS
cruiser officers in high-stress situations.  We found that by identifying these
requirements, and centering the system design process on them, we could develop
storyboards for a human-computer interface that reflected the user's needs.

%T Automation-Induced Monitoring Inefficiency: Role of Display
location
%A Indramani L. Singh
%A Robert Molloy
%A Raja Parasuraman
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 1
%P 17-30
%* (c) Copyright 1997 Academic Press
%X Operators can be poor monitors of automation if they are engaged
concurrently in other tasks.  However, in previous studies of this phenomenon
the automated task was always presented in the periphery, away from the primary
manual tasks that were centrally displayed.  In this study we examined whether
centrally locating an automated task would boost monitoring performance during
a flight-simulation task consisting of system monitoring, tracking and fuel
resource management sub-tasks.  Twelve nonpilot subjects were required to
perform the tracking and fuel management tasks manually while watching the
automated system monitoring task for occasional failures.  The automation
reliability was constant at 87.5% for six subjects and variable (alternating
between 87.5% and 56.25%) for the other six subjects.  Each subject completed
four 30 min sessions over a period of 2 days.  In each automation reliability
condition the automation routine was disabled for the last 20 min of the fourth
session in order to simulate catastrophic automation failure (0% reliability).
Monitoring for automation failure was inefficient when automation reliability
was constant but not when it varied over time, replicating previous results. 
Furthermore, there was no evidence of resource or speed accuracy trade-off
between tasks.  Thus, automation-induced failures of monitoring cannot be
prevented by centrally locating the automated task.

%T Using Information Systems While Performing Complex Tasks: An
Example from Architectural Design
%A Erica de Vries
%A Ton de Jong
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 1
%P 31-54
%* (c) Copyright 1997 Academic Press
%X Nowadays, information systems, such as hypertexts, allow a variety of ways
in which to structure information.  Information systems are also used for an
increasing number of purposes.  In our study we examined two different purposes
for using information systems in the context of a real task: architectural
design.  In design processes, information gathering plays a different role
depending on design phase, and both exploration and finding information are
important sub-processes.  A study is presented in which the main goal was to
determine whether there are advantages of certain information structures when
carrying out a particular activity.  Both tasks and variables used in the
experiment were related to characteristics of the design process as identified
in the literature.  Two different kinds of information gathering behaviour,
browsing and searching were studied, and criterion tests corresponded to the
desired outcome in the design context, i.e. enlargement of the users'
information span for browsing and their knowledge of specific topics for
searching.  Results showed a number of interactions between information
structure and information gathering task depending on the particular criterion
test examined.  Inspection of each purpose on its own criterion test revealed
the merits of network structures for browsing, but also for searching.  These
results parallel the recommendations emanating from design disciplines to
provide information structures for design that do not impose a hierarchical
structure, but that show the complexity of design information.  Recommendations
for hypertext research include the study of navigational characteristics in
combination with tasks and variables that are meaningful in a specific context.

%T Automated Acquisition of User Preferences
%A L. Karl Branting
%A Patrick S. Broos
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 1
%P 55-77
%* (c) Copyright 1997 Academic Press
%X Decision support systems often require knowledge of users' preferences. 
However, preferences may vary among individual users or be difficult for users
to articulate.  This paper describes how user preferences can be acquired in
the form of preference predicates by a learning apprentice system and proposes
two new instance-based algorithms for preference predicate acquisition: 1ARC
and Compositional Instance-Based Learning (CIBL).  An empirical evaluation
using simulated preference behavior indicated that the instance-based
approaches are preferable to decision-tree induction and perceptrons as the
learning component of a learning apprentice system, if representation of the
relevant characteristics of problem-solving states, requires a large number of
attributes, if attributes interact in a complex fashion, or if there are very
few training instances.  Conversely, decision-tree induction or perceptron
learning is preferable if there are a small number of attributes and the
attributes do not interact in a complex fashion unless there are very few
training instances.  When tested as the learning component of a learning
apprentice system used by astronomers for scheduling astronomical observations,
both CIBL and decision-tree induction rapidly achieved useful levels of
accuracy in predicting the astronomers' preferences.

%T The Dynamics of Work Organization, Knowledge and Technology
During Software Development
%A P. E. Waterson
%A C. W. Clegg
%A C. M. Axtell
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 1
%P 79-101
%* (c) Copyright 1997 Academic Press
%X In this paper we report findings from a study of the impact of cognitive and
organizational factors upon the work of a software development project within a
commercial context.  We chose to study the relationship between the way in
which project work is organized; the distribution of knowledge amongst project
members; their use of programming tools; and the major problems that occurred
during the development of a large scale computer program.  Our findings point
to a dynamic interplay between these factors which partly reflects the
importance of expertise and knowledge within the project as well as evidence of
opportunistic and emergent forms of work organization, communication and
collaboration.  Our study demonstrates the importance of recognizing the
influence that managerial interventions and the use of new technology can have
upon the conduct of software development, as well as the difficulties such
changes may bring about when they disrupt organizational and cognitive
processes such as "mutual adjustment" and "knowledge sharing".  We conclude the
paper by describing a series of implications and recommendations.  These cover
issues related to the "knowledge intensive" nature of software development; the
influence of new technology upon project work; as well as recommendations
regarding the management of software projects and the software process.

%T Browsing Hierarchical Data with Multi-Level Dynamic Queries
and Pruning
%A Harsha P. Kumar
%A Catherine Plaisant
%A Ben Shneiderman
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 1
%P 103-124
%* (c) Copyright 1997 Academic Press
%X Users often must browse hierarchies with thousands of nodes in search of
those that best match their information needs.  The PDQ Tree-browser (Pruning
with Dynamic Queries) visualization tool was specified, designed and developed
for this purpose.  This tool presents trees in two tightly-coupled views, one a
detailed view and the other an overview.  Users can use dynamic queries, a
method for rapidly filtering data, to filter nodes at each level of the tree. 
The dynamic query panels are user-customizable.  Sub-trees of unselected nodes
are pruned out, leading to compact views of relevant nodes.  Usability testing
of the PDQ Tree-browser, done with eight subjects, helped assess strengths and
identify possible improvements.  The PDQ Tree-browser was used in Network
Management (600 nodes) and UniversityFinder (1100 nodes) applications.  A
controlled experiment, with 24 subjects, showed that pruning significantly
improved performance speed and subjective user satisfaction.  Future research
directions are suggested.

%T Abstraction in Conceptual Model Design
%A Diana Kao
%A Norman P. Archer
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 1
%P 125-150
%* (c) Copyright 1997 Academic Press
%X Understanding and supporting conceptual model design is an important issue
in Model Management System (MMS) research.  While there are a broad range of
aspects which affect conceptual design, this study focuses on the use and the
support of abstraction in the design process.  We classify the use of
abstraction in design into three categories: vertical, horizontal and general
abstraction techniques.  We then propose a theoretical framework which suggests
the completeness of the design, the development of higher level concepts in
design, and the design organization as the three dimensions of design output
that can be enhanced by effective use of these abstraction techniques.  The
proposed framework was empirically tested on a design problem using non-domain
experts, with a software prototype that provided abstraction aids.  The
findings indicated significant effects of abstraction aids on the three
dimensions of design output.  Specifically, training exercises with
comprehensive examples of various design strategies significantly improved both
the number of high level ideas generated and the design organization compared
to unaided designs.  The completeness of designs was enhanced by both the
design environment structure and the examples and analogies provided during
training.  The implications of this study are: (a) it is possible to measure
the impact of abstraction support on the conceptual design process, (b) the
proposed measures can be used in the development and evaluation of design
support systems, and (c) abstraction support can significantly improve the
quality of design by non-domain experts.

%T Abstract Models for HCI
%A Andrew M. Dearden
%A Michael D. Harrison
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 1
%P 151-177
%* (c) Copyright 1997 Academic Press
%X This paper investigates the use of formal mathematical models in the design
of interactive systems and argues for the development of generic models that
describe the behaviour of a class of interactive systems.
   In recent years a number of authors have suggested methods for modelling
interactive systems using notations and frameworks drawn from software
engineering mathematics.  We argue that these models tend to be either: so
abstract as to limit their ability to express important interaction concerns
for specific systems, and limited in the degree to which they support the
construction of software that conforms to the designer 's intention; or so
specific to an individual system that they provide only limited re-use across
development projects and are therefore likely to be too expensive to develop
except in a few special applications such as safety-critical systems.
   We argue that it is possible to construct a generic model of a class of
interactive systems at an intermediate level of abstraction.  Such a model
would offer wider reusability than detailed specifications of a single system,
but greater expressiveness and support for software development than fully
general abstract models.
   To support our argument we review a number of existing models in the
literature and present a generic model of interactive case memories, a class of
systems used in case-based reasoning.

%T Bulletin
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 1
%P 179-180
%* (c) Copyright 1997 Academic Press

%T Editorial: Using Explicit Ontologies in Knowledge-Based System
Development
%A Brian Gaines
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 2/3
%P 181
%* (c) Copyright 1997 Academic Press

%T Using Explicit Ontologies in KBS Development
%A G. van Heijst
%A A. Th. Schreiber
%A B. J. Wielinga
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 2/3
%P 183-292
%* (c) Copyright 1997 Academic Press
%X This article presents a number of ways in which ontologies -- schematic
descriptions of the contents of domain knowledge -- can be constructed and can
be used to improve the knowledge engineering process.  The main message is that
early in the knowledge engineering process an application-specific ontology
should be constructed.  To facilitate this, the article presents some
principles for organizing a library of reusable ontological theories which can
be configured into an application ontology.  This application ontology is then
exploited to organize the knowledge acquisition process and to support
computational design.  The process is illustrated with a knowledge engineering
scenario in the domain of treating acute radiation syndrome.

%T Understanding, Building and Using Ontologies
%A Nicola Guarino
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 2/3
%P 293-310
%* (c) Copyright 1997 Academic Press
%X I defend here the thesis of the independence between domain knowledge and
problem-solving knowledge, arguing against the dominance of the so-called
"interaction problem" mentioned in a recent paper by Van Heijst, Schreiber and
Wielinga to dispute the feasibility of a single domain ontology shared by a
number of different applications.  The main point is that reusability across
multiple tasks or methods can and should be systematically pursued even when
modelling knowledge related to a single task or method.  Under this view, I
discuss how the principles of formal ontology and ontological engineering can
be used in the practice of knowledge engineering, focusing in particular on the
interplay between general ontologies, method ontologies and application
ontologies, and on the role of ontologies in the knowledge engineering process.
I will then stress the role of domain analysis, often absent in current
methodologies for the development of knowledge-based systems.

%T Roles are Not Classes: A Reply to Nicola Guarino
%A G. van Heijst
%A A. Th. Schreiber
%A B. J. Wielinga
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 2/3
%P 311-318
%* (c) Copyright 1997 Academic Press
%X In this paper we reply to Nicola Guarino's comments on our article entitled
"Using explicit ontologies in knowledge acquisition".  We concentrate on the
issues raised by Guarino: (i) the existence of the interaction problem at the
knowledge level, (ii) the nature of ontologies, and (iii) the utility of method
ontologies.  In our reply we attempt to distinguish between (mutual)
misunderstandings, alternative viewpoints and true differences of opinion.

%T Trading Cost of Reuse in KBS Development using Explicit
Ontologies
%A Masahiro Hori
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 2/3
%P 319-325
%* (c) Copyright 1997 Academic Press
%X Since the design and reuse of ontologies are knowledge-intensive and
time-consuming processes, it is important to make deliberate design decisions
in order to obtain the benefits of reuse at a moderate cost in exchange for
some acceptable loss in applicability and flexibility.  This article raises
issues related to the evolution of knowledge libraries, on the basis of our
experiences in enabling the reuse in developing scheduling expert systems. 
First, the knowledge-modelling process is briefly reviewed, and the design
decision on limiting the scope of reuse is discussed.  The evolution of a
component library is then investigated, showing the ratio of reuse in the
development of a real scheduling system.  Finally, the article emphasizes the
significance of sharing the empirical results from both controlled and real
experimentation.

%T Impediments in the Use of Explicit Ontologies for KBS
Development
%A Daniel E. O'Leary
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 2/3
%P 327-337
%* (c) Copyright 1997 Academic Press
%X This paper explores some of the impediments in the development of libraries
of reusable ontologies.  First, ontologies generated in multiple agent
environments derive from political processes.  As a result, it is impossible to
choose an ontology that maximizes the utility of all agents in the process and
the group.  An "ontology impossibility theorem" is formulated and discussed. 
Second, ontologies are not necessarily stationary over relevant time periods,
providing an impediment to librarying ontologies.  Third, scaling up ontologies
is a difficult matter.  Fourth, since each ontology is the result of a
political process, it is difficult to interface multiple ontologies.

%T Using Explicit Ontologies to Create Problem Solving Methods
%A Chantal Reynaud
%A Francoise Tort
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 2/3
%P 339-364
%* (c) Copyright 1997 Academic Press
%X This article describes a tool called ASTREE, based on an ontology-driven
approach.  ASTREE has been designed to automate the construction of an
application-specific model of problem-solving behaviour in cases where skeletal
models cannot be reused.  In ASTREE, the construction of a problem-solving
model is an identification of methods capable of achieving user-specified
tasks.  The identification process is based on matching elements specified in
the task to be achieved and elements in a set of domain knowledge delivered by
an expert.  This domain knowledge is called the expertise ontology because it
expresses conceptualizations of domain knowledge delivered by an expert during
the knowledge elicitation phase.  It is argued in this article that a
well-defined expertise ontology provides strong constraints for the knowledge
engineering process, and in particular, for the creation of a model of
problem-solving behaviour.
   This article presents the syntax and the semantics of the language of the
expertise ontology, an extension of the Entity/Relationship Model.  It then
focuses on the main techniques that ASTREE uses in the identification process.
An example of room assignment has been chosen to illustrate ASTREE's various
techniques.  A scenario leading to the construction of a task-method structure
is presented at the end of the article.

%T Engineering Ontologies
%A Pim Borst
%A Hans Akkermans
%A Jan Top
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 2/3
%P 365-406
%* (c) Copyright 1997 Academic Press
%X We analyse the construction as well as the role of ontologies in knowledge
sharing and reuse for complex industrial applications.  In this article, the
practical use of ontologies in large-scale applications not restricted to
knowledge-based systems is demonstrated, for the domain of engineering systems
modelling, simulation and design.  A general and formal ontology, called
PHYSSYS, for dynamic physical systems is presented and its structuring
principles are discussed.  We show how the PHYSSYS ontology provides the
foundation for the conceptual database schema of a library of reusable
engineering model components, covering a variety of disciplines such as
mechatronics and thermodynamics, and we describe a full-scale numerical
simulation experiment on this basis pertaining to an existing large hospital
heating installation.  From the application scenario, several general
guidelines and experiences emerge.  It is possible to identify various
viewpoints that are seen as natural within a large domain: broad and stable
conceptual distinctions that give rise to a categorization of concepts and
properties.  This provides a first mechanism to break up ontologies into
smaller pieces with strong internal coherence but relatively loose coupling,
thus reducing ontological commitments.  Secondly, we show how general and
abstract ontological super theories, for example mereology, topology, graph
theory and systems theory, can be used and reused as generic building blocks in
ontology construction.  We believe that this is an important element in
knowledge sharing across domains.  Thirdly, we introduce ontology projections
as a flexible means to connect different base ontologies.  Ontology projections
can occur in simple forms such as include-and-extent and
include-and-specialize, but are in their richest form very knowledge-intensive,
being in fact themselves full-blown ontological theories.

%T Bulletin
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 2/3
%P 407-408
%* (c) Copyright 1997 Academic Press

%T Content-Based Visualization for Intelligent Problem-Solving
Environments
%A Jeff Yost
%A Andrew F. Varecka
%A Michael M. Marefat
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 4
%P 409-441
%* (c) Copyright 1997 Academic Press
%X Mechanisms are proposed to allow visualization to become an active agent in
the problem-solving environment.  Two main problems are addressed: dealing with
too much data and allowing simulation steering.  The agent solves these
problems by extracting semantically interesting data for spatial and temporal
understanding, enabling a dynamic and flexible behavior for
simulation-integrated control, and intelligently creating visualizations that
intuitively display the selected data.  A significant event language is
proposed to capture the semantically interesting data through event expressions
which can then be parsed and monitored.  Behavior is achieved through
programmable, hierarchical finite-state machines with events mapped to the arcs
and interactions with the visualization and simulation mapped to the nodes.  A
knowledge-based data mapping process has been designed which uses visual
perceptual knowledge and problem-specific knowledge represented in cognitive
maps to create visualizations.  This architecture has been applied within a
watershed simulation application and a prototype has been developed.

%T The Poverty of Media Richness Theory: Explaining People's
Choice of Electronic Mail vs. Voice Mail
%A Maha El-Shinnawy
%A M. Lynne Markus
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 4
%P 443-467
%* (c) Copyright 1997 Academic Press
%X How and why people choose which communication medium to use is an important
issue for both behavioral researchers and software product developers.  Little
is yet known about how and why people in organizations choose among new media
like electronic mail and voice mail, although the availability and use of new
media are increasing dramatically.  Media richness theory (MRT) is the most
prominent, if contested, theory of media choice.  It is concerned with
identifying the most appropriate medium in terms of "medium richness" for
communication situations characterized by equivocality and uncertainty.  From
this theory, we derived hypotheses about how and why individuals will choose
between electronic mail and voice mail and tested them among users of both
media in the corporate headquarters of a large company.  The data are analysed
using both quantitative and qualitative techniques.  The results fail to
support MRT, but they do support alternative explanations of people's media
choice behavior.  While the concept of media richness is too poor to explain
the richness of people's media use behavior, our behavioral findings and
explanations should prove useful to those building the next generation of
integrated multimedia communication tools.

%T Activities and Communication Modes
%A Antonios Michailidis
%A Roy Rada
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 4
%P 469-483
%* (c) Copyright 1997 Academic Press
%X To what extent is collaborative writing constrained by the communication
modes used?  We have surveyed 10 collaborative authors' perceptions on the
effectiveness of five communication modes: email, face-to-face, fax, post and
telephone.  Through a repeated measures design, a mapping between these modes
and the activities of commitment management, decision-making, awareness,
communication, transparency and perceptions was determined.  No tool-supported
mode is as effective as face-to-face but each mode serves a function in
supporting coordination.

%T Delegating to Software Agents
%A Allen E. Milewski
%A Steven H. Lewis
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 4
%P 485-500
%* (c) Copyright 1997 Academic Press
%X There is currently a great deal of interest in the development of
intelligent agents.  While there is little agreement on exactly what
constitutes an intelligent agent, many definitions embody a user-interface
model that differs from the traditional one where users perform tasks with the
help of computer-based "tools".  In contrast, the "delegation" model associated
with agents is based on entrusting tasks to an autonomous, sometimes
anthropomorphized system, whose performance is monitored and evaluated.  This
change in user-interface model is a dramatic one since delegation can be a
difficult and often-avoided behavior in humans.  Agent-interface designs need
to overcome well-established drawbacks in delegation.  For this purpose,
designers should find the management sciences and organizational psychology
literatures to be as relevant as that of traditional human factors.  This paper
describes issues regarding task delegation as they pertain to the design of
intelligent-agent-user interfaces.

%T Human-Computer Interaction: Psychology as a Science of
Design
%A John M. Carroll
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 4
%P 501-522
%* (c) Copyright 1997 Academic Press
%X Human-computer interaction (HCI) is the area of intersection between
psychology and the social sciences, on the one hand, and computer science and
technology, on the other.  HCI researchers analyse and design-specific
user-interface technologies (e.g. three-dimensional pointing devices,
interactive video).  They study and improve the processes of technology
development (e.g. usability evaluation, design rationale).  They develop and
evaluate new applications of technology (e.g. computer conferencing, software
design environments).  Through the past two decades, HCI has progressively
integrated its scientific concerns with the engineering goal of improving the
usability of computer systems and applications, thus establishing a body of
technical knowledge and methodology.  HCI continues to provide a challenging
test domain for applying and developing psychology and social science in the
context of technology development and use.

%T Using Meta-Knowledge within a Multilevel Framework for KBS
Development
%A Robert T. Plant
%A Rose Gamble
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 4
%P 523-547
%* (c) Copyright 1997 Academic Press
%X This paper describes a multilevel development life cycle of representation
refinement for knowledge-based systems that incorporates meta-knowledge at each
level.  The methodology uses formal techniques in the specification of the
domain knowledge, the cognitive aspects and the representation.  The
methodology provides the knowledge engineer with a dynamic perspective of the
system which can be used in conjunction with the static aspects found in the
representation abstractions.  To provide perspective, the paper details the
refinement of one of the levels called the intermediate level, in which an
implementation-independent representation is created by the use of a knowledge
filter.

%T Bulletin
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 4
%P 549-550
%* (c) Copyright 1997 Academic Press

%T Silicon Sycophants: The Effects of Computers that Flatter
%A B. J. Fogg
%A Clifford Nass
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 5
%P 551-561
%* (c) Copyright 1997 Academic Press
%X A laboratory experiment examines the claims that (1) humans are susceptible
to flattery from computers and (2) the effects of flattery from computers are
the same as the effects of flattery from humans.  In a cooperative task with a
computer, subjects (N=41) received one of three types of feedback from a
computer: "sincere praise", "flattery" (insincere praise) or "generic
feedback".  Compared to generic-feedback subjects, flattery subjects reported
more positive affect, better performance, more positive evaluations of the
interaction and more positive regard for the computer, even though subjects
knew that the flattery from the computer was simply noncontingent feedback. 
Subjects in the sincere praise condition responded similarly to those in the
flattery condition.  The study concludes that the effects of flattery from a
computer can produce the same general effects as flattery from humans, as
described in the psychology literature.  These findings may suggest significant
implications for the design of interactive technologies.

%T The Influence of Interaction Style and Experience on User
Perceptions of Software Packages
%A Susan Wiedenbeck
%A Sid Davis
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 5
%P 563-588
%* (c) Copyright 1997 Academic Press
%X In recent years, a body of literature has developed which shows that users'
perceptions of software are a key element in its ultimate acceptance and use. 
We focus on how the interaction style and prior experience with similar
software affect users' perceptions of software packages.  In our experiment,
direct manipulation, menu-driven and command-driven interfaces were
investigated.  We studied users' perceptions of the software in two hands-on
training sessions.  In the first session, novice users were given initial
training with word-processing software, and in the second session the users
were trained on a word processor which was functionally equivalent to the prior
one, but had a different interaction style.  In the initial training session,
we found that the interaction style had a reliable but small effect on
learners' perceptions of ease of use.  The direct manipulation interface was
judged easier to use than the command style.  The interaction style, however,
did not affect learners' perceptions of the usefulness of the software.  In the
second training session, subjects who had used a direct manipulation interface
in the first session learned either the menu-based or command-based software. 
The perceptions of these users were compared to those of learners, who had used
the menu or command software in the initial training session.  We found that
both interaction style and the prior experience with a direct manipulation
interface affected perceptions of ease of use.  Subjects with prior experience
of a direct style interface tended to have very negative attitudes toward a
less direct interface style.  The interaction style did not affect perceptions
of usefulness of the package, but the prior experience did.  These results
suggest that users' attitudes toward software are strongly influenced by their
past history of usage, including what interaction styles the user has
encountered, and this should be considered in the design of software and
training programs.

%T Statistical Evaluation of Rough Set Dependency Analysis
%A Ivo Duntsch
%A Gunther Gediga
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 5
%P 589-604
%* (c) Copyright 1997 Academic Press
%X Rough set data analysis (RSDA) has recently become a frequently studied
symbolic method in data mining.  Among other things, it is being used for the
extraction of rules from databases; it is, however, not clear from within the
methods of rough set analysis, whether the extracted rules are valid.
   In this paper, we suggest to enhance RSDA by two simple statistical
procedures, both based on randomization techniques, to evaluate the validity of
prediction based on the approximation quality of attributes of rough set
dependency analysis.  The first procedure tests the casualness of a prediction
to ensure that the prediction is not based on only a few (casual) observations.
The second procedure tests the conditional casualness of an attribute within a
prediction rule.
   The procedures are applied to three data sets, originally published in the
context of rough set analysis.  We argue that several claims of these analyses
need to be modified because of lacking validity, and that other possibly
significant results were overlooked.

%T Active Distributed Framework for Adaptive Hypermedia
%A Antonina Dattolo
%A Vincenzo Loia
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 5
%P 605-626
%* (c) Copyright 1997 Academic Press
%X Navigation through large hypermedia information spaces is complex and is an
important application area for adaptive hypermedia systems.  User navigation
can be best supported when the design of the hypermedia system is embedded in
an evolutionary process model that takes into account the decentralization of
data sources and the variety of users.  The paper deals with distributed
frameworks for open hypermedia systems; it focuses on the design work done to
make adaptive an existing actor-based architecture for hypermedia.  The
approach follows the initial design approach used in the definition of the
hypermedia platform, i.e. the actor-based computational model.  We present in
detail the new actor classes and the cooperative schemes which allow adaptation
within the resulting architecture.

%T Applying a Library of Problem-Solving Methods on a Real-Life
Task
%A Piet-Hein Speel
%A Manfred Aben
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 5
%P 627-652
%* (c) Copyright 1997 Academic Press
%X This paper describes the application of a library of problem-solving methods
(PSMs) for model-based diagnosis (Benjamins, 1993) on a real-life task.  PSMs
have been proposed as a comprehensive and feasible approach to the construction
of conceptual models for knowledge-based systems (KBSs).  A number of
evaluations of this approach have been reported in the literature.  Most of
these evaluations have involved toy problems or reverse engineering of existing
KBSs.  In this paper we have applied Benjamins' library to a real-life task.
   In this paper, we discuss how we have applied the PSMs during conceptual
knowledge modelling, and how we had to adapt them to suit our task.  We have
found that the library of PSMs was extremely helpful in our project.  Thanks to
this reuse, the complete scope and quality of the "prime diagnostic method" was
incorporated in our application, ambiguities in the task and domain were
brought to light and the functional specifications of the target system were
structured transparently.  Since the reuse of library components in our
real-life application was not trivial, we emphasize on the need for guidelines
that support knowledge engineers to apply libraries of PSMs during the
development of real-life KBSs.

%T Integrating User and Computer System Concerns in the Design
of Interactive Systems
%A Ann E. Blandford
%A David J. Duke
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 5
%P 653-679
%* (c) Copyright 1997 Academic Press
%X In any design process, there are different perspectives that need to be
accommodated.  For the design of interactive systems, two of these are that of
the computer system designer and that of the end user.  The focus of this paper
is on tools or notations to support the integration of these different
perspectives -- in particular, system modelling and theory-based user
modelling.  There are few established techniques for doing such integration;
those that there are generally involve a loose coupling between the description
of the system and that of the user, or are skewed towards one or other of these
viewpoints.  Recently, techniques that deal with the system and user more
symmetrically have emerged.  We focus, in particular, on techniques that have
been developed and investigated within a large European project, Amodeus. 
These allow the analyst to explore properties of the conjoint system, and to
investigate how the properties of the interaction relate to those of the
individual agents.  However, there is a trade-off, which can be characterized
as increased power to critique a design being offset against reduced generality
in the design perspectives that can be considered using the technique.  We
argue that while such techniques require a high initial investment,
technological advances make the need for such integrated approaches urgent.  We
consider what resources each class of technique demands and what kinds of
results each yields.

%T Bulletin
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 5
%P 681-683
%* (c) Copyright 1997 Academic Press

%T Editorial
%A Brian Gaines
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 685-686
%* (c) Copyright 1997 Academic Press

%T Model-Based Virtual Document Generation
%A Thomas R. Gruber
%A Sunil Vemuri
%A James Rice
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 687-706
%* (c) Copyright 1997 Academic Press
%X Virtual documents are hypermedia documents that are generated on demand in
response to reader input.  This paper describes a virtual document application
that generates natural language explanations about the structure and behavior
of electromechanical systems.  The application, called DME, structures the
interaction with the reader as a question-answer dialog.  Each page of the
hyperdocument is the answer to a question, and each link on each page is a
follow-up question that leads to another answer.  DME is a model-based virtual
document generator; unlike conventional database front-ends that provide views
onto data, DME dynamically constructs the document's content (i.e. coherent
explanations in English) from underlying mathematical and symbolic models. 
DME-based virtual documents have been running on the WWW since late 1993.  They
are used to document engineered systems in support of collaborative design and
simulation-based training.
   In this paper we describe and demonstrate the DME application (with examples
that run), and describe how it generates virtual documents on the web.  We
discuss the impact that model-based virtual documentation can have on the way
technical documentation is authored and delivered.

%T The Ontolingua Server: A Tool for Collaborative Ontology
Construction
%A Adam Farquhar
%A Richard Fikes
%A James Rice
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 707-727
%* (c) Copyright 1997 Academic Press
%X Reusable ontologies are becoming increasingly important for tasks such as
information integration, knowledge-level interoperation and knowledge-base
development.  We have developed a set of tools and services to support the
process of achieving consensus on commonly shared ontologies by geographically
distributed groups.  These tools make use of the World Wide Web to enable wide
access and provide users with the ability to publish, browse, create and edit
ontologies stored on an ontology server.  Users can quickly assemble a new
ontology from a library of modules.  We discuss how our system was constructed,
how it exploits existing protocols and browsing tools, and our experience
supporting hundreds of users.  We describe applications using our tools to
achieve consensus on ontologies and to integrate information.
   The Ontolingua Server may be accessed through the URL
http://ontolingua.stanford.edu

%T Knowledge Acquisition, Modelling and Inference Through the
World Wide Web
%A Brian R. Gaines
%A Mildred L. G. Shaw
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 729-759
%* (c) Copyright 1997 Academic Press
%X The development of knowledge-based systems involves the management of a
diversity of knowledge sources, computing resources and system users, often
distributed geographically.  The knowledge acquisition, modelling and
representation communities have developed a wide range of tools relevant to the
development and management of large-scale knowledge-based systems, but the
majority of these tools run on individual workstations and use specialist data
formats making system integration and knowledge interchange very problematic. 
However, widespread access to the Internet has led to a new era of distributed
client-server computing.  In particular, the introduction of support for forms
on World Wide Web in late 1993 has provided an easily programmable,
cross-platform graphic-user interface that has become widely used in innovative
interactive systems.  This article reports on the development of open
architecture knowledge management tools operating through the web to support
knowledge acquisition, representation and inference through semantic networks
and repertory grids.

%T Use of HTML Forms in Complex User Interfaces for Server-Side
Applications
%A Bertrand Ibrahim
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 761-771
%* (c) Copyright 1997 Academic Press
%X It is now commonplace to use forms within HTML documents to have
server-based applications interact with remote users.  However, these forms
are, most of the time, rather simple and only allow a one time interaction
between the user and the application.  Forms are nevertheless very versatile
and can be used to build rather complex user interfaces for server-side
applications that involve multiple interaction loops.  In this paper, we
describe how our students used such forms to remotely control a symbolic
debugger executing algorithms in the on-line version of a book used in their
data structure course.  After describing in detail how the user interface is
built and how the students can interact with it, we focus on the limitations of
this approach and how this interface could be enhanced with the use of more
recent developments such as applets.

%T FixtureNet: Interactive Computer-Aided Design via the World
Wide Web
%A Rick Wagner
%A Giuseppe Castanotto
%A Ken Goldberg
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 773-788
%* (c) Copyright 1997 Academic Press
%X The Internet offers tremendous potential for rapid development of mechanical
products to meet global competition.  In the past several years, a variety of
geometric algorithms have been developed to evaluate computer-aided design
(CAD) models with respect to manufacturing properties such as feedability,
fixturability, assemblability, etc.  Unfortunately, most of these algorithms
are tailored to a particular CAD system and format and so have not been widely
tested by industry.  The World Wide Web may offer a solution: its simple
interface language offers a de facto standard for the exchange of geometric
data with industry and research groups.  In this paper, we describe a
feasibility study for such an interactive system, which can be tested directly
at http://teamster.usc.edu/fixture/

%T ANATAGONOMY: A Personalized Newspaper on the World Wide
Web
%A Tomonari Kamba
%A Hidekazu Sakagami
%A Yoshiyuki Koseki
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 789-803
%* (c) Copyright 1997 Academic Press
%X This paper describes a personalized newspaper on the World Wide Web (WWW),
called ANATAGONOMY.  The main feature of this system is that the newspaper is
personalized without asking the users to specify their preferences explicitly.
The system monitors user operations on the articles and reflects them in the
user profiles.  Differently from conventional newspapers on the WWW, our system
sends an interaction agent implemented as a Java applet to the client side, and
the agent monitors the user operations and creates each user's newspaper pages
automatically.  The server side manages user profiles and anticipates how
interesting an article would be for each user.  The interaction agent on the
client side manages all the user interactions, including the automatic layout
of pages.  Our system has page multiple layout algorithms and the user can
switch from one view to another anytime, according to the preference or machine
environment.  On one of the views, the user can even see all the articles
sequentially without performing any operations.  We evaluated a scheme in which
the user scores each article explicitly, and a scheme in which all the
personalization is done automatically.  The results show that automatic
personalization works well when some parameters are set properly.

%T Supporting Social Navigation on the World Wide Web
%A Andreas Dieberger
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 805-825
%* (c) Copyright 1997 Academic Press
%X This paper discusses a navigation behavior on Internet information services,
in particular the World Wide Web, which is characterized by pointing out
information using various communication tools.  We call this behavior social
navigation as it is based on communication and interaction with other users, be
it through email, or any other means of communication.  Social navigation
phenomena are quite common although most current tools (like web browsers or
email clients) offer very little support for it.  We describe why social
navigation is useful and how it can be supported better in future systems.  We
further describe two prototype systems that, although originally not designed
explicitly as tools for social navigation, provide features that are typical
for social navigation systems.  One of these systems, the Juggler system, is a
combination of a textual virtual environment and a web client.  The other
system is a prototype of a web-hotlist organizer, called Vortex.  We use both
systems to describe fundamental principles of social navigation systems.

%T Basic Support for Cooperative Work on the World Wide Web
%A R. Bentley
%A W. Appelt
%A U. Busbach
%A E. Hinrichs
%A D. Kerr
%A K. Sikkel
%A J. Trevor
%A G. Woetzel
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 827-846
%* (c) Copyright 1997 Academic Press
%X The emergence and widespread adoption of the World Wide Web offers a great
deal of potential in supporting cross-platform cooperative work within widely
dispersed working groups.  The Basic Support for Cooperative Work (BSCW)
project at GMD is attempting to realize this potential through development of
web-based tools which provide cross-platform collaboration services to groups
using existing web technologies.  This paper describes one of these tools, the
BSCW Shared Workspace system -- a centralized cooperative application
integrated with an unmodified web server and accessible from standard web
browsers.  The BSCW system supports cooperation through "shared workspaces";
small repositories in which users can upload documents, hold threaded
discussions and obtain information on the previous activities of other users to
coordinate their own work.  The current version of the system is described in
detail, including design choices resulting from use of the web as a cooperation
platform and feedback from users following the release of a previous version of
BSCW to the public domain.

%T The TCE Corporate Technical Memory: Groupware on the Cheap
%A Mark Leighton Fisher
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 847-860
%* (c) Copyright 1997 Academic Press
%X The Thomson Consumer Electronics Corporate Technical Memory is an electronic
reference document repository used to store locally developed technical
know-how as a set of files that can be browsed as well as searched. 
Implemented as a World Wide Web application, the Corporate Technical Memory is
not constrained to a limited set of accepted file formats or restricted in its
indexing of binary data, due to the use of a web browser as the client software
and the incorporation of "document abstracts" (brief descriptive HTML files
automatically linked to their corresponding binary files), respectively.  The
Corporate Technical Memory attempts to solve the problem of finding and
distributing local technical expertise in a system-independent fashion.

%T Ubiquitous Tele-Embodiment: Applications and Implications
%A Eric Paulos
%A John Canny
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 861-877
%* (c) Copyright 1997 Academic Press
%X In the rush into cyberspace we leave our physical presence and our
real-world environment behind.  The internet, undoubtedly a remarkable modern
communications tool, still does not empower us to enter the office of the
person at the other end of the connection.  We cannot look out of their window,
admire their furniture, talk to their office-mates, tour their laboratory or
walk outside.  We lack the equivalent of a body at the other end with which we
can move around in, communicate through and observe with.  However, by
combining elements of the internet and tele-robotics it is possible to
transparently immerse users into navigable real remote worlds filled with rich
spatial sensorium and to make such systems accessible from any networked
computer in the world, in essence: tele-embodiment.  In this article we
describe the evolution and development of one such inexpensive, simple,
networked tele-operated mobile robot (tele-mobot) designed to provide this
ability.  We also discuss several social implications and philosophical
questions raised by this research.

%T Bulletin
%J International Journal of Human-Computer Studies
%D 1997
%V 46
%N 6
%P 879-882
%* (c) Copyright 1997 Academic Press

