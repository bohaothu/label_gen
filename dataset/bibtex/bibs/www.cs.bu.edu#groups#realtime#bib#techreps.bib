@techreport{MattaBestavros:bucs0008, 
   author={Ibrahim Matta and Azer Bestavros}, 
   title={{QoS Controllers for the Internet}},
   keywords={Network/Internet Architecture},
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-2000-008},
   month={March}, 
   year=2000, 
   url={http://www.cs.bu.edu/techreports/2000-008-QoScontrollers.ps.Z}, 
   abstract={}
}

@techreport{YoonBestavrosMatta:bucs9918, 
   author={Jaehee Yoon and Azer Bestavros and Ibrahim Matta}, 
   title={{SomeCast: A Paradigm for Real-Time Adaptive Reliable Multicast}}, 
   keywords={Network protocols, Real-Time QoS on the Internet},
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1999-018},
   month={December}, 
   year=1999,
   url={http://www.cs.bu.edu/techreports/1999-018-SomeCast.ps.Z},
   abstract={SomeCast is a novel paradigm for the reliable multicast
     of real-time data to a large set of receivers over the
     Internet. SomeCast is receiver-initiated and thus scalable in the
     number of receivers, the diverse characteristics of paths between
     senders and receivers (e.g. maximum bandwidth and
     round-trip-time), and the dynamic conditions of such paths
     (e.g. congestion-induced delays and losses). SomeCast enables
     receivers to dynamically adjust the rate at which they receive
     multicast information to enable the satisfaction of real-time QoS
     constraints (e.g. rate, deadlines, or jitter). This is done by
     enabling a receiver to join SOME number of concurrent multiCAST
     sessions, whereby each session delivers a portion of an encoding
     of the real-time data. By adjusting the number of such sessions
     dynamically, client-specific QoS constraints can be met
     independently. The SomeCast paradigm can be thought of as a
     generalization of the AnyCast (e.g. Dynamic Server Selection) and
     ManyCast (e.g. Digital Fountain) paradigms, which have been
     proposed in the literature to address issues of scalability of
     UniCast and MultiCast environments, respectively.  In this paper
     we overview the SomeCast paradigm, describe an instance of a
     SomeCast protocol, and present simulation results that quantify
     the significant advantages gained from adopting such a protocol
     for the reliable multicast of data to a diverse set of receivers
     subject to real-time QoS constraints.}
}

@techreport{YoonBestavrosMatta:bucs9912, 
   author={Jaehee Yoon and Azer Bestavros and Ibrahim Matta}, 
   title={{Adaptive Reliable Multicast}}, 
   keywords={Network protocols},
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1999-012},
   month={September}, 
   year=1999,
   url={http://www.cs.bu.edu/techreports/1999-012-arm.ps.Z},
   abstract={An increasing number of applications, such as distributed
     interactive simulation, live auctions, distributed games and
     collaborative systems, require the network to provide a reliable
     multicast service.  This service enables one sender to reliably
     transmit data to multiple receivers.  Reliability is
     traditionally achieved by having receivers send negative
     acknowledgments (NACKs) to request from the sender the
     retransmission of lost (or missing) data packets.  However, this
     Automatic Repeat reQuest (ARQ) approach results in the well-known
     NACK implosion problem at the sender.  Many reliable multicast
     protocols have been recently proposed to reduce NACK implosion.
     But, the message overhead due to NACK requests remains
     significant.  Another approach, based on Forward Error Correction
     (FEC), requires the sender to encode additional redundant
     information so that a receiver can independently recover from
     losses.  However, due to the lack of feedback from receivers, it
     is impossible for the sender to determine how much redundancy is
     needed.  In this paper, we propose a new reliable multicast
     protocol, called ARM for Adaptive Reliable Multicast.  Our
     protocol integrates ARQ and FEC techniques.  The objectives of
     ARM are (1) reduce the message overhead due to NACK requests, (2)
     reduce the amount of data transmission, and (3) reduce the time
     it takes for all receivers to receive the data intact (without
     loss).  During data transmission, the sender periodically informs
     the receivers of the number of packets that are yet to be
     transmitted.  Based on this information, each receiver predicts
     whether this amount is enough to recover its losses. Only if it
     is not enough, that the receiver requests the sender to encode
     additional redundant packets.  Using ns simulations, we show the
     superiority of our hybrid ARQ-FEC protocol over the well-known
     Scalable Reliable Multicast (SRM) protocol.}
}

@techreport{BasuNarayananKeLittleBestavros:bucs9908,
   author={Prithwish Basu and Ashok Narayanan and Wang Ke and Tom Little and Azer Bestavros},
   title={{Optimal Scheduling of Secondary Content for Aggregation in Video-on-Demand Systems}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1999-008},
   month={August}, 
   year=1999,
   note={This report is cross listed as BU ECE Department Technical 
         Report: TR-12-16-98}, 
   url={http://www.cs.bu.edu/techreports/1999-008-vod-ad-scheduling.ps.Z},
   abstract={ Dynamic service aggregation techniques can exploit
     skewed access popularity patterns to reduce the costs of building
     interactive VoD systems. These schemes seek to cluster and merge
     users into single streams by bridging the temporal skew between
     them, thus improving server and network utilization. Rate
     adaptation and secondary content insertion are two such schemes.
     In this paper, we present and evaluate an optimal scheduling
     algorithm for inserting secondary content in this scenario. The
     algorithm runs in polynomial time, and is optimal with respect to
     the total bandwidth usage over the merging interval. We present
     constraints on content insertion which make the overall QoS of
     the delivered stream acceptable, and show how our algorithm can
     satisfy these constraints. We report simulation results which
     quantify the excellent gains due to content insertion. We discuss
     dynamic scenarios with user arrivals and interactions, and show
     that content insertion reduces the channel bandwidth requirement
     to almost half. We also discuss differentiated service
     techniques, such as N-VoD and premium no-advertisement service,
     and show how our algorithm can support these as well.
     (This report is cross listed as BU ECE Department Technical 
     Report: TR-12-16-98)}
}


@techreport{AtlasBestavros:bucs9814,
   author={Alia Atlas and Azer Bestavros}, 
   title={{An Omniscient Scheduling Oracle for Systems with Harmonic Periods}},
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1998-014},
   month={September}, 
   year=1998,
   url={http://www.cs.bu.edu/techreports/1998-014-omniscient-harmonic-scheduling.ps.Z},
   abstract={Most real-time scheduling problems are known to be
     NP-complete.  To enable accurate comparison between the schedules
     of heuristic algorithms and the optimal schedule, we introduce an
     omniscient oracle.  This oracle provides schedules for periodic
     task sets with harmonic periods and variable resource
     requirements.  Three different job value functions are described
     and implemented.  Each corresponds to a different system
     goal. The oracle is used to examine the performance of different
     on-line schedulers under varying loads, including overload.  We
     have compared the oracle against Rate Monotonic Scheduling,
     Statistical Rate Monotonic Scheduling, and Slack Stealing Job
     Admission Control Scheduling.  Consistently, the oracle provides
     an upper bound on performance for the metric under consideration.}
}

@techreport{AtlasBestavros:bucs9813,
   author={Alia Atlas and Azer Bestavros}, 
   title={{Design and Implementation of SRMS in Kurt Linux}},
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1998-013},
   month={September}, 
   year=1998,
   url={http://www.cs.bu.edu/techreports/1998-013-srms-linux-implementation.ps.Z},
   abstract={Statistical Rate Monotonic Scheduling (SRMS) is a
     generalization of the classical RMS results of Liu and Layland
     \cite{ll:sched} for periodic tasks with highly variable execution
     times and statistical QoS requirements.  The main tenet of SRMS
     is that the variability in task resource requirements could be
     smoothed through aggregation to yield guaranteed QoS. This
     aggregation is done over time for a given task and across
     multiple tasks for a given period of time. Similar to RMS, SRMS
     has two components: a feasibility test and a scheduling
     algorithm. SRMS feasibility test ensures that it is possible for
     a given periodic task set to share a given resource without
     violating any of the statistical QoS constraints imposed on each
     task in the set. The SRMS scheduling algorithm consists of two
     parts: a job admission controller and a scheduler. The SRMS
     scheduler is a simple, preemptive, fixed-priority scheduler. The
     SRMS job admission controller manages the QoS delivered to the
     various tasks through admit/reject and priority assignment
     decisions. In particular, it ensures the important property of
     task isolation, whereby tasks do not infringe on each other.  In
     this paper we present the design and implementation of SRMS
     within the KURT Linux Operating System. KURT Linux supports
     conventional tasks as well as real-time tasks.  It provides a
     mechanism for transitioning from normal Linux scheduling to a
     mixed scheduling of conventional and real-time tasks, and to a
     focused mode where only real-time tasks are scheduled.  We
     overview the technical issues that we had to overcome in order to
     integrate SRMS into KURT Linux and present the API we have
     developed for scheduling periodic real-time tasks using SRMS.}
}
		  
@techreport{AtlasBestavros:bucs9812,
   author={Alia Atlas and Azer Bestavros}, 
   title={{The Statistical Rate Monotonic Scheduling Workbench}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1998-012},
   month={May}, 
   year=1998,
   url={http://www.cs.bu.edu/techreports/1998-012-srms-workbench}, 
   abstract={The SRMS Workbench is a software system developed to
     demonstrate the notion of Statistical QoS employed in SRMS
     [AtlasBestavros:1998].  The SRMS Workbench includes: (1) the SRMS
     schedulability analyzer (QoS negotiator), and (2) a SRMS
     simulator (Basic SRMS + all extensions). These two components are
     packaged into a Java Applet that can be executed remotely on any
     Java-capable Internet browser.  For comparison, other scheduling
     algorithms, including RMS [LiuLayland:1973] and SSJAC
     [AtlasBestavros:1998] are included.  Through a simple GUI, the
     SRMS Workbench allows users to specify a set of periodic tasks,
     each with (a) its own period, (b) the distributional
     characteristics of its periodic resource requirements
     (e.g. Poisson, Pareto, Normal, Exponential, Gamma, etc.), (c) its
     desired QoS as a lower bound on the percentage of deadlines to be
     met, and (d) a criticality/importance index indicating the value
     of the task (relative to other tasks in the task set). Once the
     task set is specified, the SRMS Workbench allows the user to
     check for schedulability under SRMS. If the task set is
     schedulable, the SRMS Workbench generates the appropriate
     allowance for each task and allows the user to create an animated
     simulation of the task system, which can be executed and
     profiled. If the task set is not schedulable, the SRMS Workbench
     informs the user of that fact and suggests (as part of the QoS
     negotiation) an alternative set of feasible QoS requirements that
     reflects the specified criticality/importance index of the tasks
     in the task set.  The SRMS Workbench is available on the Web at
     /groups/realtime/SRMSworkbench}
}

@techreport{AtlasBestavros:bucs9811, 
   author={Alia Atlas and Azer Bestavros}, 
   title={{Multiplexing VBR Traffic Flows with Guaranteed
           Application-level QoS Using Statistical Rate Monotonic
           Scheduling}},  
   institution={Boston University, Computer Science Department},
   number={BUCS-TR-1998-011}, 
   month={May}, 
   year=1998,
   url={http://www.cs.bu.edu/techreports/1998-011-srms-qos.ps.Z},
   abstract={Quality of Service (QoS) guarantees are required by an
     increasing number of applications to ensure a minimal level of
     fidelity in the delivery of application data units through the
     network.  Application-level QoS does not necessarily follow from
     any transport-level QoS guarantees regarding the delivery of the
     individual cells (e.g. ATM cells) which comprise the
     application's data units. The distinction between
     application-level and transport-level QoS guarantees is due
     primarily to the fragmentation that occurs when transmitting
     large application data units (e.g. IP packets, or video frames)
     using much smaller network cells, whereby the partial delivery of
     a data unit is useless; and, bandwidth spent to partially
     transmit the data unit is wasted.  The data units transmitted by
     an application may vary in size while being constant in rate,
     which results in a variable bit rate (VBR) data flow.  That data
     flow requires QoS guarantees.  Statistical multiplexing is
     inadequate, because no guarantees can be made and no firewall
     property exists between different data flows. In this paper, we
     present a novel resource management paradigm for the maintenance
     of application-level QoS for VBR flows. Our paradigm is based on
     Statistical Rate Monotonic Scheduling (SRMS), in which (1) each
     application generates its variable-size data units at a fixed
     rate, (2) the partial delivery of data units is of no value to
     the application, and (3) the QoS guarantee extended to the
     application is the probability that an arbitrary data unit will
     be successfully transmitted through the network to/from the
     application.}
}

@techreport{AtlasBestavros:bucs9810,
   author={Alia Atlas and Azer Bestavros}, 
   title={{Statistical Rate Monotonic Scheduling}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1998-010},
   month={May}, 
   year=1998,
   url={http://www.cs.bu.edu/techreports/1998-010-srms.ps.Z},
   abstract={In this paper we present Statistical Rate Monotonic
     Scheduling (SRMS), a generalization of the classical RMS results
     of Liu and Layland that allows scheduling periodic tasks with
     highly variable execution times and statistical QoS requirements.
     Similar to RMS, SRMS has two components: a feasibility test and a
     scheduling algorithm. The feasibility test for SRMS ensures that
     using SRMS' scheduling algorithms, it is possible for a given
     periodic task set to share a given resource (e.g. a processor,
     communication medium, switching device, etc.) in such a way that
     such sharing does not result in the violation of any of the
     periodic tasks QoS constraints.  The SRMS scheduling algorithm
     incorporates a number of unique features. First, it allows for
     fixed priority scheduling that keeps the tasks' value (or
     importance) independent of their periods. Second, it allows for
     job admission control, which allows the rejection of jobs that
     are not guaranteed to finish by their deadlines as soon as they
     are released, thus enabling the system to take necessary
     compensating actions.  Also, admission control allows the
     preservation of resources since no time is spent on jobs that
     will miss their deadlines anyway.  Third, SRMS integrates
     reservation-based and best-effort resource scheduling seamlessly.
     Reservation-based scheduling ensures the delivery of the minimal
     requested QoS; best-effort scheduling ensures that unused,
     reserved bandwidth is not wasted, but rather used to improve QoS
     further. Fourth, SRMS allows a system to deal gracefully with
     overload conditions by ensuring a fair deterioration in QoS
     across all tasks---as opposed to penalizing tasks with longer
     periods, for example.  Finally, SRMS has the added advantage that
     its schedulability test is simple and its scheduling algorithm
     has a constant overhead in the sense that the complexity of the
     scheduler is not dependent on the number of the tasks in the
     system.  We have evaluated SRMS against a number of alternative
     scheduling algorithms suggested in the literature (e.g. RMS and
     slack stealing), as well as refinements thereof, which we
     describe in this paper.  Consistently throughout our experiments,
     SRMS provided the best performance.  In addition, to evaluate the
     optimality of SRMS, we have compared it to an inefficient, yet
     optimal scheduler for task sets with harmonic periods.}
}

@techreport{AtlasBestavros:bucs9809,
   author={Alia Atlas and Azer Bestavros}, 
   title={{Slack Stealing Job Admission Control Scheduling}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1998-009},
   month={May}, 
   year=1998,
   abstract={}
}

@techreport{KimBestavros:bucs9805,
   author={Gitae Kim and Azer Bestavros}, 
   title={{Preserving Bandwidth Through A Lazy Packet Discard Policy
           in ATM Networks}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1998-005},
   month={February}, 
   year=1998,
   url={http://www.cs.bu.edu/techreports/1998-005-lpd.ps.Z},
   abstract={A number of recent studies have pointed out that TCP's
     performance over ATM networks tends to suffer, especially under
     congestion and switch buffer limitations.  Switch-level
     enhancements and link-level flow control have been proposed to
     improve TCP's performance in ATM networks.  Seletive Cell Discard
     (SCD) and Early Packet Discard (EPD) ensure that partial packets
     are discarded from the network "as early as possible", thus
     reducing wasted bandwidth. While such techniques improve the
     achievable throughput, their effectiveness tends to degrade in
     multi-hop networks.  In this paper, we introduce Lazy Packet
     Discard (LPD), an AAL-level enhancement that improves effective
     throughput, reduces response time, and minimizes wasted bandwidth
     for TCP/IP over ATM. In contrast to the SCD and EPD policies, LPD
     delays as much as possible the removal from the network of cells
     belonging to a partially communicated packet.  We outline the
     implementation of LPD and show the performance advantage of
     TCP/LPD, compared to plain TCP and TCP/EPD through analysis and
     simulations.}
}

@techreport{Bestavros:bucs9721,
   author={Azer Bestavros}, 
   title={{Proceedings of the 18th Real-Time Systems Symposium WIP
   Session}},
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1997-021},
   month={December}, 
   year=1997,
   url={http://www.cs.bu.edu/techreports/1997-021-ieee-rtss97-wip},
   abstract={This technical report includes 10 short papers presented
     during the WIP session of the 18th Real-Time Systems Symposium,
     held in Washington DC on December 3-5, 1997.}
}

@techreport{MattaBestavros:bucs9713, author={Ibrahim Matta and Azer
   Bestavros}, title={{Evaluation of a Load Profiling Approach to
   Routing Guaranteed Bandwidth Flows}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1997-013},
   note={Also NU-CCS-97-10 at Northeastern University},
   month={July}, 
   year=1997,
   url={http://cs-www.bu.edu/techreports/1997-013-route-profiling-evaluation.ps.Z},
   abstract={ 
     To support the diverse Quality of Service (QoS) requirements of
     real-time (e.g. audio/video) applications in integrated services
     networks, several routing algorithms that allow for the
     reservation of the needed bandwidth over a Virtual Circuit (VC)
     established on one of several candidate routes have been
     proposed.  Traditionally, such routing is done using the
     least-loaded concept, and thus results in balancing the load
     across the set of candidate routes.  In a recent study, we have
     established the inadequacy of this load balancing practice and
     proposed the use of load profiling as an alternative.  Load
     profiling techniques allow the distribution of ``available''
     bandwidth across a set of candidate routes to match the
     characteristics of incoming VC QoS requests.  In this paper we
     thoroughly characterize the performance of VC routing using load
     profiling and contrast it to routing using load balancing and
     load packing. We do so both analytically and via extensive
     simulations of multi-class traffic routing in Virtual Path (VP)
     based networks. Our findings confirm that for routing guaranteed
     bandwidth flows in VP networks, load balancing is not desirable
     as it results in VP bandwidth fragmentation, which adversely
     affects the likelihood of accepting new VC requests.  This
     fragmentation is more pronounced when the granularity of VC
     requests is large. Typically, this occurs when a common VC is
     established to carry the aggregate traffic flow of many
     high-bandwidth real-time sources.  For VP-based networks, our
     simulation results show that our load-profiling VC routing scheme
     performs better or as well as the traditional load-balancing VC
     routing in terms of revenue under both skewed and uniform
     workloads.  Furthermore, load-profiling routing improves routing
     fairness by proactively increasing the chances of admitting
     high-bandwidth connections.
   }
}
		  
@techreport{bestavros:97w, 
   author={Sue Nagy and Azer Bestavros}, 
   title={{Concurrency Admission Control Management in ACCORD}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1997-010},
   month={May},
   year=1997,
   url={http://cs-www.bu.edu/techreports/1997-010-accord-cacm.ps.Z},
   abstract={ 
     We propose and evaluate admission control mechanisms for ACCORD,
     an Admission Control and Capacity Overload management Real-time
     Database framework---an architecture and a transaction
     model---for hard deadline RTDB systems.  The system architecture
     consists of admission control and scheduling components which
     provide early notification of failure to submitted transactions
     that are deemed not valuable or incapable of completing on time.
     In this paper, we focus on our Concurrency Admission Control
     Manager (CACM), which ensures that admitted transactions do not
     overburden the system by requiring a level of concurrency that is
     not sustainable.  The transaction model consists of two
     components: a primary taskand a compensating task.  The execution
     requirements of the primary task are notknown a priori, whereas
     those of the compensating task are known a priori. Upon the
     submission of a transaction, the Admission Control Mechanismsare
     employed to decide whether to admitor rejectthat
     transaction. Once admitted, a transaction is guaranteed to
     finishexecuting before its deadline. A transaction is considered
     to have finished executing if exactly one of two things occur:
     Either its primary task is completed (successful commitment), or
     its compensating task is completed (safe termination). Committed
     transactions bring a profit to the system, whereas a terminated
     transaction brings no profit. The goal of the admission control
     and scheduling protocols (e.g., concurrency control, I/O
     scheduling, memory management) employed in the system is to
     maximize system profit. In that respect, we describe a number of
     concurrency admission control strategies and contrast (through
     simulations) their relative performance.
  }
}

@techreport{bestavros:97r,
   author={Azer Bestavros and Ibrahim Matta}, 
   title={{Load Profiling for Efficient Route Selection in Multi-Class
   Networks}},  
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1997-009},
   note={Also NU-CCS-97-08 at Northeastern University},
   month={May},
   year=1997,
   url={http://cs-www.bu.edu/techreports/1997-009-route-profiling.ps.Z},
   abstract={
     High-speed networks, such as ATM networks, are expected to
     support diverse Quality of Service (QoS) constraints, including
     real-time QoS guarantees.  Real-time QoS is required by many
     applications such as those that involve voice and video
     communication.  To support such services, routing algorithms that
     allow applications to reserve the needed bandwidth over a Virtual
     Circuit (VC) have been proposed.  Commonly, these
     bandwidth-reservation algorithms assign VCs to routes using the
     least-loaded concept, and thus result in balancing the load over
     the set of all candidate routes.  In this paper, we show that for
     such reservation-based protocols---which allow for the exclusive
     use of a preset fraction of a resource's bandwidth for an
     extended period of time---load balancing is not desirable as it
     results in resource fragmentation, which adversely affects the
     likelihood of accepting new reservations.  In particular, we show
     that load-balancing VC routing algorithms are not appropriate
     when the main objective of the routing protocol is to increase
     the probability of finding routes that satisfy incoming VC
     requests, as opposed to equalizing the bandwidth utilization
     along the various routes. We present an on-line VC routing scheme
     that is based on the concept of ``load profiling'', which allows
     a distribution of ``available'' bandwidth across a set of
     candidate routes to match the characteristics of incoming VC QoS
     requests.  We show the effectiveness of our load-profiling
     approach when compared to traditional load-balancing and
     load-packing VC routing schemes.
   }
}

@techreport{bestavros:97p,
   author={Sanjoy Baruah and Azer Bestavros}, 
   title={{Real-Time Mutable Broadcast Disks}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1997-007},
   month={May}, 
   year=1997,
   url={http://cs-www.bu.edu/techreports/1997-007-mutable-bdisks.ps.Z}
}

@techreport{bestavros:97k,
   author={Azer Bestavros and Gitae Kim}, 
   title={{Exploiting Redundancy for Timeliness in TCP
          Boston}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1997-001},
   month={January}, 
   year=1997,
   url={http://www.cs.bu.edu/techreports/1997-001-tcp-boston-realtime.ps.Z}
}

@techreport{bestavros:96w,
   author={Azer Bestavros}, 
   title={{Proceedings of the 17th Real-Time Systems Symposium WIP
   Session}},
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1996-027},
   month={December}, 
   year=1996,
   url={http://www.cs.bu.edu/techreports/1996-027-ieee-rtss96-wip}
}

@techreport{bestavros:96t, 
   author={Sanjoy Baruah and Azer Bestavros}, 
   title={{Pinwheel Scheduling for Fault-tolerant
           Broadcast Disks in Real-time Database Systems}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1996-023},
   month={August}, 
   year=1996,
   url={http://www.cs.bu.edu/techreports/1996-023-pinwheel-bdisks.ps.Z}
}

@techreport{bestavros:96s, 
   author={Azer Bestavros}, 
   title={{Load Profiling in Distributed Real-Time Systems: One Size
   Doesn't Fit All}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1996-017},
   month={August}, 
   year=1996,
   url={http://www.cs.bu.edu/techreports/1996-017-load-profiling.ps.Z}
}

@techreport{bestavros:96o, 
   author={Azer Bestavros and Gitae Kim}, 
   title={{TCP Boston: A Fragmentation-tolerant TCP Protocol for ATM
       Networks}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1996-014},
   month={July}, 
   year=1996,
   url={http://www.cs.bu.edu/techreports/1996-014-tcp-boston.ps.Z}
}

@techreport{bestavros:96k, 
   author={Azer Bestavros and Kwei-Jay Lin and Sang Son}, 
   title={{RTDB'96: The First International Workshop on Real-Time
   Database Systems (Workshop Report)}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1996-013},
   month={July},  
   year=1996,
   url={http://www.cs.bu.edu/techreports/1996-013-rtdb96-report}
}

@techreport{bestavros:96r, 
   author={Azer Bestavros and Marina Chen and Mark Crovella and
   Abdelsalam Heddaya and Stan Sclaroff and James Cowie},
   title={{Responsive Web Computing: Resource Management,
         Protocol Techniques, and Applications (A research statement)}},
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1996-008},
   month={March}, 
   year=1996,
   url={http://www.cs.bu.edu/techreports/1996-008-rwc.ps.Z}
}

@techreport{bestavros:96i, 
   author={Azer Bestavros}, 
   title={{Advances in Real-Time Database Systems Research}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1996-003},
   month={January}, 
   year=1996,
   url={http://www.cs.bu.edu/techreports/1996-003-rtdbs-sigmod-record}
}

@techreport{bestavros:96c, 
   author={Azer Bestavros and Sue Nagy}, 
   title={{An Admission Control Paradigm for Real-Time Databases}}, 
   institution={Boston University, Computer Science Department}, 
   number={BUCS-TR-1996-002},
   month={January}, 
   year=1996,
   url={http://www.cs.bu.edu/techreports/1996-002-rtdbs-admission-control.ps.Z}
}

@techreport{bestavros:96b,
  author={Azer Bestavros}, 
  institution={Boston University, CS Dept},
  number={BUCS-TR-1996-001},
  address={Boston, MA 02215},
  title={{AIDA-based Real-Time Fault-Tolerant Broadcast Disks}}, 
  month="January",
  year=1996,
  url={http://www.cs.bu.edu/techreports/1996-001-aida-broadcast-disks.ps.Z}
}

@techreport{bestavros:94k,
  author = "Thomas Marlowe and William Pugh and Ted Baker and Azer
            Bestavros and Ron Cytron and Victor Fay Wolfe",
   title = "{Proceedings of the ACM SIGPLAN Workshop on
            Language, Compiler, and Tool Support for Real-Time
            Systems}",
   institution =  "Dept. of Computer Science, Univ. of Maryland",
   number = "CS-TR-3342",
   address = "College Park, MD",
   month = {August},
   year = "1994",
   url =  {http://www.cs.umd.edu/users/pugh/sigplan\_realtime\_workshop/lct-rts94/},

   abstract={Traditionally, optimizing compilers apply source to
   source transformations. This technical report contains the
   proceedings of the ACM SIGPLAN Workshop on Language, Compiler, and
   Tool Support for Real-Time Systems, held in conjunction with PLDI
   '94 (ACM SIGPLAN Conference on Programming Language Design and
   Implementation) and LFP '94 (Lisp and Functional Progamming). This
   workshop explores the interface between two dynamic areas of
   computer science and engineering: programming languages and
   real-time systems.

   Directions in both fundamental and applied research in real-time
   computing have been changing over the last several years, in
   response to the need for large, flexible, powerful, and robust
   systems. There is a growing perception that previous approaches
   have been pitched at inappropriate levels for these new
   applications: neither low-level coding without high-level design,
   nor high-level specification/verification without guarantees on
   translation quality are satisfactory for large complex systems.

   Several researchers in real-time systems see language and compiler
   techniques as a major part of the solution; at the same time,
   language researchers are beginning to explore real-time
   applications and environments. While hard temporal constraints
   complicate the adaptation, the entire range of language techniques
   can be brought to bear on real-time systems.},
   note={Also cross-referenced as UMIACS-TR-94-104.}   
}

@techreport{bestavros:94j,
  author={Azer Bestavros},
  title={Towards Physically-Correct Specifications of Embedded Real-Time Systems},
  institution="Computer Science Department",
  address="Boston University, Boston, MA",
  number="BUCS-TR-1994-008", 
  month="May",
  year=1994,
  note={This report supersedes BU-TR-93-012},
  url={http://www.cs.bu.edu/techreports/1994-008-physical-correctness.ps.Z}

}

@techreport{bestavros:94i,
  author="Azer Bestavros and Spyridon Braoudakis",
  title={Timeliness via Speculation for Real-Time Databases},
  institution="Computer Science Department",
  address="Boston University, Boston, MA",
  number="BUCS-TR-1994-007", 
  month="May",
  year=1994,
  url={http://www.cs.bu.edu/techreports/1994-007-rtdbs-timeliness.ps.Z}
}

@techreport{bestavros:93i,
  author="Azer Bestavros and Biao Wang",
  title={Multi-version Speculative Concurrency Control with Delayed Commit},
  institution="Computer Science Department",
  address="Boston University, Boston, MA",
  number="BUCS-TR-1993-014", 
  month="October",
  year=1993,
  url={http://www.cs.bu.edu/techreports/1993-014-scc-delayed-commit.ps.Z}
}

@techreport{bestavros:93g,
  author="Azer Bestavros",
  title="{Building Responsive Systems from Physically-correct Specifications}",
  institution="Computer Science Department",
  address="Boston University, Boston, MA",
  number="BUCS-TR-1993-012", 
  month="July",
  year=1993,
  url={http://www.cs.bu.edu/techreports/1993-012-tra-responsive.ps.Z}
}

@techreport{bestavros:93b,
  author="Azer Bestavros",
  title="{Speculative Concurrency Control}", 
  number="BUCS-TR-1993-002", 
  institution="Computer Science Department",
  address="Boston University, Boston, MA",
  month="February",
  year=1993,
  url={http://www.cs.bu.edu/techreports/1993-002-scc.ps.Z}
}

@techreport{bestavros:93a,
  author="Azer Bestavros and Spyridon Braoudakis and Euthimios Panagos",
  title="{Performance Evaluation of Two-shadow Speculative Concurrency
         Control}", 
  institution="Computer Science Department",
  address="Boston University, Boston, MA",
  number="BUCS-TR-1993-001", 
  month="January",
  year=1993,
  url={http://www.cs.bu.edu/techreports/1993-001-scc-2s-perf.ps.Z}
}

@techreport{bestavros:92h,
  author="Azer Bestavros", 
  title="{AIDA-based Reliable Communication for Time-Critical
         Distributed Systems}", 
  number="BUCS-TR-1992-020", 
  institution="Computer Science Department",
  address="Boston University, Boston, MA",
  month="November",
  year=1992,
  url={http://www.cs.bu.edu/techreports/1992-020-aida-communication.ps.Z}
}

@techreport{bestavros:92g,
  author="Azer Bestavros and Devora Reich and Robert Popp",
  title="{CLEOPATRA Compiler Design and Implementation}", 
  number="BUCS-TR-1992-019", 
  institution="Computer Science Department",
  address="Boston University, Boston, MA",
  month="August",
  year=1992,
  url={http://www.cs.bu.edu/techreports/1992-019-cleopatra.ps.Z}
}

@techreport{bestavros:92c,
  author="Azer Bestavros and Spyridon Braoudakis",
  title="{A family of Speculative Concurrency Control Algorithms}", 
  number="BUCS-TR-1992-017", 
  institution="Computer Science Department",
  address="Boston University, Boston, MA",
  month="July",
  year=1992,
  url={http://www.cs.bu.edu/techreports/1992-017-scc-family.ps.Z}
}

@techreport{bestavros:92a,
  author="Azer Bestavros",
  title="{Speculative Concurrency Control: A Position Statement}", 
  number="BUCS-TR-1992-016", 
  institution="Computer Science Department",
  address="Boston University, Boston, MA",
  month="July",
  year=1992,
  url={http://www.cs.bu.edu/techreports/1992-016-scc-position.ps.Z}
}

@techreport{bestavros:90d,
  author="Azer Bestavros",
  title="{ESPRIT: Executable Specification of Parallel Real-time
         Interactive Tasks}",
  number="TR-06-90",
  institution="Department of Computer Science",
  address="Harvard University, Cambridge, MA",
  month="September",
  year=1990
}

@techreport{bestavros:89d,
  author="Azer Bestavros", 
  title="{SETH: A VLSI Chip for the Real-Time Information Dispersal and
         Retrieval for Security and Fault-Tolerance}", 
  institution="Harvard University, Department of Computer Science, DAS", 
  number="TR-06-89", 
  address="Aiken Computation Lab, Cambridge, Massachusetts", 
  month="May",
  year=1989,
  url={http://www.cs.bu.edu/fac/best/res/papers/harvardTR89-06.ps.Z}
}

@techreport{bestavros:88c,
  author="Azer Bestavros", 
  title="{The Input Output Real-Time Automaton}", 
  institution="Harvard University, Department of Computer Science, DAS", 
  number="TR-12-89", 
  address="Aiken Computation Lab, Cambridge, Massachusetts", 
  note="(Revision of August 1988 version)",
  month="October",
  year=1989
}

@techreport{bestavros:90j,
  author="Azer Bestavros", 
  title="{The Input Output Timed Automaton: A Model for Real-Time
         Parallel Computation}", 
  institution="Department of Computer Science",
  address="Harvard University, Cambridge, MA",
  number="TR-12-90",
  month="October",
  year=1990
}

@techreport{bestavros:88d,
  author="Azer Bestavros", 
  title="{An Algorithm for Self Diagnosis in Distributed Systems}", 
  institution="Harvard University, Department of Computer Science, DAS", 
  number="TR-11-88", 
  address="Aiken Computation Lab, Cambridge, Massachusetts", 
  month="April",
  year=1988
}




@TechReport{MattaGuo:bucs-2000-012,
   author    = "Ibrahim Matta and Liang Guo",
   title     = {{Differentiated Predictive Fair Service for TCP Flows}},
  institution = "Boston University, Computer Science Department",
  year =        2000,
  number =      "BU-CS-2000-012",
  month =       "May",
  address =     "Boston, MA 02215",
  url = "http://www.cs.bu.edu/techreports/2000-012-diffserv-tcp.ps.Z"
}

@TechReport{GuoMatta:bucs-1999-013,
   author    = "Liang Guo and Ibrahim Matta",
   title     = {{Search Space Reduction in {QoS} Routing}},
  institution = "Boston University, Computer Science Department",
  year =        1999,
  number =      "BU-CS-1999-013",
  month =       "October",
  address =     "Boston, MA 02215",
  note = "Revises NU-CCS-98-09 at Northeastern University",
  url = "http://www.cs.bu.edu/techreports/1999-013-search-qos-routing.ps.Z"
}


@TechReport{MattaGuo:nuccs-98-14,
   author    = "Ibrahim Matta and Liang Guo",
   title     = {{On Routing Real-Time Multicast Connections}},
  institution = "Northeastern University, College of Computer Science",
  year =        1998,
  number =      "NU-CCS-98-14",
  month =       "December",
  address =     "Boston, MA 02115",
  url = ""
}

@techreport{GuoMatta:nuccs-98-09,
   author = {Liang Guo and Ibrahim Matta},
   title = {{Search Space Reduction in {QoS} Routing}},
   institution = {Northeastern University, College of Computer Science},
   year = 1998,
   number = "NU-CCS-98-09",
   month = {October},
   address =     "Boston, MA 02115",
   url = ""
}

@TechReport{GuoMatta:nuccs-98-05,
   author    = "Liang Guo and Ibrahim Matta",
   title     = {{{QDMR}: An Efficient QoS Dependent Multicast Routing Algorithm}},
  institution = "Northeastern University, College of Computer Science",
  year =        1998,
  number =      "NU-CCS-98-05",
  month =       "August",
  address =     "Boston, MA 02115",
  url = "http://www.cs.bu.edu/faculty/matta/TRs/nuccs-98-05-qdmr.ps"
}

@TechReport{GuoMatta:nuccs-98-02,
   author    = "Liang Guo and Ibrahim Matta",
   title     = {{On State Aggregation for Scalable QoS Routing}}, 
  institution = "Northeastern University, College of Computer Science",
  year =        1998,
  number =      "NU-CCS-98-02",
  month =       "February",
  address =     "Boston, MA 02115",
  url = "http://www.cs.bu.edu/faculty/matta/TRs/nuccs-98-02-state-aggregation.ps"
}



@techreport{MattaEltoweissyLieberherr:nuccs-97-09,
   author = {Ibrahim Matta and Mohamed Eltoweissy and Karl Lieberherr},
   title = {{From {CSCW} Applications to Multicast Routing:
             An Integrated QoS Architecture}},
   year = 1997,
   institution = {Northeastern University, College of Computer Science},
   month = {May},
   number = {{NU-CCS}-97-09},
  address =     "Boston, MA 02115",
  url = "http://www.cs.bu.edu/faculty/matta/TRs/nuccs-97-09-QoSarch.ps"
}


@techreport{MattaEltoweissy:nuccs-97-16,
   author = {Ibrahim Matta and Mohamed Eltoweissy},
   title = {{A Scalable {QoS} Routing Architecture for
             Real-Time CSCW Applications}},
   year = 1997,
   institution = {Northeastern University, College of Computer Science},
   month = {December},
   number = {{NU-CCS}-97-16},
   url = ""
}


@TechReport{MattaKrunz:nuccs-96-12,
   author    = "Ibrahim Matta and Marwan Krunz",
   title     = {{Packing and Least-Loaded Based Routing
                 in Multi-Rate Loss Networks}},
  institution = "Northeastern University, College of Computer Science",
  year =        1996,
  number =      "NU-CCS-96-12",
  month =       "September",
  address =     "Boston, MA 02115",
  url = "http://www.cs.bu.edu/faculty/matta/TRs/nuccs-96-12-packing.ps"
}

@TechReport{MattaShankar:nuccs-96-07,
   author    = "Ibrahim Matta and A.~Udaya Shankar",
   title     = {{Dynamic Routing of Real-Time Virtual Circuits}},
  institution = "Northeastern University, College of Computer Science",
  year =        1996,
  number =      "NU-CCS-96-07",
  month =       "March",
  address =     "Boston, MA 02115",
  url = ""
}



@TechReport{MattaShankar:umdcs-3235.1,
  author =      "Ibrahim Matta and A.~Udaya Shankar",
  title  =      {{Fast Time-Dependent Evaluation
		of Integrated Services Networks}},
  institution = "University of Maryland, Department of Computer Science",
  year =        1995,
  number =      "CS-TR-3235.1",
  month =       "May",
  address =     "College Park, MD 20742",
  url = ""
}

@phdthesis{Matta:phd95,
	author = "Ibrahim Matta",
	title = {{Fast Evaluation and Dynamic Control of
                 Integrated Services Networks}},
	school = "University of Maryland at College Park",
	address = "Department of Computer Science",
	month = "August",
	year = 1995,
        url = ""
}



@TechReport{MattaShankar:umdcs-3361,
  author =      "Ibrahim Matta and A.~Udaya Shankar",
  title  =      {{{Z}-Iteration: A Simple Method for Throughput
                 Estimation in Time-Dependent Multi-Class Systems}},
  institution = "University of Maryland, Department of Computer Science",
  year =        1994,
  number =      "CS-TR-3361",
  month =       "October",
  address =     "College Park, MD 20742",
  url = ""
}

@TechReport{MattaShankar:umdcs-3235,
  author =      "Ibrahim Matta and A.~Udaya Shankar",
  title  =      {{An Iterative Approach to Comprehensive Performance Evaluation 
		of Integrated Services Networks}},
  institution = "University of Maryland, Department of Computer Science",
  year =        1994,
  number =      "CS-TR-3235",
  month =       "March",
  address =     "College Park, MD 20742",
  url = ""
}


@TechReport{AlaettinogluMattaShankar:umdcs-3360,
  author =      "Cengiz Alaettinoglu and Ibrahim Matta and A.~Udaya Shankar",
  title  =      {{A Scalable Virtual Circuit Routing Scheme 
                 for {ATM} Networks}},
  institution = "University of Maryland, Department of Computer Science",
  year =        1994,
  number =      "CS-TR-3360",
  month =       "October",
  address =     "College Park, MD 20742",
  url = ""
}



@TechReport{MattaShankar:umdcs-3102,
  author =      "Ibrahim Matta and A.~Udaya Shankar",
  title  =      {{On the Interaction between Gateway Scheduling and Routing}},
  institution = "University of Maryland, Department of Computer Science",
  year =        1993,
  number =      "CS-TR-3102",
  month =       "July",
  address =     "College Park, MD 20742",
  url = ""
}


@TechReport{MattaShankar:umdcs-3147,
  author =      "Ibrahim Matta and A.~Udaya Shankar",
  title  =      {{Type-of-Service Routing in Dynamic Datagram Networks}},
  institution = "University of Maryland, Department of Computer Science",
  year =        1993,
  number =      "CS-TR-3147",
  month =       "October",
  address =     "College Park, MD 20742",
  url =        ""
}



@TechReport{MattaShankar:umdcs-2963,
  author =      "Ibrahim Matta and A.~Udaya Shankar",
  title  =      {{Type-of-Service in Adaptive Next-Hop Routing}},
  institution = "University of Maryland, Department of Computer Science",
  year =        1992,
  number =      "CS-TR-2963",
  month =       "September",
  address =     "College Park, MD 20742",
  url =        ""
}

