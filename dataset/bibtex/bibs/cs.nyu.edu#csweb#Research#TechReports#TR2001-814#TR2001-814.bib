BIB-VERSION:: CS-TR-v2.1
ID:: ncstrl.nyu_cs//TR2001-814
ENTRY:: March 23, 2001
TITLE::  Automatic Deployment of Transcoding Components for Ubiquitous Network-Aware Access to Internet Services
AUTHOR::  Fu, Xiadong
AUTHOR:: Shi, Weisong
AUTHOR:: Karamcheti, Vijay
DATE:: March 23, 2001
ABSTRACT:: Advances in wireless communication together with the growing number of
mobile end devices hold the potential of ubiquitous access to
sophisticated internet services; however, such access must cope with
an inherent mismatch between the low-bandwidth, limited-resource
characteristics of mobile devices and the high-bandwidth expectations
of many content-rich services. One promising way of bridging this gap
is by deploying application-specific components on the path between
the device and service, which perform operations such as protocol
conversion and content transcoding. Although several researchers have
proposed infrastructures allowing such deployment, most rely on
static, hand-tuned deployment strategies restricting their
applicability in dynamic situations.
In this paper, we present an automatic approach for the dynamic
deployment of such transcoding components, which can additionally be
dynamically reconfigured as required.  Our approach relies on three
components: (a) a high-level integrated type-based specification of
components and network resources, essential for "late binding"
components to paths; (b) an automatic path creation strategy that
selects and maps components so as to optimize a global metric; and (c)
system support for low-overhead path reconfiguration, consisting of
both restrictions on component interfaces and protocols satisfying
application semantic continuity requirements.  We comprehensively
evaluate the effectiveness of our approach over a range of network and
end-device characteristics using both a web-access scenario where
client performance is for reduced access time, and a streaming
scenario where client preference is for increased throughput. Our
results verify that (1) automatic path creation and reconfiguration is
achievable and does in fact yield substantial performance benefits;
and (2) that despite their flexibility, both path creation and
reconfiguration can be supported with low run-time overhead.
END:: ncstrl.nyu_cs//TR2001-814
