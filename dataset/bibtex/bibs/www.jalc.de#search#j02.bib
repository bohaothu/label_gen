@string{jalc = "Journal of Automata, Languages and Combinatorics"}

%%%%%%%%%%%%%%%%%%%%%%%%%%% Heft 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 2 (1997) 1 

@article{jalc020101,
  author   = {Karel Culik{ }II and Vladimir Valenta},
  title    = {Generalized Finite Automata and Transducers},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 1,
  pages    = {3--17},
  keywords = {generalized finite automaton, finite transducer,
    image description, image compression},
  abstract = {We introduce generalized finite automata as language 
    acceptors, and we prove that they are not more powerful 
    than finite automata. Their purpose is to give a more 
    compact description of regular sets. They can be 
    particularly useful for image description and compression.
    Generalized finite transducers are presented. They are more 
    powerful than finite transducers, however, they still
    preserve regular sets. We show  how (generalized) finite 
    transducers are used to specify image manipulation.}
}

@article{jalc020102,
  author   = {Ulrich Huckenbeck},
  title    = {On Valve Adjustments that Interrupt
              all $s$-$t$-Paths in a Digraph},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 1,
  pages    = {19--45},
  keywords = {graph theory, paths in graphs, complexity theory, 
    NP-completeness},
  abstract = {When searching for a path in a digraph, usually the 
    following situation is given: Each node $v$ may be entered 
    via an arbitrary incoming arc $(u,v)$, and $v$ may be left 
    via an arbitrary outgoing arc $(v,w)$.\par 
    This paper, however, is addressed to graphs with valve 
    nodes, and these nodes cannot arbitrarily be entered and 
    left. More precisely, a movable valve is installed in each 
    valve node $v$. Entering $v$ via $(u,v)$ and leaving it via 
    $(v,w)$ is only possible if the current position of the 
    valve generates a connection between these two arcs; if, 
    however, the current valve adjustment interrupts this 
    connection then every path using the arcs $(u,v)$ and 
    $(v,w)$ is interrupted, too. We investigate the complexity 
    of the following problem:
    \begin{quote}
      Given a digraph with valve nodes. 
      Let $s$ and $t$ be two nodes of this graph.\newline
      Does there exist a valve adjustment that interrupts 
      all paths from $s$ to $t$? 
    \end{quote}
    We show that this problem can be solved in deterministic 
    polynomial time if all valve nodes belong to a particular 
    class of valves; otherwise, the  problem is NP-complete.}
}

@article{jalc020103,
  author   = {Ferucio Lauren\c{t}iu \c{T}iplea and 
              Masashi Katsura and Masami Ito},
  title    = {Processes and Vectorial Characterizations of
              Parallel Communicating Grammar Systems},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 1,
  pages    = {47--73},
  keywords = {grammar and system of grammars, Petri net, process, partial word
    and language},
  abstract = {This paper deals with regular Parallel Communicating 
    Grammar Systems (PCGS, for short), and basically it has two 
    main parts. The first one introduces and studies 
    processes and partial words of PCGS, while the second one 
    gives some vectorial characterizations of sequential 
    languages of PCGS.\par
    Processes and partial words of PCGS are defined using 
    conflict occurrence nets, and they intend to capture 
    concurrent behaviours, including communications, of such 
    systems of grammars. From processes, partial words and 
    communication partial words are derived. We show that 
    processes and partial words of PCGS are Petri net generable, 
    and some consequences are then obtained. The connection with 
    regular partial languages is also made. Namely, we show that 
    partial languages of conflict-free unsynchronized PCGS are 
    regular partial languages. The vectorial characterizations 
    that we present here are based on special catenations on 
    vectors of strings, and vectorial languages. More precisely, 
    we show that languages generated by PCGS are images of 
    regular languages through special kinds of 
    ``substitutions'' and ``homomorphisms''. 
    Each section points out some open problems and possible
    directions for a further study.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%% Heft 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 2 (1997) 2 

@article{jalc020201,
  author   = {Henning Fernau},
  title    = {Graph-Controlled Grammars as Language Acceptors},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 2,
  pages    = {79--91},
  keywords = {formal languages, regulated rewriting, accepting grammars},
  abstract = {In this paper, we study the concept of accepting grammars
    within various forms of regulated grammars like programmed 
    grammars, matrix (set) grammars, grammars with regular (set) 
    control, periodically time-variant grammars as variants of
    grammars controlled  by bicoloured digraphs. We focus on 
    their descriptive capacity. In this way, we continue our 
    studies of accepting grammars. Periodically time-variant 
    grammars yield the first example of a non-trivial 
    equivalence of generating and accepting mode in the absence 
    of appearance checkings.}
}

@article{jalc020202,
  author   = {Jozef Gruska and Ir\`{e}ne Guessarian},
  title    = {Fixpoint Semantics of Synchronized Systems 
              and Correctness of Their Basic Transformations},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 2,
  pages    = {93--133},
  keywords = {fixpoint semantics, systolic systems, 
    semi-systolic systems, retiming transformation, slowdown 
    transformation},
  abstract = {In recent years many systolic systems have been designed, 
    some of them even manufactured as special purpose 
    processors. Moreover, several design and transformation 
    methodologies and software tools for the development of 
    systolic systems have been worked out. However, the 
    definitions and analysis of very basic concepts and results 
    concerning systolic systems and their transformations seem 
    to be still missing the rigour, abstraction and analysis 
    required by the current design and correctness theory 
    standards and also by applications. The aim of this paper is 
    to remedy this situation by presenting a natural fixpoint 
    semantics of synchronous systems (including semi-systolic 
    and systolic) and by making precise and analysing in which 
    way the basic transformations of these systems (retiming and 
    slowdown) preserve their semantics.}
}

@article{jalc020203,
  author   = {Matthias Kriesell},
  title    = {A Note on Hamiltonian Cycles in Lexicographical Products},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 2,
  pages    = {135--138},
  keywords = {hamiltonian path, lexicographical product, 
    vertex transitive graph, toughness, multiple of a multigraph},
  abstract = {A typical sufficient condition for the existence of a 
    hamiltonian cycle in a lexicographical product $G[H]$ of two 
    graphs $G$ and $H$ forces $G$ to contain a hamiltonian cycle 
    or $G$ to contain a hamiltonian path and $H$ to have some 
    additional properties. We present some sufficient conditions
    in terms of toughness and factors which are much weaker in 
    many cases. A typical statement is that $G[H]$ is 
    hamiltonian if $G$ is $2$-edge connected and cubic and 
    $|H| \geq 2$.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%% Heft 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 2 (1997) 3 

@article{jalc020301,
  author   = {J\"{u}rgen Duske and Rainer Parchmann},
  title    = {Non-Synchronized Pattern Languages are IO-Macro Languages},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 3,
  pages    = {143--149},
  keywords = {pattern systems, IO-macro languages},
  abstract = {We will show that the family of non-synchronized pattern 
    languages as defined by V. Mitrana, Gh. Paun, G. Rozenberg, 
    and A. Salomaa is a proper subfamily of the inside-out macro 
    languages (see M.\,J. Fischer).}
}

@article{jalc020302,
  author   = {Victor Mitrana},
  title    = {Crossover Systems. A Generalization of Splicing Systems},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 3,
  pages    = {151--160},
  keywords = {formal languages, crossover systems and languages},
  abstract = {In this paper we consider the crossover operation as an 
    operation on strings and languages and study the 
    relationships between this operation and other operations in 
    formal language theory.  Roughly speaking, crossover produces 
    a new sequence starting from two parent  sequences, cutting 
    them in several fragments and crossing these fragments by
    ligation. Thus, crossover is a generalization of the 
    splicing operation viewed as a formal model of DNA 
    recombination.}
}

@article{jalc020303,
  author   = {Markus E. Nebel},
  title    = {New Results on the Stack Ramification of Binary Trees},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 3,
  pages    = {161--175},
  keywords = {analysis of algorithms, combinatorial problems},
  abstract = {The stack-size of a tree $T$ is the number of cells of a 
    stack needed to traverse $T$ in postorder. In this paper we 
    show that the average number of proper subtrees having the 
    same stack-size as the whole tree is asymptotically $1$ with 
    a variance of $2+o(1)$.  The total number of subtrees with a 
    stack-size one less than that of the whole tree is identical 
    to $2$. Counting only maximal subtrees changes this number 
    to $1+o(1)$ with a variance of $o(1)$.}
}

@article{jalc020304,
  author   = {Kai Salomaa and Sheng Yu},
  title    = {NFA to DFA Transformation for Finite Languages over 
              Arbitrary Alphabets},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 3,
  pages    = {177--186},
  keywords = {formal languages, finite automata, state complexity},
  abstract = {We consider the number of states of a DFA that is 
    equivalent to an $n$-state NFA accepting a finite language
    over an arbitrary alphabet. We show that, for any $n$-state 
    NFA accepting a finite language over a $k$-letter alphabet, 
    $n,k > 1$, there is an equivalent DFA of 
    $O(k^{n/(\log_2 k +1)})$ states, and show that this bound is 
    optimal in the worst case.}
}

@article{jalc020305,
  author   = {Ferucio Lauren\c{t}iu \c{T}iplea and Cristian Ene},
  title    = {Hierarchies of Petri Net Languages and a Super-Normal Form},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 3,
  pages    = {187--204},
  keywords = {Petri net, normal form, language},
  abstract = {Some restrictions on the in- and out-degree of transitions 
    in Petri nets are imposed, and some hierarchies of Petri net 
    languages are obtained. For $\lambda$-labelled Petri nets 
    a new normal form is derived. It is called the Super-Normal 
    Form of Petri nets and it improves the Pelz's normal form, 
    with respect to the interleaving semantics.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%% Heft 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 2 (1997) 4 

@article{jalc020401,
  author   = {Wolf G\"{o}hring},
  title    = {Minimal Initializing Word: A Contribution to 
              \v{C}ern\'{y}'s Conjecture},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 4,
  pages    = {209--226},
  keywords = {finite state machine, initializable, directable, 
    synchronisable automaton, 
    minimal length of an initializing word, 
    \v{C}ern\'{y}'s conjecture},
  abstract = {\v{C}ern\'{y}'s conjecture concerning the minimal length 
    of an initializing word of a finite automaton is treated for 
    a class of automata that lies ``between'' the general case 
    and the example  given by \v{C}ern\'{y}. The automata 
    considered are called \v{C}ern\'{y}-like. Within this 
    context they are characterized by permutation groups. For 
    every finite automaton there exists a non-trivial 
    \v{C}ern\'{y}-like automaton as a monomorphic image of the 
    given one. For each number of states the conjecture is 
    proven for two subclasses of the \v{C}ern\'{y}-like automata.}
}

@article{jalc020402,
  author   = {Jens Liebehenschel},
  title    = {Ranking and Unranking of Lexicographically Ordered Words:
              an Average-Case Analysis},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 4,
  pages    = {227--268},
  keywords = {ranking, unranking, lexicographical order, 
    average-case analysis, regular languages, permutations, 
    subsets, Dyck language, Motzkin language, trees},
  abstract = {We consider all words of length $n$ of a formal language. 
    If these words are arranged according to the lexicographical 
    order, then ranking means to determine the position of a 
    word of the language. Unranking is the inverse operation of 
    ranking. For a given formal language we compute the average 
    length of the shortest prefix of a word to be read to 
    determine its position,  if the word is read from left to 
    right. The length of the shortest prefix to be read depends 
    on the language only, not on the ranking algorithm. After 
    having derived a general expression, we demonstrate the 
    result by discussing various concrete applications. Ranking 
    will be analyzed for regular languages,  permutations, 
    subsets of sets, the Dyck language, the Motzkin language,
    extended ordered binary trees according to Zaks, ordered 
    binary trees according to Er, extended ordered $t$-ary trees 
    according to Ruskey, ordered trees with bounded height and 
    Cayley trees. Furthermore, ranking and unranking algorithms 
    will be presented for the languages aforementioned.}
}

@article{jalc020403,
  author   = {Lucio de Prophetis and Stefano Varricchio},
  title    = {Recognizability of Rectangular Pictures by Wang Systems},
  journal  = jalc,
  year     = 1997,
  volume   = 2,
  number   = 4,
  pages    = {269--288},
  keywords = {automata, picture languages, tilings},
  abstract = {In this paper we introduce labelled Wang tiles (LWT), that 
    are a generalization of Wang tiles. We use LWT to introduce 
    Wang systems (WS), a new formalism to recognize picture 
    languages. We prove that the family of picture languages 
    defined by Wang systems coincides with the family of picture 
    languages recognized by tiling systems. We also consider 
    unary picture languages, i.e. picture languages over an 
    alphabet of one symbol, and define a natural bijection
    between pictures and elements of $\{a\}^* \times \{b\}^*$. 
    Then we prove that any rational relation of 
    $\{a\}^* \times \{b\}^*$ can be obtained as the image of a 
    recognizable picture language. Finally, we prove that the 
    family of star-free (unary)  picture language is  included 
    in ${\cal R}\mbox{\it at} (\{a\}^* \times \{b\}^*)$.}
}
