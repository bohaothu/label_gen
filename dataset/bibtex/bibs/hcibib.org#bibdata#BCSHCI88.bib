%M C.BCSHCI.88.3
%T Preface
%A Thomas, Martin
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 3-5
%* (c) Copyright 1988 British Informatics Society Ltd.
%X In the UK there is one annual national conference on HCI, organised by the
British Computer Society's HCI Specialist Group.  This book contains the
refereed papers presented at the HCI'88 conference, held in September 1988 at
UMIST, Manchester, England.  This preface sets out to put the contents into
context, both for people reading this book as it stands, and those attending
the conference.

%M C.BCSHCI.88.7
%T Computers for the People: HCI in Prospect.  An Introduction to the HCI'88
Conference Proceedings
%A Jones, Dylan
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 7-10
%* (c) Copyright 1988 British Informatics Society Ltd.
%X N/A

%M C.BCSHCI.88.13
%T Implications of Current Design Practice for the Use of HCI Techniques
%S Analysis for Early Design
%A Bellotti, Victoria
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 13-34
%K Design practice, HCI task analysis techniques
%* (c) Copyright 1988 British Informatics Society Ltd.
%X A study of commercial system-interface design projects was carried out in
order to determine the nature of real world design practice.  Of particular
interest were two questions; the first being whether commercial design makes
use of HCI design and evaluative techniques, and the second being whether
commercial design satisfies the requirements for successful application of
these design aids.  The findings suggested that commercial design practice
varies both in the constraints under which it operates, and in the approaches
adopted.  Although many problems relating to interface design appear to be
tractable to HCI techniques, these techniques are rarely used.  Conditions in
commercial design practice sometimes act as unavoidable constraints on what
designers can do.  These constraints have important implications for the
applicability, or inapplicability, of HCI design and evaluative techniques.

%M C.BCSHCI.88.35
%T Task-Related Knowledge Structures: Analysis, Modelling and Application
%S Analysis for Early Design
%A Johnson, Peter
%A Johnson, Hilary
%A Waddington, Ray
%A Shouls, Alan
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 35-62
%K Task modelling, Knowledge representation, Frames, Design decomposition
%* (c) Copyright 1988 British Informatics Society Ltd.
%X A theoretical and methodological approach to task modelling is described,
with a worked example of the resultant model.  The theory holds that task
knowledge is represented in a person's memory and that this knowledge can be
described by a Task Knowledge Structure (TKS).  The method of analysis has been
developed for carrying out analyses of real world tasks.  The method uses a
variety of techniques for collecting information about task knowledge.  A
second perspective of the paper shows how a developed TKS model can be
decomposed into a design for a software system to support the identified tasks
within the domain of the analysis.  This decompositional method uses the
structure of frames to provide consistency between different levels of design
decomposition.

%M C.BCSHCI.88.63
%T Abstract, Generic Models of Interactive Systems
%S Analysis for Early Design
%A Dix, Alan
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 63-77
%K Formal methods, Design principles, Requirements capture
%* (c) Copyright 1988 British Informatics Society Ltd.
%X For several years at York, we have been investigating the use of abstract
models in the design of interactive systems.  I will describe why we originally
pursued this line and the benefits that have ensued.  I will only briefly
describe specific models as examples where appropriate.  There is an underlying
assumption that formal methods are being used during the software design
process, but the analysis proves useful even when this is not the case.

%M C.BCSHCI.88.79
%T Analysing the Scope of Cognitive Models in Human-Computer Interaction: A
Trade-Off Approach
%S Analysis for Early Design
%A Simon, Tony
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 79-93
%K User-modelling, Cognitive science
%* (c) Copyright 1988 British Informatics Society Ltd.
%X One of the main contributions of Cognitive Science to HCI has been the
development of predictive models of user behaviour.  However, such models are
necessarily limited in the scope of predictions they can make; their strengths
usually being determined on the basis of pragmatic trade-offs.  At present, no
rational taxonomy of the different types of model exists.  Thus, would be
user-modellers find little guidance about which model is most likely to deliver
the kind of predictions in which they are interested.  Even less available is
information about what will not be delivered when employing any given model. 
This paper presents a representation of the space of some user-models in HCI
which reveals their scope by making explicit such trade-offs.

%M C.BCSHCI.88.97
%T The Design and Evaluation of an Animated Programming Environment
%S Systems Design: Methods, Tools and Processes
%A Heerjee, Kaizad B.
%A Swanston, Michael T.
%A Miller, Colin J.
%A Samson, William B.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 97-109
%K Human-computer interface, Software evaluation, Programming environments
%* (c) Copyright 1988 British Informatics Society Ltd.
%X APE, an Animated Programming Environment, is an interactive, graphical,
program design and development system, that embodies structured programming and
top-down design.  The system supports the development of programs for a variety
of block structured languages whilst working conceptually at the level of
Jackson diagrams.  Evaluation of APE has been carried out during the design and
implementation stages of the development life-cycle.  The evaluation was based
on responses to a questionnaire and a comparison with conventional means of
generating code.  The questionnaire evaluation elicited users' general
impressions about the system and its interface, and their detailed views on
more specific aspects of the system.  The comparative evaluation showed no
difference in the mean quality of the solution to a programming problem, but a
significantly reduced variance in quality compared to conventional methods.

%M C.BCSHCI.88.111
%T Overcoming Obstacles to the Validation of User Requirements Specifications
%S Systems Design: Methods, Tools and Processes
%A Kirby, M. A. R.
%A Fowler, C. J. H.
%A Macaulay, L. A.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 111-122
%K Requirements specification, User requirements, System validation
%* (c) Copyright 1988 British Informatics Society Ltd.
%X Poor specification of user requirements is a major reason why computer
systems fail or dysfunction.  One way of addressing this problem is to validate
User Requirements Specifications before proceeding with system development.  To
date, it has only been possible to validate specifications against checklists
of what they should contain.  This type of validation indicates gaps but does
not check the reliability of a specification; nor does it explain the
implications of specification deficiencies for performance of the finished
product.
   This paper identifies obstacles to the development of validation techniques
that do check reliability and do explain the implications of specification
deficiencies.  An approach to overcoming these obstacles is discussed,
particularly a method for ensuring that a specification is verified with the
right set of users, and a method of manipulating and analysing the information
in a specification to predict dysfunction.  This approach has been used to
develop the Specified User Requirements Validation and Explication (SURVE)
technique.

%M C.BCSHCI.88.123
%T The Representation of User Interface Style
%S Systems Design: Methods, Tools and Processes
%A Newman, William M.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 123-143
%K Human computer interaction, User interface design, Design style, Design
rationale, Requirements, Applications design, Software environments, User
interface toolkits, Apple Macintosh
%* (c) Copyright 1988 British Informatics Society Ltd.
%X This paper identifies the need for representations of styles of user
interface, particularly as a basis for choosing an application style or porting
an application to a new environment.  It identifies the requirements that a
style representation should meet, and then proceeds to develop a representation
based on the use of points of style.  It shows how this representation is
capable of relating style to user requirements, how it helps construct the
style's underlying argument, and how it exposes stylistic weaknesses.  Several
worked examples are included.

%M C.BCSHCI.88.145
%T Some Experiences in Integrating Specification of Human Computer Interaction
within a Structured System Development Method
%S Systems Design: Methods, Tools and Processes
%A Sutcliffe, Alistair
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 145-160
%K Interface design, Systems design, Task analysis, Direct manipulation
%* (c) Copyright 1988 British Informatics Society Ltd.
%X Procedures for integrating task analysis and design of human computer
interfaces into a structured system design method, Jackson system development
(JSD) are described.  JSD process structure diagrams are used to describe tasks
which are then evaluated for cognitive complexity.  Task allocation and
complexity analysis produced specification of human tasks, highlighted the need
for task support actions, especially information display support for working
memory, and produced computer process specifications for human task support. 
Dialogue specification for a direct manipulation interface design was taken
from the JSD object/event model from which permissible manipulations were
derived.  Further PSD diagrams were constructed to specify interface object
management processes.  Preliminary evaluation of the method showed that the
method was easy to learn even for non HCI specialists.

%M C.BCSHCI.88.161
%T Humans, Computers, and Contracts
%S Systems Design: Methods, Tools and Processes
%A Gundry, A. J.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 161-175
%K HCI, Procurement, Contracts
%* (c) Copyright 1988 British Informatics Society Ltd.
%X Large interactive systems are increasingly purchased by means of
competitive, fixed price contracts.  Under a common form of this arrangement, a
purchasing authority sponsors a requirement study and places a contract for a
design study with two or more contractors.  During the design study, the
contractors are in a cost-effectiveness competition, and the one who wins will
be held to his bid price for the implementation that follows.  This paper looks
at both sides of the contractual divide to see how HCI practice fares under
these conditions.  On the purchasing authority's side, the consequences of
expressing HCI requirements in contractually-robust language are examined, with
illustrative examples.  On the contractor's side, typical constraints on his
HCI design team are restricted access to users and the pressure to show that
solutions are cost-effective.  The paper reviews some other procedures in this
context: user demonstrations, technical adjudication and acceptance tests, and
outlines their implications.  The paper concludes with a discussion of the
challenges for HCI knowledge and practice of a contractual environment, and the
comparisons to be made with other disciplines.

%M C.BCSHCI.88.179
%T A User Oriented Design Process for User Recovery and Command Reuse Support
%S Implementation Tools
%A Yang, Yiya
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 179-198
%K Undo, Redo, Reuse, User requirements
%* (c) Copyright 1988 British Informatics Society Ltd.
%X This report discusses the typical working environment of user recovery and
command reuse support and defines the range of services provided by it.  A
user-oriented design process for user recovery and command reuse support is
described that ascribes a central role to empirical and analytical evaluation.
The results of a survey of users' views upon existing and idealised user
recovery and command reuse support is reported and discussed.  In addition,
literature informed analysis is used to explore the issues of support
representation and command history organisation.  Both are used to illustrate
how design considerations enter into design process stages for user recovery
and command reuse support.  A four component architecture for such support is
proposed to underpin these considerations comprising a context information
base, a recovery knowledge base, an application model and a recovery manager.

%M C.BCSHCI.88.199
%T Issues Governing the Suitability of Programming Languages for Programming
Tasks
%S Implementation Tools
%A Petre, Marian
%A Winder, Russel
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 199-215
%K Naturalness, Coding, Computational model
%* (c) Copyright 1988 British Informatics Society Ltd.
%X This research was provoked by assertions in the literature about the
'obvious naturalness' of particular programming languages for general
programming.  It was intended to uncover principal issues governing the
suitability of general purpose programming languages for expressing different
types of solutions and to observe factors which obstructed coding or inhibited
it altogether.  The study required experts to program solutions to a variety of
problems in several languages, in order to exercise their opinions and
expertise.  The general pattern which emerged from the protocols was that
experts devised solutions not in terms of a particular programming language,
but in terms of a pseudo-language which was a patchwork of different notations
and approaches, implying that they found different languages appropriate for
different aspects of solution, and that they used a personal computational
model which was an amalgam of all their computational knowledge.  Solutions so
devised were coded into a given programming language, often with heavy
translation overheads, particularly for data structures.  Once a satisfactory
algorithm was adopted, experts resisted a change of algorithm unless provoked
strongly.  Three sources of irritation in coding were reported consistently:
inadequate data structuring tools, inefficiency, and poor interaction
facilities.

%M C.BCSHCI.88.217
%T SEE: A Safe Editing Environment; Human-Computer Interaction for Programmers
%S Implementation Tools
%A Harris, J. Rodger
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 217-233
%K Programming environment, Software engineering tool kit, Rapid prototyping,
User centred programmer support, Interactive design, Stepwise refinement
%* (c) Copyright 1988 British Informatics Society Ltd.
%X User-centred design of interactive systems requires many iterations of
design and implementation.  Software engineering methodologies for software
development base their approach on the life cycle and stepwise refinement
which, it is assumed, dictate an orderly development.
   One of the problems software engineers must overcome is the control and
review of multiple versions which are needed for comparison purposes as the
development proceeds.  The programmers' support provided by system designers,
even when used by experts, often leads to misuse and loss of vital information.
Even sophisticated source code control systems are not used consistently when
developing alternative versions, so leading to loss of working examples for
demonstration to users.
   This user-centred source code control for programmers is based on stepwise
refinement and allows the development of alternative prototypes to be
controlled by the programmer(s) in any available language.  A number of design
principles have been developed and put into practice; a working version has
been added to an existing programming environment and evaluated with a user
population of novice, intermittent and expert programmers.  The system is
called the Safe Editing Environment (SEE) and is implemented in the Unix
operating system.

%M C.BCSHCI.88.237
%T User-Driven Adaptive Behaviour, A Comparative Evaluation and an Inductive
Analysis
%S Systems Support
%A Brooks, A.
%A Thorburn, C.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 237-255
%K User-driven, Adaption, Evaluation, Help system, Induction
%* (c) Copyright 1988 British Informatics Society Ltd.
%X The comparative effectiveness of user-driven adaption has remained
unevaluated until now.  An experiment is reported in which two groups of
subjects made use of separate text-based interfaces to an operating system
environment.  One group made use of a traditional interface with a help system,
the other made use of a user-driven adaptive interface.  The latter group of
subjects could move between three different interface styles by a single
function key-stroke at any request for input.  Both interfaces were built using
CONNECT and the experiment was carried out within a research paradigm promoted
by Brooks.  The group using the traditional interface was found to have
requested help significantly more often than the number of times the other
group pressed the function keys and four of the subjects commented negatively
on the entry/exit nature of the help system.  User-driven adaption was
otherwise found not to enhance interaction.  Interpretations are placed upon
subjects' behaviour at the user-driven adaptive interface and compared with
those made of the results of an earlier experiment.

%M C.BCSHCI.88.257
%T Contextual Structure Analysis of Microcomputer Manuals
%S Systems Support
%A Chimura, Hiroyasu
%A Kato, Hiroshi
%A Mitani, Hiroyuki
%A Sato, Takahiro
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 257-274
%K Human computer interaction, Microcomputer manuals, Improving quality of
manuals, Contextual structure analysis, ISM (interpretive structural modeling)
%* (c) Copyright 1988 British Informatics Society Ltd.
%X With the rapid diversification and popularization of microcomputers, the
necessity for good manuals is increasing.  Manuals play an important role in
human computer interaction.  Most manuals, however, are hard to understand.  It
is necessary to develop methodologies, methods and technologies for improving
the quality of manuals.
   The authors considered that contextual structure plays an important part in
readability.  From this point of view, a method was developed for manuals
contextual structure analysis and evaluation applying ISM (Interpretive
Structural Modeling) method which is one means for structurally modeling a
system.  Use of the method helps manual developers to graphically express the
whole contextual structure for manuals and to find any logical inconsistency.
   This paper describes the basic idea and the method, and then demonstrates
the feasibility of using the method through actual applications.

%M C.BCSHCI.88.275
%T Information Flow in a User Interface: The Effect of Experience and Context
on the Recall of MacWrite Screens
%S Systems Support
%A Mayes, J. Terry
%A Draper, Stephen W.
%A McGregor, Alison M.
%A Oatley, Keith
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 275-289
%K HCI, Information flow, Learning, Recall, Interface design, Documentation,
MacWrite, Minimal manual
%* (c) Copyright 1988 British Informatics Society Ltd.
%X A major theoretical and practical concern in HCI is to discover and
characterise what it is that users know -- of what their expertise consists. 
We have tested what users remember of the detailed content of the MacWrite
interface.  We found that even experienced users can recall little of the menu
contents, even though during use those menus are the instruments of their
successful performance.  It seems that the necessary information is picked up,
used, and discarded; it is not learned in the sense that commands are learned.
More exactly, users retain only enough information for recognition, not the
much greater amount required for recall.  This has implications for predicting
learning times (not having to learn commands even for skilled performance
should make for fast skill acquisition), and for writing documentation (no need
to teach what won't be learned): thus the 'information flow' view of human
action (Norman & Draper [1986]) can be used to re-interpret the findings and
recommendations of the 'minimal manual' approach developed by Jack Carroll and
his associates (Carroll [1984a]; Carroll [1984b]).

%M C.BCSHCI.88.291
%T Can Cognitive Complexity Theory (CTT) Produce an Adequate Measure of System
Usability?
%S Systems Support
%A Knowles, Christine
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 291-307
%K Cognitive complexity theory (CCT), User knowledge requirements, Domain
representation, CAD systems, Interface complexity
%* (c) Copyright 1988 British Informatics Society Ltd.
%X Superficial interface characteristics alone (e.g., mouse movements, command
names, syntax) cannot adequately explain novices' learning difficulties.  A
source of error in user/system interaction can occur when there is a mismatch
between the system and the user in terms of the way in which the domain is
being represented by the system and the user's ability to carry out tasks which
effect changes in the domain.
   Kieras and Polson (1985), proposed that cognitive complexity theory (CCT)
could provide some quantitative measure of the usability of an interface.  CCT
represents job-task knowledge using production rules, which in conjunction with
a task-to-device mapping structure attempts to provide a formal description of
both user knowledge and device behaviour.  CAD systems in the fashion industry
provide an interesting opportunity to assess CCT by focusing on the highly
skilled design activity of pattern cutting.  This study tests the basic tenets
of CCT and its ability to predict errors and learning difficulties when using
CAD tools for pattern cutting, and goes on to suggest that the quality of the
system's representation of the domain can, in part, determine interface
complexity such that a purely quantitative measure of user-task knowledge
(e.g., counting production rules) is both limited in application and
inappropriate as a reliable metric for evaluating sources of complexity in an
interface.

%M C.BCSHCI.88.309
%T Training for Optimising Transfer between Word Processors
%S Systems Support
%A Pollock, Clare
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 309-328
%K Transfer, Training, Word processors, Frames
%* (c) Copyright 1988 British Informatics Society Ltd.
%X This paper describes research which aims to develop a type of training
programme for users changing from one word processor to another.  The training
seeks to maximise the positive and minimise the negative transfer of knowledge
about one system to another and thus improve the users' performance on the
second system.  Evidence is first presented which indicates that transfer may
be a problem for such users.  A model is, then, described which is used to
interpret this evidence and to develop different training solutions.  Three
types of training which can be related to the model were tested and all were
found to reduce the problem.  On the basis of these results, further training
programmes were developed which were more efficient.  The results of an
experiment which compared the second set of programmes, are next described. 
The experiment showed that one type of training was superior to the others. 
This training gave the subjects low level information about the second system
as well as relating it to the first.  However, this effect was not consistent
over all of the tested functions.  The differences between the functions are
interpreted in terms of the model and the utility of the model in aiding the
development of training is discussed.

%M C.BCSHCI.88.329
%T Measuring User Satisfaction
%S Systems Support
%A Kirakowski, Jurek
%A Corbett, Mary
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 329-338
%K Evaluation, Metric, User development
%* (c) Copyright 1988 British Informatics Society Ltd.
%X The Computer User Satisfaction Inventory (CUSI) is a system independent
evaluation metric questionnaire.  It provides an indication of the individual's
feelings of satisfaction along two dimensions: competence and affect.  This
paper presents data on the relationship between CUSI scores and other, more
system dependent, metrics and discusses the role of user satisfaction in the
development of user ability.
   The relationship between the CUSI profiles and other metrics indicates that
CUSI measures aspects of users in a way that is neither context sensitive nor
labour intensive, unlike other measures derived from, for example, console
logs, interviews, and diaries.
   CUSI's two subscales of affect and competence work in accordance with what
is hypothesised on the basis of the self efficacy theory of Bandura.  When we
look at a longitudinal profile of user adaptation to a computer system we find
an initial period of rapid development characterised by increase in
satisfaction ratings, followed by a relative plateau during which feelings of
competence lag behind those of affect.  After this plateau stage users begin to
try experimenting with more advanced features of the interface.

%M C.BCSHCI.88.341
%T A Review of Human Performance and Preferences with Different Input Devices
to Computer Systems
%S Input/Output
%A Milner, N. P.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 341-362
%K Input devices, Speed, Accuracy, Subjective preference, Literature review
%* (c) Copyright 1988 British Informatics Society Ltd.
%X A large number of studies exist which compare different computer input
devices.  Under experimental conditions no single device has been found to be
consistently more appropriate than any other for Human-Computer interaction.
   An extensive literature review has been undertaken of papers which compare
the performance of different input devices.  In the studies reviewed, all the
devices have been compared on either speed, accuracy or subjective preference
or a combination of these three measures.  Whilst it is accepted that there are
studies which contradict one another, the following general conclusions can be
drawn.
 1. For fixed choice, low resolution applications the most direct input device
    (e.g., a touch sensitive screen) is quickest and most liked by subjects.
 2. For quick and accurate selection or manipulation of high resolution objects
    indirect input devices are better than direct devices.
 3. There is no clear evidence to support the mouse, joystick or trackball as
    being the best high resolution indirect input device.
 4. In comparative studies, cursor keys and function keys perform poorly against
    other input devices.
 5. Experimental tasks and the specific design of the input device have a large
    effect on the empirical results.

%M C.BCSHCI.88.363
%T A Gesture Based Text Editor
%S Input/Output
%A Welbourn, L. K.
%A Whitrow, R. J.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 363-371
%K Gestures, Text editing, Electronic paper
%* (c) Copyright 1988 British Informatics Society Ltd.
%X This paper describes a text editor which has been designed to mimic the
usual pen and paper type of editing.  Hand-drawn gestures are used to specify
the editing task.  The use of gestures as an interface becomes more important
with the advent of the electronic paper.  The user specifies the editing task
and its range by drawing the gesture on a tablet.  The 'ink' of the pen appears
on a screen, allowing the user to see what is drawn.  The recognition of the
gesture is on-line in its nature and the results of the edit are displayed
immediately.  Typically, two horizontal lines drawn through a word will be
recognised as a delete operation, and the word will be removed from the
display.  The editing operations described include deletion, insertion, new
paragraph, block moves and page formatting.  The editor has been designed to
work on both cursive and ascii text.  The output document from the editor is
directed to a character recogniser for recognition purposes.  The choice of
gestures and their recognition is described and discussion of the user
acceptability given.

%M C.BCSHCI.88.373
%T Towards the Construction of a Maximally-Contrasting Set of Colours
%S Input/Output
%A Van Laar, Darren
%A Flavell, Richard
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 373-389
%K Colour displays, Contrast effects, Information display, Psychophysics
%* (c) Copyright 1988 British Informatics Society Ltd.
%X Two experiments are reported.  The first investigates the relationship
between hue, lightness and saturation in determining colour contrast in
displays, the second examines the effect of surrounding and adjacent colours on
the perception of stimuli in colour displays.  All subjects taking part in the
experiments had normal colour vision.  Hue difference between stimuli was found
to exert the biggest single effect on colour contrast, with similar hues being
discriminated significantly more slowly than different hues.  Lightness
difference also produced a significant effect in the same direction. 
Saturation effects were surprising in that more similar saturations were
associated with significantly faster reaction times.  In the second experiment
strong brightness and hue context (induction) effects were observed but effects
due to target size and saturation did not reach significance.  The relevance of
these findings to designers of colour displays is discussed.

%M C.BCSHCI.88.391
%T Gripe: A Graphical Interface to a Knowledge Based System which Reasons about
Protein Topology
%S Input/Output
%A Seifert, Kathryn
%A Rawlings, Christopher
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 391-406
%K Graphics, Interface, Knowledge-based, Protein, Topology, Prolog
%* (c) Copyright 1988 British Informatics Society Ltd.
%X GRIPE is an interactive graphical interface to a knowledge based system
which reasons about the topological structure of proteins.  The knowledge based
system, TOPOL, derives symbolic, declarative representations of protein
topology from the underlying three-dimensional coordinates of protein
structural elements.  The use of the topological representation rather than the
complex three-dimensional displays provided by most molecular graphics systems
is intended to make it easier for a biologist (or a computer program) to
perceive certain kinds of structure and symmetry in proteins, thus easing
analysis and comparison.  In particular, the topological representation is
useful for the detection of topological motifs, which are common folding
patterns taken by the proteins.  GRIPE was developed to facilitate the use of
TOPOL by molecular biologists as it allows the user to construct graphical
queries about the presence of linear and topological structures in selected
proteins.  GRIPE also provides facilities for viewing the three dimensional and
topological structures of the proteins.  The interface provides an easy and
effective way to examine protein structure.

%M C.BCSHCI.88.407
%T Graphical Prototyping of Graphical Tools
%S Input/Output
%A England, David
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 407-420
%K Specification, Prototyping, Evaluation
%* (c) Copyright 1988 British Informatics Society Ltd.
%X This paper describes a tool set for the interactive specification and
construction of graphical user interfaces.  It combines a specification method,
Object-ATN, with a painting tool to describe interface objects.  Interfaces can
then be simulated for user testing and evaluation.  The tool set is part of the
ECLIPSE Integrated Project Support Environment but is not limited to producing
user interfaces for that environment.

%M C.BCSHCI.88.421
%T A Comparison of Hypertext, Scrolling and Folding as Mechanisms for Program
Browsing
%S Input/Output
%A Monk, Andrew F.
%A Walsh, Paul
%A Dix, Alan J.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 421-435
%K Hypertext, Scrolling, Folding, Browsing, Literate programming
%* (c) Copyright 1988 British Informatics Society Ltd.
%X Hypertext removes some of the constraints of conventional linear text by
providing mechanisms for physically realizing the conceptual links between
related sections of material.  This research examines the use of a hypertext
browser with a literate program.  A literate program has a sequential
structure, in that it is divided into sections presented in a particular order,
and a hierarchical structure, in that some sections 'use' other sections.
   Two experiments are described which compare the performance of users
browsing the same program presented either as a linear or hypertext structure.
In Experiment 1 one group used a hypertext browser the other two scrolling and
folding browsers.  The hypertext browser is shown to be inferior to the
scrolling browser under these particular circumstances.  In a second experiment
two further groups of users were tested, one of which was provided with an
overview of the hypertext structure.  This manipulation removed the
disadvantage demonstrated in Experiment 1.  It is concluded that while
hypertext presents many new opportunities to the interface designer, it also
raises new problems.  In particular, the importance of providing an overview or
map of the hypertext structure is demonstrated.

%M C.BCSHCI.88.437
%T Hypertext Tips: Experiences in Developing a Hypertext Tutorial
%S Input/Output
%A Hardman, Lynda
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 437-451
%K Hypertext
%* (c) Copyright 1988 British Informatics Society Ltd.
%X Hypertext is a next step in the sophistication of presenting text and
graphics to users.  One of the major HCI issues is how an author presents
information to the reader in an easily comprehensible way.  This is problematic
because designing a hypertext is even more difficult than designing a good
linear document, which is already difficult enough.  Furthermore, at the
present time, there are only a small number of good examples of hypertexts.
   This paper examines the development of a hypertext, written using the Guide
hypertext system, for presenting a tutorial on the structure of the brain to
physiology students.  The paper describes a number of points that were raised
during the authoring of the tutorial.  These points are formed into guidelines
which suggest how to structure a hypertext and how to make the layout of the
information in a hypertext clearer.
   The Guide hypertext system allow links from graphics to text, whereas paper
allows only links from text to graphics.  The use of this extra dimension is
discussed.
   The paper is intended to give advice on creating a hypertext for authors new
to the concept.

%M C.BCSHCI.88.453
%T Optimum Display Arrangements for Presenting Visual Reminders
%S Input/Output
%A Findlay, John M.
%A Davies, Simon P.
%A Kentridge, Robert
%A Lambert, Anthony J.
%A Kelly, Justine
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 453-464
%K Visual displays, Windows, Attention allocation, Peripheral vision, Reminders
%* (c) Copyright 1988 British Informatics Society Ltd.
%X Developments in technology now allow designers to make use of a wide variety
of layouts to present material at an interactive terminal.  Our understanding
of perceptual and cognitive processes shows that various tradeoffs will need
consideration in evaluating such layouts (availability of material vs screen
clutter; reliance on user memory vs use of reminders etc).  We approach these
through the framework of attentional switching.
   We shall report an experimental study which evaluates these tradeoffs in a
frequently encountered text editing situation.  Our editor may be set to either
'insert' or 'overtype' mode.  This information can be displayed with varying
prominence in a peripheral window on the screen, displayed as a change of
cursor, or omitted from the screen display.  We have monitored user interaction
at a keystroke level during text editing sessions and show that the different
forms of presentation of reminder information can result in substantial
differences in performance.

%M C.BCSHCI.88.465
%T Flexible Intelligent Interactive-Video
%S Input/Output
%A Webb, T.
%A Jameson, D. G.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 465-475
%K Interactive video, Expert system, Human-computer interface
%* (c) Copyright 1988 British Informatics Society Ltd.
%X University College and Middlesex School of Medicine are producing two
interactive video (IV) discs for use in teaching Clinical and Surgical
management.  The system is designed to provide three modes of interaction and
will have as its core an expert system on the domain covered by the disc.  The
combination of a knowledge-based system and video is very rich in information.
The interface for such a system requires a format familiar enough for the user
to assimilate it rapidly, but flexible enough to deal with the range of
possible situations and combinations of information formats.  Some lessons
learnt from a previous IV project are discussed and some problems raised by the
new system are aired.  The authors have found like many before them, that
paper-based information systems provide useful guidelines for effective
presentation.

%M C.BCSHCI.88.477
%T The Application of Cognitive Psychology to CAD
%S Input/Output
%A Dillon, Andrew
%A Sweeney, Marian
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 477-488
%K Cognitive psychology, CAD, Interface design, Protocol analysis
%* (c) Copyright 1988 British Informatics Society Ltd.
%X The design of usable human-computer interfaces is one of the primary goals
of the HCI specialist.  To date however interest has focussed mainly on office
or text based systems such as word processors or databases.  Computer aided
design (CAD) represents a major challenge to the human factors community to
provide suitable input and expertise in an area where the users goals and
requirements are cognitively distinct from more typical HCI.
   The present paper is based on psychological investigations of the
engineering domain, involving an experimental comparison of designers using CAD
and the more traditional drawing board.  By employing protocol analytic
techniques it is possible to shed light on the complex problem-solving nature
of design and to demonstrate the crucial role of human factors in the
development of interfaces which facilitate the designers in their task.  A
model of the cognition of design is proposed which indicates that available
knowledge and guidelines alone are not sufficient to aid CAD developers and the
distinct nature of the engineering designer's task merits specific attention.

%M C.BCSHCI.88.491
%T How Much is Enough?  A Study of User Command Repertoires
%S Dialogue Design
%A Anstey, Paddy
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 491-507
%K User command repertoires, Computing service organisation, Software
environments
%* (c) Copyright 1988 British Informatics Society Ltd.
%X A critical examination of the VAX/VMS command repertoires of users of a
university computing service has been possible following the automatic logging
of all operating system commands issued by all users over a period of six
months.  After preliminary investigation, users selected from a variety of
backgrounds and with considerable experience on the system were interviewed to
probe the perceived adequacy of their repertoires for their particular tasks,
and to determine factors which appear to affect command repertoire development.
   A surprisingly restricted command set was revealed amongst user communities
in many disciplines, including some with a substantial tradition of computing
-- and a common core of popular commands across all disciplines was readily
identified.  Users interviewed were generally satisfied with their command
repertoires but it was clear from discussion that many users could be more
effective if they had a greater grasp of the system, not least for
'housekeeping' activities.  Whatever their attitude to computing as an
activity, the users were all applications-driven and mostly gave the learning
of the 'extras' a low priority relative to the many other demands on their
time, even though the possible benefits were in some cases perceived.
   The findings from this study are given in detail, and the implications for
organisational and software changes discussed.

%M C.BCSHCI.88.509
%T Generative Transition Networks: A New Communication Control Abstraction
%S Dialogue Design
%A Cockton, Gilbert
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 509-527
%K UIMS, Dialogue specification, Generative transition networks, Operational
sequences, Dialogue determination, Formal methods
%* (c) Copyright 1988 British Informatics Society Ltd.
%X The sequences of operations which are possible in the use of an interactive
system can be modelled with different formal structures.  Human factors and
software engineering both set requirements for the design or selection of these
formal structures.  This paper surveys the requirements for operation sequence
specification techniques for User Interface Management Systems, dialogue
specification and early evaluation.  To date, most formal structures have been
selected from control models developed for other aspects of system
specification.  These selections have failed to satisfy all requirements
equally.  A new formal structure, the Generative Transition Network is
presented which has been designed to satisfy known requirements without bias.

%M C.BCSHCI.88.529
%T Text Processing by Speech: Dialogue Design and Usability Issues in the
Provision of a System for Disabled Users
%S Dialogue Design
%A Hewitt, Jill
%A Furner, Stephen
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 529-544
%K Dialogue design, Usability engineering, Text processing, Speech recognition
%* (c) Copyright 1988 British Informatics Society Ltd.
%X Commercial speech recognition systems are available as 'add-on' units for
popular office micro-computers.  A typical office system has been employed to
provide a 'transparent' interface to an ordinary text processing package so
that it can be used by the disabled.  This paper describes the prototyping
carried out to develop the dialogue offered by the system as a result of
addressing its user performance characteristics.

%M C.BCSHCI.88.547
%T User Requirements for Expert System Explanation: What, Why and When?
%S Artificial Intelligence Issues
%A Rogers, Yvonne
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 547-564
%K Expert systems, Explanation
%* (c) Copyright 1988 British Informatics Society Ltd.
%X It is generally assumed that one of the important features of an expert
system is that it provides relevant and informative explanations regarding
different aspects of the system's reasoning.  As yet, however, most current
systems provide very poor explanation facilities.  This paper reports on a
study that investigated the extent and types of explanation required by novices
to satisfy their needs in understanding deductions made by an expert system. 
Using the 'Wizard of Oz' technique where, unknown to the subject, a person
provides a simulation of the system as an expert an experiment was carried out
which looked at the usefulness of various types of explanation.  Two types of
explanation and their combination were compared.  These were 1) rule-based 2)
condition-based and 3) rule and condition.  The results showed that all users
accessed the explanation facility and that the level of user satisfaction was
found to depend on the type of explanation provided.  In general, the rule and
condition group found the explanations to be the most satisfying and useful.  A
further experiment was carried out to evaluate the type of questions users ask
when the dialogue was not initiated by the system.  The findings from both
studies are discussed in relation to the task demands and the level of user
understanding.

%M C.BCSHCI.88.565
%T Knowledge Elicitation: Dissociating Conscious Reflections from Automatic
Processes
%S Artificial Intelligence Issues
%A Stevenson, R. J.
%A Manktelow, K. I.
%A Howard, M. J.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 565-579
%K Knowledge elicitation, Experts, Novices, Thinking
%* (c) Copyright 1988 British Informatics Society Ltd.
%X One major difficulty with standard techniques of knowledge elicitation is
that they require an expert to give a verbal report of his or her knowledge. 
This assumes that people have conscious access to all of their cognitive
processes.  'Thinking aloud' techniques explicitly make this assumption. 
However, recent developments in cognitive psychology suggest that this
assumption is not appropriate.  When solving a problem, people may use fast,
automatic processes which are not available to conscious reflection.  These
fast automatic processes can be distinguished from conscious reflection.
   Two computer programming experts were videoed while each taught a class of
students some basic programming concepts.  Four 'novice' students from each
class were also videoed while explaining the taught material to another person.
These videos recorded the fast, automatic actions of people describing
concepts.  A week later, each person's video was played back to them and key
questions were asked about the subject's intentions at different points in the
video.  These interviews recorded the conscious evaluations and interpretations
of the original performance.  The reports given at these interviews were
classified into production rules.  A standard knowledge elicitation technique
was also used on the same subjects and the same material.  Subjects were
presented with ten concept names from the lectures and carried out paired
comparisons of the ten concept names.  The outcome of the paired comparisons
was then subjected to multidimensional scaling.  The type and extent of the
knowledge elicited in the two situations is compared for both experts and
novices.

%M C.BCSHCI.88.581
%T GOMS Meets STRIPS: The Integration of Planning with Skilled Procedure
Execution in Human-Computer Interaction
%S Artificial Intelligence Issues
%A Simon, Tony
%A Young, Richard M.
%B Proceedings of the HCI'88 Conference on People and Computers IV
%D 1988-09-05
%P 581-594
%K User models, Planning, Problem solving, Routine skill
%* (c) Copyright 1988 British Informatics Society Ltd.
%X In the context of modelling user behaviour in HCI, deliberate planning based
on problem solving and the fluent execution of skilled procedures are usually
treated as different kinds of behaviour and modelled by different kinds of
model.  In this paper we draw on previous work which argues that user modelling
requires a different notion of planning from that commonly discussed in the
Artificial Intelligence literature, and show that problem solving and routine
cognitive skill can be regarded as opposite ends of the same continuum.  A
simple planner, making use of a flexible hierarchical representation for plans
and operators, can provide a single mechanism able to generate behaviour
spanning the entire spectrum.  This integration of planning with routine
cognitive skill offers a basis for unifying existing models of HCI and for
extending their scope.

