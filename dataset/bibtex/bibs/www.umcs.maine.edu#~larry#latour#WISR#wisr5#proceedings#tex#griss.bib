% File:	 griss.bib
% Date:	 Tue Sep 29 15:05:33 PDT 1992
 
% DO NOT edit - made by [bib-subset griss]
 
%%	bib-strings.bib
%%	M. Griss

@string{mlg="Martin L. Griss"}
@string{?="<<unknown>>"}

% From the UISYS compilation

@string{AAAI88 = "Proceedings of the Seventh National Conference on
Artificial Intelligence"}
@string{ACM = "Association for Computing Machinery"}
@string{ACMTOSEM = "ACM Transactions on Software Engineering and Methodology"}
@string{CACM 	= "Communications of the {ACM}"}
@string{chi = "Proceedings of the Computer Human Interaction Conference"}
@string{chi88 = "Proceedings of the {ACM} {SIGCHI} 1988"}
@string{chi87 = "Proceedings of the {ACM} {SIGCHI/GI} 1987"}
@string{chi86 = "Proceedings of the {ACM} {SIGCHI} 1986"}
@string{chi85 = "Proceedings of the {ACM} {SIGCHI} 1985"}
@string{cmu = "Carnegie Mellon University"}
@string{cscw88 = "Proceedings of the Conference on Computer-Supported
Cooperative Work 1988"}
@string{cscw86 = "1986 Conference on Computer-Supported Cooperatiave Work"}
@string{d.cs="Department of Computer Science"}
@string{cs.d="Computer Science Department"}
@string{dcs87 = "Proceedings of the Seventh International Conference on Distributed Computing Systems"}
@string{dortmund91 = "Proceedings of the First International Workshop on
Software Reuse"}
@string{ecoop89 = "Proceedings of the European Conference on Object-Oriented Programming"}
@string{ecoop88 = "Proceedings of the 1988 European Conference on Object-Oriented Programming"}
@string{ecoop87 = "Proceedings of the 1987 European Conference on Object-Oriented Programming"}
@string{HICSS18=
  "Proceedings of 18th Hawaii International Conference on System Sciences"}
@string{HICSS20=
  "Proceedings of 20th Hawaii International Conference on System Sciences"}
@string{HICSS22=
  "Proceedings of 22nd Hawaii International Conference on System Sciences"}
@string{HPL="Hewlett-Packard Laboratories"}
@string{HPL-STL="Hewlett-Packard Laboratories/Software Technology Lab"}
@string{ICASE9=
  "Proceedings of 9th International Conference on Software Engineering"}
@string{ICSE12=
  "Proceedings of 12th International Conference on Software Engineering"}
@string{ICSE13=
  "Proceedings of 13th International Conference on Software Engineering"}
@string{ICSE14=
  "Proceedings of 14th International Conference on Software Engineering"}
@string{ICSE15=
  "Proceedings of 15th International Conference on Software Engineering"}
@string{ieee="IEEE"}
@string{ieeecom="IEEE Computer"}
@string{ieeeex="IEEE Expert"}
@string{ieeesoft = "IEEE Software"}
@string{ieeetose = "IEEE Transactions on Software Engineering"}
@string{ijmms = "International Journal of Man-Machine Studies"}
@string{ISS91 =
  "Proceedings of the 1991 Irvine Software Symposium"}
@string{ISS92 =
  "Proceedings of the 2nd Irvine Software Symposium - ISS'92"}
@string{joop = "Journal of Object-Oriented Programming"}
@string{mit ="MIT"}
@string{oods86 = "Proceedings of the International Workshop on Object-Oriented Database Systems"}
@string{oopsla86 = "{OOPSLA} '86 Conference Proceedings"}
@string{oopsla87 = "{OOPSLA} '87 Conference Proceedings"}
@string{oopsla88 = "{OOPSLA} '88 Conference Proceedings"}
@string{oopsla89 = "{OOPSLA} '89 Conference Proceedings"}
@string{oopsla90 = "{OOPSLA} '90 Conference Proceedings"}
@string{oopsla91 = "{OOPSLA} '91 Conference Proceedings"}
@string{oopsla92 = "{OOPSLA} '92 Conference Proceedings"}
@string{osu="Oregon State University"}
@string{osu.ad="OSU, Corvallis, OR 97331"}
@string{pisa93 = "Proceedings of the Second International Workshop on Software Reuse"}@string{practsoft = "Proceedings of the ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments"}
@string{RDNET="R \& D Network"}
@string{scamc89 = "Proceedings of the Thirteenth Symposium on Computer Applications in Medical Care"}
@string{SDE4="Proceedings of the Fourth {ACM} {SIGSOFT} Symposium on Software Development Environments"}
@string{sei="Software Engineering Institute, CMU"}
@string{SEN="Software Engineering Notes"}
@string{SEPC="HP Software Engineering Productivity Conference"}
@string{sigmod87 = "Proceedings of the {ACM} {S}pecial {I}nterest {G}roup on Management of Data"}
@string{tois = "{ACM} Transactions on Office Information Systems"}
@string{UIST	= "Proceedings of the ACM SIGGRAPH Symposium on User Interface Software and Technology"}
@string{usenix89 = "Proceedings of the 1989 Winter USENIX Technical Conference"}
@string{vldb85 = "Proceedings of the Eleventh International Conference on Very Large Databases"}
@string{vldb87 = "Proceedings of the Thirteenth International Conference on Very Large Databases"}
@string{vldb88 = "Proceedings of the Fourteenth International Conference on Very Large Databases"}
@string{vldb89 = "Proceedings of the Fifteenth International Conference on Very Large Databases"}
@string{WISR91 = "Proceedings of the 4th Annual Workshop on Software Reuse"}
@string{WISR92 = "Proceedings of the 5th Annual Workshop on Software Reuse"}

@inproceedings{ambras89
  ,author="Jim Ambras and Pankaj K. Garg and Randy Splitter"
  ,title="The {W}orkshop: {A} {T}eam {P}rogramming {E}nvironment"
  ,booktitle="Proceedings of the 1989 HP European Software Engineering
Conference"
  ,month= may
  ,year= 1989
  ,keywords="environment,hypertext,team-support, software-engineering"
  ,abstract={}
  ,comments="Also HP Labs report number STL-TM-89-09 (Company
Confidential)"}

@ARTICLE{barnes91
  ,TITLE = "Making Reuse Cost-Effective"
  ,AUTHOR = "Bruce Barnes and Terry B. Bollinger"
  ,affil = "National Science Foundation, Contel Technology Center"
  ,JOURNAL=IEEESOFT
  ,YEAR=1991
  ,volume="8"
  ,number="1"
  ,month=Jan
  ,pages="13-24"
  ,entered-by="Martin Griss,Wosser"
  ,status="need to reread"
  ,found-in="mlgfiles"
  ,keywords="reuse, economics, model, plan, reuse investments, broad
spectrum, variant analysis, component generality, parameterization."
  ,refs ={
 M.D. Lubars, "Wide-Spectrum Support for Software Reusability", in
Software Reuse: Emerging Technology, Will Tracz, ed., CS Press, Los
Alamitos, Calif. 1988, pp.275-281;
 V.R. Basili and H.D.  Rombach, "Towards a Comprehensive Framework for
Reuse: A Reuse-Enabling Software Evolution Environment," Tech. Report
CS-TR-2158, Dept. of Computer Science, Univ. of Maryland, College
Park, Md., Dec. 1988;
 T. Biggerstaff and C. Richter, "Reusability Framework, Assessment,
and Directions," IEEE Trans. Software, March 1987, pp.41-49;
 F.J. Polster, "Reuse of Software through Generation of Partial
Systems,"IEEE Trans. Software Eng., March 1986, pp. 402-416;
 L. Latour and E. Johnson, "Seer: A Graphical Retrieval System for
Reusable Ada Software Modules," Third Int'l. Conf. Ada Applications
and Environments, IEEE Piscataway, N.J., May 1988, pp. 105-113;
 P.G.  Bassett, "Frame-Based Software Engineering," IEEE Software,
July 1987, pp. 9-16;
 M.A. Simos, "The Domain-Oriented Software Life Cycle: Towards an
Extended Process Model for Reusability," in Software Reuse: Emerging
Technology, Will Tracz, ed., CS Press, Los Alamitos, CA, 1988, pp.
354-363;
 M. Lenz, H.A. Schmid, and P.F. Wolf, "Software Reuse through Building
Blocks," IEEE Software, July 1989, pp. 34-42;
 T. Bollinger and B.H. Barnes, "Reuse Rules: An adaptive Approach to
Reusing Ada Software", Proc. Artificial Intelligence and Ada Conf.
George Mason Univ., Fairfax, VA 1988, pp. 14-1-14-8;
 V.R. Basili and H.D. Rombach, "The TAME Project: Towards
Improvement-Oriented Software Environments," IEEE Trans. Software
Eng., June 1988, pp. 758-773.}
  ,abstract = {Software reuse must be recognized as having the same
cost and risk features as any financial investment. This article
suggests analytical approaches for making good reuse investments.}
  ,comments={Point of view that Reuse is more than reuse of Software, it is
	reuse of human problem solving (a scarce resource).  Suggest a
	broad spectrum, not just source code, and that a reuse mindset
	is one of fundamentals of proper software development, not just a
	technology or methodology. Reuse complements automation.
	The paper provides models and diagrams to discuss ROI in a
	producer/consumer relationship.  Highlights the need for
	incentives, design for reuse, distinction of stable/variant
	parts, design for change etc.
   }
  }

@TECHREPORT{basili88a
  ,TITLE = "Towards a Comprehensive Framework for Reuse: A Reuse-Enabling
  Software-Evolution Environment"
  ,AUTHOR = "Victor R. Basili and H. D. Rombach"
  ,affil  = "University of Maryland"
  ,organization="Computer Science Department"
  ,institution="University of Maryland"
  ,YEAR = 1988
  ,month =dec
  ,pages = "?"
  ,entered-by = "Martin Griss"
  ,found-in = "basili90"
  ,status = "not seen"
  ,keywords = ""
  ,comments ={}
  ,refs   = {}
  ,abstract  = {}
  }


@MISC{basili90a
  ,title = "The Experience Factory: Packaging Software Experience"
  ,author = "Victor R. Basili"
  ,affil  = "Institute for Advanced Computer Studies"
  ,howpublished = "Slides, Dept. CS., U of Maryland~"
  ,year = 1990
  ,month = jun
  ,entered-by = "Griss"
  ,found-in = "Navarro's collection; my cabinet"
  ,status   = "~"
  ,keywords = "process, slides, reuse, GQM, Experience Factory"
  ,refs     = "~"
  ,comments = {~}
  ,annote   = {~}
  ,note     = {~}
  ,abstract = {~}
  }
@INPROCEEDINGS{basili91
  ,TITLE = "Component Factory and Software Reuse"
  ,AUTHOR = "Victor Basili and Gianluigi Caldiera and Giovanni Cantone"
  ,affil  = "CSD, University of Maryland and University of Naples, Italy"
  ,BOOKTITLE = "Proceedings of the First International Workshop on Software Reusability"
  ,YEAR = 1991
  ,month = jun
  ,editor = "R. Prieto-Diaz and others"
  ,pages = "52-59"
  ,organization = ""
  ,publisher = "University of Dortmund"
  ,address = "Germany"
  ,entered-by = "Wosser"
  ,found-in = "cabinet"
  ,status   = ""
  ,keywords = "component factory, reference architecture, instantiation"
  ,refs     = "5"
  ,comments = {}
  ,note     = {}
  ,abstract = {The critical features of an organization focused on reuse
are flexibility and continuous improvement.  In order to achieve them, we
represent the architecture of the component factory at different levels of
abstraction and define a reference architecture from which specific
architectures can be derived by instantiation.}
  }


@ARTICLE{basili92
  ,TITLE = "A {R}eference {A}rchitecture for the {C}omponent {F}actory"
  ,AUTHOR = "Victor R. Basili and Gianluigi Caldiera and Goivanni Cantone"
  ,affil  = "U. Maryland; and Universite di Napoli"
  ,JOURNAL = ACMtosem
  ,YEAR = 1992
  ,month = jan
  ,volume = 1
  ,number = 1
  ,pages = "53-80"
  ,entered-by = "Griss"
  ,found-in = "MLG files; journal"
  ,status   = "skim"
  ,keywords = "component-factory; experience-factory;
   reference-architecture; reusability"
  ,refs     = "~"
  ,comments = {~}
  ,annote   = {~}
  ,note     = {(TBD)}
  ,abstract = {~}
  }
@inproceedings{beach92a
 ,title={Bus-based Kits for reusable Software}
 ,author={Brian W. Beach and Martin L. Griss and Kevin D. Wentzel}
 ,affil={Hewlett-Packard Laboratories}
 ,booktitle={Proceedings of ISS'92, UCI, Irvine, March 6}
 ,year=1992
 ,month=mar
 ,pages={19-28}
 ,keywords={reuse, software bus, megaprogramming, software glue}
 ,note={}
 ,abstract={
Hewlett-Packard's interest in a reuse-based software construction
process involves both a corporate reuse program and research into
methods and technology.  We describe research in domain-specific,
architecture driven, reuse-based software construction technology,
specifically the notion of domain-specific kits.  This work is explored
in the context of distributed information management environments.}
}

@ARTICLE{boehm88
  ,AUTHOR = "B. W. Boehm"
  ,affil  = "TRW"
  ,TITLE = "A Spiral Model of Software Development and Enhancement"
  ,JOURNAL = ieeecom
  ,YEAR = 1988
  ,month = may
  ,volume = "21"
  ,number = "5"
  ,pages = "61-72"
  ,entered-by = "Griss"
  ,found-in = "my collection"
  ,status   = "skimmed"
  ,keywords = "lifecycle,prototyping,risk"
  ,refs     = ""
  ,comments = {}
  ,annote   = {}
  ,note     = {}
  ,abstract = {}
  }

@MISC{boehm90a
  ,title = "Stars Program - Whole is Greater Than Sum of
Parts"
  ,author = "Barry Boehm"
  ,affil  = "DARPA"
  ,howpublished = "(Unpublished talk at 4th ACM Symposium SDE, Irvine, CA.)"
  ,year = 1990
  ,month = Dec
  ,entered-by = "Wosser"
  ,found-in = "cabinet"
  ,status   = ""
  ,keywords = ""
  ,refs     = ""
  ,comments = {}
  ,abstract = {none; slides}
  }

@article{cagan90
  ,AUTHOR="Martin R. Cagan"
  ,affil="IDE"
  ,TITLE="The {HP} {Softbench} Environment: {A}n Architecture for a New
   Generation of Software Tools"
  ,journal="Hewlett-Packard Journal"
	,year=1990
	,month=jun
	,pages="36-47"
	,note="(See other papers in this issue.)"
	,abstract={Fill in}
}

@TECHREPORT{creech91
  ,TITLE        = "KIOSK: {A} Hypertext-based Software Reuse
Tool"
  ,AUTHOR       = "Michael Creech and Dennis Freeze and
Martin L. Griss"
  ,affil        = "Hewlett-Packard Laboratories"
  ,INSTITUTION  = "Hewlett-Packard Laboratories"
  ,organization = "Software and Systems Laboratory"
  ,month        = Mar
  ,YEAR         = 1991
  ,number       = "SSL-TM-91-03"
  ,address      = "Palo Alto, CA"
  ,entered-by = "Wosser"
  ,found-in = ""
  ,status   = ""
  ,keywords = "reusable-workproducts, interactive browsers,
Cost ++ library import tool, Kiosk, reuse, software-process,
libraries, hypertext"
  ,refs     = "34"
  ,comments = {}
  ,annote   = {}
  ,note     = {}
  ,abstract = {Making software reuse a systematic part of HP's software
process is considered to be of great importance.  It is widely believed
that several factors influence effective software reuse.  Among these, the
preparation and packaging of software workproducts (e.g. code,
documentation, tests, or designs) into libraries that enhance the user's
ability to find, understand and use them is of significant interest, as is
providing ways in which the user can take advantage of these structured
libraries.  In this paper, we describe a process and technologies that can
facilitate this activity.
Kiosk is a system that contains and manages libraries of
reusable workproducts.  The reusable libraries within Kiosk
have been linked together (via a hypertext representation)
in ways that will enhance a user's ability to find and
understand the components within these libraries.  Kiosk
provides interactive browsers that allow the user to browse
and augment the libraries, as well as a tool (Cost++) for
importing existing software into the Kiosk environment.
This paper includes an overview of the software reuse
problem; a description of Kiosk's architecture, features,
benefits; the finding, editing, and presenting of library
information; the Cost++ library import tool, the structure
of reuse libraries within Kiosk; and an indication of future
directions.}
}

@TECHREPORT{creech91a
  ,TITLE        = "Using Hypertext In Selecting Reusable Software Components"
  ,AUTHOR       = "Michael Creech and Dennis Freeze and
Martin L. Griss"
  ,affil        = "Hewlett-Packard Laboratories"
  ,INSTITUTION  = "Hewlett-Packard Laboratories"
  ,organization = "Software and Systems Laboratory"
  ,month        = May
  ,YEAR         = 1991
  ,number       = "SSL-91-59"
  ,address      = "Palo Alto, CA"
  ,entered-by = "Wosser"
  ,found-in = ""
  ,status   = ""
  ,keywords = "software reuse,software libraries, component selection,
    hypertext, Kiosk"
  ,refs     = "34"
  ,comments = {}
  ,annote   = {}
  ,note     = {In {P}roceedings of {H}ypertext'91, Dec 1991, pp 25-38}
  ,abstract = {Recently, there has been increasing interest in software
reuse as a way to improve software quality and productivity.  One of the
major problems with reusing libraries of software components is helping
users effectively select (find and understand) components of interest.
This paper explores the use of hypertext to enha nce the process of
component selection through a prototype system called Kiosk.  Included are
discussions of the selection process, why hypertext is well suited for
supporting selection, and important characteristics of hypertext systems
intended to support reuse.  Also discussed are how reusable libraries can
be structured using hypertext, how such libraries can be mechanically
built, and how their use enhances the component selection process.

Kiosk consists of an open set of tools that can create, browse, and modify
nodes and links in a software library.  One of these tools, Cost++, can
automatically generate a linked structure for libraries by clustering
workproducts into components, and then placing components into multiple
classification hierarchies.  The Kiosk browsing tools allow users to peruse
the components in libraries, examine library structures from multiple
perspectives, and add new links and nodes to enhance the standard library
structure.}
  }


@INPROCEEDINGS{creech91b
  ,TITLE        = "Using Hypertext In Selecting Reusable Software Components"
  ,AUTHOR       = "Michael Creech and Dennis Freeze and
Martin L. Griss"
  ,affil        = "Hewlett-Packard Laboratories"
  ,BOOKTITLE    = {{P}roceedings of {H}ypertext'91}
  ,INSTITUTION  = "Hewlett-Packard Laboratories"
  ,organization = "Software and Systems Laboratory"
  ,month        = Dec
  ,YEAR         = 1991
  ,pages        = "25-38"
  ,note       = "(Also as HP Labs techreport SSL-91-59)"
  ,address      = "Palo Alto, CA"
  ,entered-by = "Wosser"
  ,found-in = ""
  ,status   = ""
  ,keywords = "software reuse,software libraries, component selection,
    hypertext, Kiosk"
  ,refs     = "34"
  ,comments = {}
  ,annote   = {}
  ,abstract = {Recently, there has been increasing interest in software
reuse as a way to improve software quality and productivity.  One of the
major problems with reusing libraries of software components is helping
users effectively select (find and understand) components of interest.
This paper explores the use of hypertext to enha nce the process of
component selection through a prototype system called Kiosk.  Included are
discussions of the selection process, why hypertext is well suited for
supporting selection, and important characteristics of hypertext systems
intended to support reuse.  Also discussed are how reusable libraries can
be structured using hypertext, how such libraries can be mechanically
built, and how their use enhances the component selection process.

Kiosk consists of an open set of tools that can create, browse, and modify
nodes and links in a software library.  One of these tools, Cost++, can
automatically generate a linked structure for libraries by clustering
workproducts into components, and then placing components into multiple
classification hierarchies.  The Kiosk browsing tools allow users to peruse
the components in libraries, examine library structures from multiple
perspectives, and add new links and nodes to enhance the standard library
structure.}
  }





@BOOK{cusumano91
  ,TITLE = "Japan's Software Factories"
  ,AUTHOR = "Michael A. Cusumano"
  ,affil  = "MIT"
  ,PUBLISHER = "Oxford University Press"
  ,YEAR = 1991
  ,address = "New York"
  ,entered-by = "Griss"
  ,found-in = "Home shelf"
  ,status   = "skim"
  ,keywords = "reuse; process; software-factory; organization"
  ,refs     = ""
  ,comments = {}
  ,annote   = {}
  ,abstract = {(TBD)}
  }
@INPROCEEDINGS{dusink90
  ,TITLE = "Reuse and a Support Environment"
  ,AUTHOR = "E.M. Dusink"
  ,affil  = "Delft University of Technology"
  ,BOOKTITLE = "Third Annual Workshop:  Methods and Tools for Reuse"
  ,YEAR = 1990
  ,month = jun
  ,editor = "W. Frakes"
  ,pages = ""
  ,organization = "CASE Center, Syracuse University"
  ,publisher = ""
  ,address = ""
  ,entered-by = "Dean"
  ,found-in = "mlgfiles"
  ,status   = ""
  ,keywords = ""
  ,refs     = "3"
  ,comments = {}
  ,annote   = {}
  ,note     = {}
  ,abstract = {
   Work described includes a mix of teaching and research, aimed at
   developing methods of teaching design and building an environment
   to systematically support reuse of existing components at several
   phases of the software lifecycle.  The work uses ideas from
   cognitive science, aimed at discovering the methodology for
   designing good methods and problem solving approaches, and to
   clearly describe the steps in a coherent process.  Guidelines
   developed include: separate logical and abstract behavior; use of
   loosely coupled, cohesive components, decreasing information flow;
   perform domain analysis to clarify domain concepts and their
   relationships; have each component express a single concept; define
   clear interfaces.
   Ideas of concept chunking, forward chained problem solving, and the
   ability to be familiar with and handle ~50,000 concepts are
   characteristic of expert problem solvers in several domains -
   environments need to help developers handle many concepts, present
   them in chunks of varying size, and help organize them in various
   ways.  The work suggested some guidelines on better ways to
   document systems for enhanced maintenance, by chunking concepts and
   highlighting alternatives that could have been used.}
  }

@INPROCEEDINGS{frakes90a
  ,AUTHOR = "William B. Frakes"
  ,TITLE = "An Empirical Framework for Software Reuse Research"
  ,affil  = "Software Productivity Consortium"
  ,BOOKTITLE = "Third Annual Workshop:  Methods \& Tools for Reuse"
  ,YEAR = 1990
  ,month = jun
  ,editor = ""
  ,pages = ""
  ,organization = "CASE Center, Syracuse University"
  ,publisher = ""
  ,address = ""
  ,entered-by = "Dean"
  ,found-in = "mlgfiles"
  ,status   = ""
  ,keywords = ""
  ,refs     = "1"
  ,comments = {}
  ,abstract = {In this paper, the reuse problem is modeled in terms of
independent and dependent variables.  Reuse level is the primary dependent
variable - a way to measure it is described.  Classes of independent
variables are identified, and a failure mode model of reuse is proposed as a
way of determining which independent variables are most promising for study.
Experimental methods are briefly surveyed.}
  }

@MISC{frakes91
  ,title = "Software Reuse: an Empirical Approach"
  ,author = "William B. Frakes"
  ,affil = "Software Productivity Consortium"
  ,howpublished = ""
  ,year = 1991
  ,month = ""
  ,entered-by = "Wosser"
  ,found-in = ""
  ,status = ""
  ,keywords = "factors, criteria, libraries, artificial intelligence,
hypertext"
  ,refs = ""
  ,comments = {}
  ,annote = {}
  ,note = {}
  ,abstract = {}
  }

@TECHREPORT{garg92
  ,TITLE        ="Matisse: A Knowledge-based Team Programming Environment"
  ,AUTHOR       = "Pankaj Garg and Thuan Pham and Brian Beach and Anand Desphande 
			and Wendy Fong and Audrey Ishizaki and Kevin Wentzel"
  ,affil        = "STL/SRD"
  ,INSTITUTION  = "Hewlett-Packard Laboratories"
  ,organization = "Software Technology Laboratory"
  ,month        = aug
  ,YEAR         = 1992
  ,number       = "HPL-92-104"
  ,address      = ""
  ,entered-by = "Griss"
  ,found-in = ""
  ,status   = ""
  ,keywords = "Matisse;process;models;team prorgamming; sowftare engineering"
  ,refs     = ""
  ,comments = {}
  ,annote   = { Available as STL-TM-91-08}
  ,note     = {(Submitted for publication.)}
  ,abstract = {The life-cycle of large scale software systems requires the cooperative
effort of several people over extended time periods.  Current
programming environments provide limited support
for such cooperative activities.  We have prototyped a knowledge-based
team programming environment, Matisse, to address this issue.

Within Matisse, we model source code and its associated documents,
people and their tasks, as objects in the system.  Relationships between
these objects provide configuration management and navigation support.
Attributes of objects provide associative retrieval of project
information.  Rules defined on object attributes and relationships
provide project coordination.

In this paper we describe the design and implementation of Matisse.
We describe some experimental use of a prototype Matisse.
We present a novel information management architecture which separates an
individual's information space from a group's (shared) information space.
By incorporating a rule base within the individual's information space, we
demonstrate how one can provide automated support for team programming.
The prototype can be used to demonstrate
three scenarios:
semi-automatic design history maintenance, dynamic object composition, and
adaptive use of existing software. These scenarios demonstrate the power of
using Matisse over traditional programming environments such as
the Unix Programming Environment.
The prototype is useful as an {\em experimental\/} team information management
system. We describe some of the limitations of the prototype which
suggest future research.
}
  }



@INPROCEEDINGS{griss90b
  ,TITLE = "Software Reuse at {H}ewlett-{P}ackard"
  ,AUTHOR = "Martin L. Griss"
  ,affil  = "Hewlett-Packard"
  ,BOOKTITLE = "Third Annual Workshop:  Methods \& Tools for Reuse"
  ,YEAR = 1990
  ,month = jun
  ,editor = "Willimam B. Frakes"
  ,pages = ""
  ,organization = "CASE Center, Syracuse University"
  ,publisher = ""
  ,address = ""
  ,entered-by = "Dean"
  ,found-in = "mlgfiles"
  ,status   = "~"
  ,keywords = "reuse, process, corpoate program, hypertext"
  ,refs     = "~"
  ,comments = {~}
  ,annote   = {~}
  ,note     = {~}
  ,abstract = {Briefly describes the HP reuse program: history, the idea of
a corporate reuse program, reuse factors, and then focused on our Hypertext
system, Kiosk.  I recieved several requests for, and validation of, the
factors slides.  People were surprized to hear how much software HP does,
and our current level of activity and interest in reuse.  I recieved a
tremendous amount of useful feedback from the group in terms of how they
recommended we introduce query and search into Hypertext format, and also
got a lot of encouragement that what we were doing was clearly leading edge
  }
  }

@TECHREPORT{griss91a
  ,AUTHOR="Martin L. Griss"
  ,affil="HP Laboratories"
  ,TITLE="Software Reuse at {H}ewlett-{P}ackard"
  ,INSTITUTION="Hewlett-Packard Laboratories"
  ,organization="Software and Systems Laboratory and Corporate
                 Engineering Software Development Processes"
  ,number="HPL-91-38"
  ,year=1991
  ,month=jan
  ,note="(Invited submission to the {\em First International Workshop on
         Software Reusability}, Dortmund, July 3-5, 1991.)"
  ,abstract={In this paper, several software reuse related activities
at Hewlett-Packard are described.  The paper focuses on a number in
which author has been involved over the past 6 years.  Since November
1989, he has been investigating the opportunities for a systematic,
Corporate Software Reuse program for HP.  He is working with HP
Corporate Engineering to define and execute such a program, involving a
combination of consulting, training, methods development, the writing
of a reuse handbook, and several pilot projects.  He also leads two
research projects at HP Laboratories, one involving the development of
a prototype hypertext-based reuse library management system (Kiosk),
and the other exploring component-based software construction using
application development frameworks for distributed applications.}
 ,keywords={software reuse, hypertext, software libraries, C++}
}

@inproceedings{griss91f
  ,author={Martin L.  Griss and Sam S. Adams and Howard Baetjer, Jr. and
Brad J. Cox and Adele Goldberg}
  ,title="The Economics of Software Reuse (Panel)"
  ,booktitle="In Proceedings of OOPSLA'91, Phoenix, Arizona, 6-11 October"
  ,note={(Also as SIGPLAN Notices v26, 1, Nov 1991)}
  ,year=1991
  ,month=nov
  ,pages={264-270}
  ,keywords={reuse, economics, panel, oopsla}
  ,abstract={We discuss several models of a ``software components
   industry'' and issues concerning effective reuse and object-oriented
   programming, and speculate on how (and whether) a vigorous components
   market will arise.  A ``software industrial revolution'' requires
   an infrastructure, a ``reuse mindset'' and the treatment of software
   as an asset.}
}
@TECHREPORT{mark92
  ,TITLE        = "Ceres: A New Software Factory"
  ,AUTHOR       = "William Mark"
  ,affil        = "Lockheed"
  ,INSTITUTION  = "Lockheed"
  ,organization = "Research \& Development Division"
  ,month        = Apr
  ,YEAR         = 1992
  ,number       = ""
  ,address      = ""
  ,entered-by = "Griss"
  ,found-in = ""
  ,status   = ""
  ,keywords = "reuse;domain-specific envieonment;software factory;ceres"
  ,refs     = ""
  ,comments = {}
  ,annote   = {}
  ,note     = {}
  ,abstract = {}
  }
@TECHREPORT{scacchi90
  ,TITLE = "The Software Infrastructure for a Distributed System
Factory"
  ,AUTHOR = "Walt Scacchi"
  ,affil = "USC"
  ,INSTITUTION = "University of Southern California"
  ,organization = "Computer Science Department"
  ,month = Jun
  ,YEAR = 1990
  ,number = ""
  ,address = "Los Angeles, CA"
  ,entered-by = "Stephens,Wosser"
  ,found-in = "MLG files"
  ,status = ""
  ,keywords = "DSF Project, system factory, hypertext, object servers,
reuse, distribution"
  ,refs = "52"
  ,comments = {}
  ,note = {Revised version to appear in Software Engineering Journal}
  ,abstract = {This report describes an innovative approach to the
construction, application, and deployment of software factories.
Based on experience in creating and evolving the System Factory
Project at USC, we present a new, experimental project whose
technological and organizational objectives are wide ranging.  This
effort is called, the Distributed System Factory Project.  The DSF
project is intended to provide a software infrastructure suitable for
engineering large-scale software systems with dispersed teams working
over wide-area networks.  This software infrastructure is the central
focus of this report.  As such, this report describes the information
structures that can be used to model and create this infrastructure,
as well as target software applications.  It also describes an
electronic marketplace of logically centralized software services
which populate and execute within this infrastructure.  Finally, it
describes a view of how the DSF Project can grow to accommodate
academic and industrial research groups in national or international
locations.}
}

@INPROCEEDINGS{simos91
  ,TITLE = "Software Reuse and Organizational Development"
  ,AUTHOR = "Mark A. Simos"
  ,affil  = "Indept Consultant"
  ,BOOKTITLE = "In Proceedings of the First International Workshop on
         Software Reusability, Dortmund, July 3-5, 1991."
  ,YEAR = 1991
  ,month = jul
  ,editor = "R. Prieto-Diaz and others"
  ,pages = "36-41"
  ,organization = ""
  ,publisher = ""
  ,address = ""
  ,entered-by = "Griss"
  ,found-in = "Dortmund91, cabinet"
  ,status   = "~"
  ,keywords = "reuse; organizational development; managerial issues;
   quality; metawork"
  ,refs     = "4"
  ,comments = {}
  ,annote   = {}
  ,note     = {}
  ,abstract = {As a discipline, the reuse field is ready for the next
step: integrating technical results achieved to date with relevant work
in organizational development.  Applysing some lessons learned from
total quality management movement, we outline key criteria for a
broadened philosophy of reuse, applicable throughout the levels and
funcstions of an organization.  One element of this phlosophy is a
3-fold model of problem, product and process.  Cross-fertilization
between the reuse field and new models of organizational change and
development is an important first step towards a "responsible
technology".}
  }
@inproceedings(Simos91b,
author = "M. Simos",
title = "{The Growing of an Organon: A Hybrid Knowledge-Based 
Technology and Methodology for Software Reuse}",
booktitle = "Domain Analysis and Software Systems Modelling", 
editor = "R. Prieto-Diaz and G. Arango",  
publisher = "IEEE Computer Society Press", 
year = "1991",
location = "Los Alamitos, CA.")

@inproceedings(simos91c,
AUTHOR="M.A. Simos",
INSTITUTION="Organon Motives",
TITLE= "{Navigating Through Soundspace: Modelling the Sound 
Domain At Real World}", 
YEAR="1991",
Month="November",
Booktitle="Proceedings, 5th Annual Workshop on Institutionalizing 
Software Reuse", 
Location="Herndon, VA")

@techreport(Simos90a,
author = "M. Simos",
title = "{Determining Requirements During Domain Analysis}", 
date = "February 1990", 
institution = "Software Productivity Consortium",
note = "available as videotaped lecture")

@inproceedings(Simos88,
author = "M. Simos",
title = "{The Domain Life Cycle: Steps Toward a Unified Paradigm for 
Software Reusability}",
booktitle =  "{IEEE Tutorial on Software Reuse:  Emerging 
Technology}", 
editor =  "Will Tracz",  
year = "1988",
publisher = "IEEE Computer Society Press")

@inproceedings(Simos87,
author = "M. Simos",
title =  "{Gadfly: A Knowledge-Based Software Unit Test Plan 
Assistant}", 
booktitle = "Proceedings, Unisys Software  Engineering Symposium",
institution = "Unisys Corporation",
date = "September 1987")

@inproceedings(Simos86,
author = "M. Simos",
title = "{Alternative Technologies for Software Reusability}",  
booktitle = "Proceedings of 3rd STARS Workshop on Applications 
Systems and Reusability",
location = "Washington, D.C.", 
date = "February 1986")
@article{tracz87d
  ,TITLE={Software reuse: motivators and inhibitors}
  ,AUTHOR={Will Tracz}
  ,affil={IBM}
  ,journal={Digest of Papers. COMPCON Spring '87. Thirty-Second IEEE Computer
Society    International    Conference.    Intellectual    Leverage   (Cat.
No.87CH2409-1)}
  ,pages={358-363}
  ,found-in="HPL library search"
  ,found-by="Kathe Gust"
  ,note={}
  ,keywords="reuse,inhibitors,motivators"
  ,YEAR=1987
  ,month=Feb
  ,publisher={IEEE Comput. Soc. Press, Washington, DC, USA.    xvi+470 Pages}
  ,refs={29}
  ,abstract={The author summarizes the motivators and inhibitors of
software reuse and analyzes the limited success that it has enjoyed. Three
issues are examined: why the paradigm of reusable software engineering is
desirable; why it has not had, to date, the broad sweeping effects
envisioned by the programming prophets; and why it has enjoyed, under
certain circumstances, limited success.  Technical, organizational,
political, psychological, and economic issues related to software reuse are
addressed.}
  }

@MISC{tracz90a
  ,TITLE = "Software Reuse:  Principles and Practice"
  ,AUTHOR = "Will Tracz"
  ,affil  = ""
  ,howpublished = "notes"
  ,YEAR = 1990
  ,month = feb
  ,entered-by = "Dean"
  ,found-in = "mlgfiles"
  ,status   = ""
  ,keywords = ""
  ,refs     = ""
  ,comments = "Voluminous notes from a three-day tutorial, delivered in
conjunction with the book by Tracz.  Contains some update material, lots of
slides.  May be available from UCI, Irvine."
  ,annote   = {}
  ,note     = {}
  ,abstract = {}
  }

@MISC{tracz90c
  ,title = "Current Issues in Software Reuse: A Report on
the RMISE Workshop on Software Reuse"
  ,author = "Will Tracz"
  ,affil  = "IBM Federal Systems Division, Stanford
University
  ,howpublished = "
  ,year = 1990
  ,month = Oct
  ,entered-by = "Wosser"
  ,found-in = "shelf"
  ,status   = ""
  ,keywords = "reuse,slides,RMISE"
  ,refs     = ""
  ,comments = {NTU Seminar}
  ,note     = {}
  ,abstract = {}
  }

@TECHREPORT{tracz92
  ,title="Software Reuse Technical Opportunities"
  ,author="Will Tracz"
  ,INSTITUTION="IBM Corporation, Federal Systems Company"
  ,organization="Owego Laboratory"
  ,month=Jun
  ,YEAR=1992
  ,type="Technical Report"
  ,number=""
  ,address      = ""
  ,entered-by = "Griss"
  ,found-in = ""
  ,status   = ""
  ,keywords = {reuse;technology;research-list}
  ,refs     = ""
  ,comments = {}
  ,note     = {}
  ,abstract={This preprint summarizes several technologies in catagories
        against the list of reuse inhibitors developed by Frakes.  Also
        suggests research areas, mentions broad-scale reuse and
        non-technical issues.}
}

@TECHREPORT{zarmer89
  ,AUTHOR = "Craig Zarmer"
  ,TITLE = "{ACEKit} Overview"
  ,INSTITUTION = "Hewlett-Packard Laboratories"
  ,YEAR = "1989"
  ,month = "nov"
  ,number = "STL-89-29"
  ,address = "Palo Alto, Ca."
  ,entered-by = "Zarmer"
  ,found-in = "STL library"
  ,status = "found"
  ,keywords = "ACEKit, UI Tools, UIMS"
  ,note = {A brief overview of the ideas in Szekely and how they have
           been instantiated in C++ as ACEKit.  }
  }

@TECHREPORT{zarmer90
  ,AUTHOR = "Craig Zarmer and Jeff Johnson"
  ,TITLE = "{UI} Tools: Past, Present, and Future Trends"
  ,INSTITUTION = "Hewlett-Packard Laboratories"
  ,YEAR = "1990"
  ,month = "jan"
  ,number = "STL-90-XXX"
  ,address = "Palo Alto, Ca."
  ,entered-by = "Zarmer"
  ,found-in = "STL library"
  ,status = "in process"
  ,keywords = "UI, toolkits, UIMS, user interface management systems"
  ,note = {Background for zarmer89.  Discusses UI toolkits, UIMSs.  Reviews
           several current UI tools and some current research efforts.}
  }

@TECHREPORT{zarmer90a
  ,TITLE        = "{ACEKit}:  An {A}pplication {C}onstruction
{T}oolkit Version 1.0"
  ,AUTHOR       = "Craig L. Zarmer"
  ,affil        = "Hewlett-Packard Labs"
  ,INSTITUTION  = "Hewlett-Packard Laboratories"
  ,organization = "Software and Systems Laboratory"
  ,month        = Dec
  ,YEAR         = 1990
  ,number       = "SSL-TM-90-08"
  ,address      = "Palo Alto, CA"
  ,entered-by = "Wosser"
  ,found-in = ""
  ,status   = ""
  ,keywords = "application construction environment, ACEKit, C++, Class Class"
  ,refs     = "4"
  ,comments = {}
  ,annote   = {}
  ,note     = {}
  ,abstract = {ACE stands for Application Construction
Environment, and is a research program within HP Labs to
make applications more useful and usable, as well as improve
the process of building them.  ACEKit is the lowest layer of
the ACE program, and addresses the needs of programmers.  It
is an application architecture and associated software
library that breaks the application design process into a
series of steps, and provides clear abstractions for each.
It has some qualities of a User Interface Management System
(UIMS), some of a UI Toolkit, and some aspects that we
believe are unique.
This report describes in detail the process of building an
application with ACEKit, and the role of each class plays.
We assume familiarity with C++, and some familiarity with
InterViews will be helpful.  A less detailed report on
ACEKit is available as (Zarmer 89).}
  }


