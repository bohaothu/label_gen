%%% -*-BibTeX-*-
%%% ====================================================================
%%%  BibTeX-file{
%%%     author          = "Nelson H. F. Beebe",
%%%     version         = "1.36",
%%%     date            = "31 January 2011",
%%%     time            = "19:13:47 MDT",
%%%     filename        = "virtual-machines.bib",
%%%     address         = "University of Utah
%%%                        Department of Mathematics, 110 LCB
%%%                        155 S 1400 E RM 233
%%%                        Salt Lake City, UT 84112-0090
%%%                        USA",
%%%     telephone       = "+1 801 581 5254",
%%%     FAX             = "+1 801 581 4148",
%%%     URL             = "http://www.math.utah.edu/~beebe",
%%%     checksum        = "20723 17063 81616 786349",
%%%     email           = "beebe at math.utah.edu, beebe at acm.org,
%%%                        beebe at computer.org (Internet)",
%%%     codetable       = "ISO/ASCII",
%%%     keywords        = "bibliography; BibTeX; QEMU; virtual machines;
%%%                        VMware; Xen",
%%%     license         = "public domain",
%%%     supported       = "yes",
%%%     docstring       = "This is a bibliography of books and other
%%%                        publications about virtual machines.  However,
%%%                        it specifically excludes publications about
%%%                        the Parallel Virtual Machine (PVM), which
%%%                        is covered in a separate bibliography, pvm.bib.
%%%
%%%                        The ECMA and ISO Standard virtual machine,
%%%                        Common Language Infrastructure (CLI), is
%%%                        available on Microsoft .NET Framework on
%%%                        Microsoft Windows, GNU DotGNU's ilrun, and
%%%                        the Mono Project's mono.  These environments
%%%                        may offer compilers for C#, Visual Basic, C,
%%%                        C++, and possibly other languages.
%%%
%%%                        At version 1.36, the year coverage looked
%%%                        like this:
%%%
%%%                             1966 (   1)    1981 (   4)    1996 (   3)
%%%                             1967 (   0)    1982 (   5)    1997 (   7)
%%%                             1968 (   0)    1983 (   7)    1998 (   4)
%%%                             1969 (   0)    1984 (  10)    1999 (  12)
%%%                             1970 (   2)    1985 (  10)    2000 (  12)
%%%                             1971 (   1)    1986 (  11)    2001 (  14)
%%%                             1972 (   3)    1987 (   9)    2002 (  11)
%%%                             1973 (   3)    1988 (  10)    2003 (  14)
%%%                             1974 (   3)    1989 (  17)    2004 (  16)
%%%                             1975 (  15)    1990 (  21)    2005 (  40)
%%%                             1976 (   8)    1991 (  32)    2006 ( 100)
%%%                             1977 (   5)    1992 (  21)    2007 (  29)
%%%                             1978 (   6)    1993 (  28)    2008 (  38)
%%%                             1979 (  10)    1994 (  15)    2009 (  25)
%%%                             1980 (   7)    1995 (   2)    2010 (  24)
%%%
%%%                             Article:        244
%%%                             Book:           135
%%%                             InCollection:     4
%%%                             InProceedings:   82
%%%                             Manual:          14
%%%                             MastersThesis:   14
%%%                             PhdThesis:        7
%%%                             Proceedings:     67
%%%                             TechReport:      48
%%%
%%%                             Total entries:  615
%%%
%%%                        The checksum field above contains a CRC-16
%%%                        checksum as the first value, followed by the
%%%                        equivalent of the standard UNIX wc (word
%%%                        count) utility output of lines, words, and
%%%                        characters.  This is produced by Robert
%%%                        Solovay's checksum utility.",
%%%  }
%%% ====================================================================

@Preamble{
   "\ifx \undefined \circled \def \circled #1{(#1)}\fi"
 # "\ifx \undefined \reg \def \reg {\circled{R}}\fi"
 # "\ifx \undefined \TM \def \TM {${}^{\sc TM}$} \fi"
 # "\ifx \undefined \url \def \url#1 {{\tt #1}} \fi"
}

%%% ====================================================================
%%% Acknowledgement abbreviations:

@String{ack-nhfb = "Nelson H. F. Beebe,
                    University of Utah,
                    Department of Mathematics, 110 LCB,
                    155 S 1400 E RM 233,
                    Salt Lake City, UT 84112-0090, USA,
                    Tel: +1 801 581 5254,
                    FAX: +1 801 581 4148,
                    e-mail: \path|beebe@math.utah.edu|,
                            \path|beebe@acm.org|,
                            \path|beebe@computer.org| (Internet),
                    URL: \path|http://www.math.utah.edu/~beebe/|"}

%%% ====================================================================
%%% Institution abbreviations:

@String{inst-SRC-IDA            = "Supercomputing Research Center: IDA"}

@String{inst-SRC-IDA:adr        = "Lanham, MD, USA"}

%%% ====================================================================
%%% Journal abbreviations:

@String{j-ACM-SIGSOFT           = "ACM Sigsoft"}

@String{j-ADA-USER              = "Ada User"}

@String{j-ADA-USER-J            = "Ada User Journal"}

@String{j-BYTE                  = "Byte Magazine"}

@String{j-CACM                  = "Communications of the ACM"}

@String{j-CGF                   = "Com{\-}pu{\-}ter Graphics Forum"}

@String{j-COMP-ARCH-NEWS        = "ACM SIGARCH Computer Architecture News"}

@String{j-COMP-J                = "The Computer Journal"}

@String{j-COMP-NET              = "Computer Networks: The International
                                  Journal of Distributed Informatique"}

@String{j-COMP-SURV             = "ACM Computing Surveys"}

@String{j-COMP-SYS              = "Computing Systems"}

@String{j-COMPUTER              = "Computer"}

@String{j-DDJ                   = "Dr. Dobb's Journal of Software Tools"}

@String{j-DEC-TECH-J            = "Digital Technical Journal of Digital
                                  Equipment Corporation"}

@String{j-HEWLETT-PACKARD-J     = "Hew\-lett-Pack\-ard Journal: technical
                                  information from the laboratories of
                                  Hew\-lett-Pack\-ard Company"}

@String{j-IBM-JRD               = "IBM Journal of Research and Development"}

@String{j-IBM-SYS-J             = "IBM Systems Journal"}

@String{j-IEEE-ANN-HIST-COMPUT  = "IEEE Annals of the History of Computing"}

@String{j-IEEE-MICRO            = "IEEE Micro"}

@String{j-IEEE-PAR-DIST-TECH    = "IEEE parallel and distributed technology:
                                  systems and applications"}

@String{j-IEEE-SEC-PRIV         = "IEEE Security \& Privacy"}

@String{j-IEEE-TRANS-COMPUT     = "IEEE Transactions on Computers"}

@String{j-IEEE-TSE              = "IEEE Transactions on Software Engineering"}

@String{j-INFO-PROC-LETT        = "Information Processing Letters"}

@String{j-INT-J-COMPUT-INF-SCI  = "International Journal of Computer and
                                  Information Sciences"}

@String{j-INT-J-PARALLEL-PROG   = "International Journal of Parallel
                                  Programming"}

@String{j-INTEL-TECH-J          = "Intel Technology Journal"}

@String{j-J-FORTH-APPL-RES      = "Journal of FORTH Application and Research"}

@String{j-J-FORTH-APPLIC-RESEARCH = "Journal of Forth Applications and
                                  Research"}

@String{j-J-PAR-DIST-COMP       = "Journal of Parallel and Distributed
                                  Computing"}

@String{j-J-PHYS-IV-COLLOQUE    = "Journal de physique. IV, Colloque"}

@String{j-J-SYST-SOFTW          = "The Journal of Systems and Software"}

@String{j-LINUX-J               = "Linux Journal"}

@String{j-LISP-SYMB-COMPUT      = "Lisp and Symbolic Computation"}

@String{j-LOGIN                 = ";login: the USENIX Association newsletter"}

@String{j-OPER-SYS-REV          = "Operating Systems Review"}

@String{j-PARALLEL-COMPUTING    = "Parallel Computing"}

@String{j-PROGRAMMIROVANIE      = "Programmirovanie"}

@String{j-QUEUE                 = "ACM Queue: Tomorrow's Computing Today"}

@String{j-SIGADA-LETTERS        = "ACM SIGADA Ada Letters"}

@String{j-SIGCSE                = "SIGCSE Bulletin (ACM Special Interest Group
                                  on Computer Science Education)"}

@String{j-SIGMETRICS            = "ACM SIGMETRICS Performance Evaluation
                                 Review"}

@String{j-SIGPLAN               = "ACM SIG{\-}PLAN Notices"}

@String{j-SPE                   = "Soft\-ware\emdash Prac\-tice and
                                  Experience"}

@String{j-TECS                  = "ACM Transactions on Embedded Computing
                                  Systems"}

@String{j-TODS                  = "ACM Transactions on Database Systems"}

@String{j-TOPLAS                = "ACM Transactions on Programming
                                  Languages and Systems"}

@String{j-TRANS-AM-NUCL-SOC     = "Transactions of the American Nuclear
                                  Society"}

%%% ====================================================================
%%% Publishers and their addresses:

@String{pub-ACM                 = "ACM Press"}

@String{pub-ACM:adr             = "New York, NY 10036, USA"}

@String{pub-APRESS              = "Apress"}

@String{pub-APRESS:adr          = "Berkeley, CA, USA"}

@String{pub-AUERBACH            = "Auerbach"}

@String{pub-AUERBACH:adr        = "Princeton, NJ, USA"}

@String{pub-AW                  = "Ad{\-d}i{\-s}on-Wes{\-l}ey"}

@String{pub-AW:adr              = "Reading, MA, USA"}

@String{pub-CARL-HANSER         = "Carl Hanser"}

@String{pub-CARL-HANSER:adr     = "M{\"{u}}nchen, Germany"}

@String{pub-CRC                 = "CRC Press"}

@String{pub-CRC:adr             = "2000 N.W. Corporate Blvd., Boca Raton, FL
                                  33431-9868, USA"}

@String{pub-ECMA                = "ECMA (European Association for
                                   Standardizing Information and
                                   Communication Systems)"}

@String{pub-ECMA:adr            = "Geneva, Switzerland"}

@String{pub-IBM                 = "IBM Corporation"}

@String{pub-IBM:adr             = "San Jose, CA, USA"}

@String{pub-IEEE                = "IEEE Computer Society Press"}

@String{pub-IEEE:adr            = "1109 Spring Street, Suite 300,
                                  Silver Spring, MD 20910, USA"}

@String{pub-IOS                 = "IOS Press"}

@String{pub-IOS:adr             = "Amsterdam, The Netherlands"}

@String{pub-ISO                 = "International Organization for
                                  Standardization"}

@String{pub-ISO:adr             = "Geneva, Switzerland"}

@String{pub-KLUWER              = "Kluwer Academic Publishers Group"}

@String{pub-KLUWER:adr          = "Norwell, MA, USA, and Dordrecht,
                                  The Netherlands"}

@String{pub-MANNING             = "Manning Publications"}

@String{pub-MANNING:adr         = "Greenwich, CT, USA"}

@String{pub-MCGRAW-HILL         = "Mc{\-}Graw-Hill"}

@String{pub-MCGRAW-HILL:adr     = "New York, NY, USA"}

@String{pub-MICROSOFT           = "Microsoft Press"}

@String{pub-MICROSOFT:adr       = "Bellevue, WA, USA"}

@String{pub-MORGAN-KAUFMANN     = "Morgan Kaufmann Publishers"}

@String{pub-MORGAN-KAUFMANN:adr = "Los Altos, CA 94022, USA"}

@String{pub-MORGAN-KAUFMANN:adrsf = "San Francisco, CA, USA"}

@String{pub-NO-STARCH           = "No Starch Press"}

@String{pub-NO-STARCH:adr       = "San Francisco, CA, USA"}

@String{pub-NORTH-HOLLAND       = "North-Hol{\-}land"}

@String{pub-NORTH-HOLLAND:adr   = "Amsterdam, The Netherlands"}

@String{pub-ORA                 = "O'Reilly \& Associates, Inc."}

@String{pub-ORA:adr             = "103a Morris Street,
                                  Sebastopol, CA 95472,
                                  USA,
                                  Tel: +1 707 829 0515,
                                  and
                                  90 Sherman Street,
                                  Cambridge, MA 02140,
                                  USA,
                                  Tel: +1 617 354 5800"}

@String{pub-ORA-MEDIA           = "O'Reilly Media, Inc."}

@String{pub-ORA-MEDIA:adr       = "1005 Gravenstein Highway North,
                                   Sebastopol, CA 95472, USA"}

@String{pub-PH                  = "Pren{\-}tice-Hall"}

@String{pub-PH:adr              = "Upper Saddle River, NJ 07458, USA"}

@String{pub-QUE                 = "Que Corporation"}

@String{pub-QUE:adr             = "Indianapolis, IN, USA"}

@String{pub-SAMS                = "SAMS Publishing"}

@String{pub-SAMS:adr            = "Indianapolis, IN, USA"}

@String{pub-SV                  = "Spring{\-}er-Ver{\-}lag"}

@String{pub-SV:adr              = "Berlin, Germany~/ Heidelberg, Germany~/
                                  London, UK~/ etc."}

@String{pub-SYBEX               = "Sybex"}

@String{pub-SYBEX:adr           = "2021 Challenger Driver, Suite 100,
                                  Alameda, CA 94501, USA"}

@String{pub-SYNGRESS            = "Syngress Publishing, Inc."}

@String{pub-SYNGRESS:adr        = "Rockland, MA, USA"}

@String{pub-USENIX              = "USENIX"}

@String{pub-USENIX:adr          = "San Francisco, CA, USA"}

@String{pub-USENIX-EL-CERRITO:adr = "P.O. Box 7, El Cerrito 94530, CA, USA"}

@String{pub-WILEY               = "Wiley"}

@String{pub-WILEY:adr           = "New York, NY, USA"}

%%% ====================================================================
%%% Series abbreviations:

@String{ser-LNCS                = "Lecture Notes in Computer Science"}

%%% ====================================================================
%%% Bibliography entries, sorted by ascending year and then by citation
%%% key:

@TechReport{Adair:1966:VMS,
  author =       "R. J. Adair and R. U. Bayles and L. W. Comeau and R.
                 J. Creasy",
  title =        "A Virtual Machine System for the 360\slash 40",
  institution =  "International Business Machines (IBM), Data Processing
                 Division",
  year =         "1966",
  annote =       "ABEND module of OS at SSC",
  keywords =     "IBM 360/40",
}

@Article{Brawn:1970:SPE,
  author =       "B. S. Brawn and F. G. Gustavson and E. S. Mankin",
  title =        "Sorting in a Paging Environment",
  journal =      j-CACM,
  volume =       "13",
  number =       "8",
  pages =        "483--494",
  month =        aug,
  year =         "1970",
  CODEN =        "CACMA2",
  ISSN =         "0001-0782",
  bibdate =      "Tue Mar 25 13:26:09 MST 1997",
  bibsource =    "Compendex database;
                 ftp://ftp.ira.uka.de/pub/bibliography/Database/Graefe.bib",
  abstract =     "This sorting study was part of an extensive
                 measurement project undertaken on the M44\slash 44X, an
                 experimental paging system which was conceived and
                 implemented at IBM Research in order to explore the
                 virtual machine concept. The study was concerned with
                 the implementation of sorting procedures in the context
                 of the dynamic paging environment characteristic of
                 virtual memory machines. Descriptions of the
                 experimental sort programs and analysis of the
                 performance measurement results obtained for them are
                 presented. The insight gained from the experimental
                 effort is used to arrive at a set of broad guidelines
                 for writing sort programs for a paging environment.",
  acknowledgement = ack-nhfb,
  classcodes =   "C6130 (Data handling techniques)",
  corpsource =   "IBM Thomas J. Watson Res. Center, Yorktown Heights,
                 NY, USA",
  journalabr =   "Commun ACM",
  keywords =     "CACMA; computer, memories; computers; computers,
                 programming; dynamic memory management; External sort
                 virtual memory CACM; operating systems; sorting;
                 virtual machines",
}

@Article{Meyer:1970:VMT,
  author =       "Richard A. Meyer and Love H. Seawright",
  title =        "A Virtual Machine Time-Sharing System",
  journal =      j-IBM-SYS-J,
  volume =       "9",
  number =       "3",
  pages =        "199--218",
  year =         "1970",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Mon Jan 22 13:28:16 MST 2001",
  bibsource =    "Compendex database;
                 http://dblp.uni-trier.de/db/journals/ibmsj/ibmsj9.html#MeyerS70",
  abstract =     "The ControlProgram-67\slash Cambridge Monitor System
                 (CP-67\slash CMS) is a multiaccess system that manages
                 the resources of a computer set up for time-sharing
                 such that each (remote) user appears to have a
                 complete, dedicated computer at his disposal. This
                 concept is known as a virtual machine and allows each
                 user to select the operating system he wishes to run
                 because concurrent operation of several operating
                 systems is possible. The history and design objectives
                 of the system are discussed as well as its present
                 capabilities and some of the applications for its
                 use.",
  acknowledgement = ack-nhfb,
  journalabr =   "IBM Syst J",
  oldlabel =     "MeyerS70",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/ibmsj/MeyerS70",
}

@Manual{Forum:1971:VMI,
  author =       "IBM (Forum)",
  title =        "On Virtual Machine Integrity",
  year =         "1971",
}

@Article{McGrath:1972:VMC,
  author =       "Mark McGrath",
  title =        "Virtual machine computing in an engineering
                 environment",
  journal =      j-IBM-SYS-J,
  volume =       "11",
  number =       "2",
  pages =        "131--149",
  year =         "1972",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Mon Jan 22 13:28:02 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/journals/ibmsj/ibmsj11.html#McGrath72",
  acknowledgement = ack-nhfb,
  oldlabel =     "McGrath72",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/ibmsj/McGrath72",
}

@Article{Morris:1972:SMO,
  author =       "D. Morris and G. D. Detlefsen and G. R. Frank and T.
                 J. Sweeney",
  title =        "The structure of the {MU5} operating system",
  journal =      j-COMP-J,
  volume =       "15",
  number =       "2",
  pages =        "113--116",
  month =        may,
  year =         "1972",
  CODEN =        "CMPJA6",
  ISSN =         "0010-4620",
  bibdate =      "Fri Sep 29 08:52:02 MDT 2000",
  bibsource =    "http://www3.oup.co.uk/computer_journal/hdb/Volume_15/Issue_02/",
  URL =          "http://www3.oup.co.uk/computer_journal/hdb/Volume_15/Issue_02/150113.sgm.abs.html;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_15/Issue_02/tiff/113.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_15/Issue_02/tiff/114.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_15/Issue_02/tiff/115.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_15/Issue_02/tiff/116.tif",
  acknowledgement = ack-nhfb,
  classcodes =   "C6150J (Operating systems)",
  corpsource =   "Univ. Manchester, UK",
  keywords =     "1905E; ICL; modular structure; MU5; multicomputer
                 complex; operating system; operating systems
                 (computers); structure; virtual machine",
  treatment =    "P Practical",
}

@Article{Parmelee:1972:VSV,
  author =       "Richard P. Parmelee and Theodore I. Peterson and Coyt
                 C. {Tillman, Jr.} and Donald J. Hatfield",
  title =        "Virtual Storage and Virtual Machine Concepts",
  journal =      j-IBM-SYS-J,
  volume =       "11",
  number =       "2",
  pages =        "99--130",
  year =         "1972",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Mon Jan 22 13:29:15 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/journals/ibmsj/ibmsj11.html#ParmeleePTH72",
  acknowledgement = ack-nhfb,
  oldlabel =     "ParmeleePTH72",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/ibmsj/ParmeleePTH72",
}

@InProceedings{Goldberg:1973:AVM,
  author =       "R. P. Goldberg",
  booktitle =    "Proceedings of the {ACM} Workshop on Virtual Computer
                 Systems",
  title =        "Architecture of virtual machines",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "74--112",
  year =         "1973",
  URL =          "http://portal.acm.org/citation.cfm?id=803950&dl=ACM&coll=portal#",
  abstract =     "In this paper we develop a model which represents the
                 addressing of resources by processes executing on a
                 virtual machine. The model distinguishes two maps: the
                 $\phi$-map which represents the map visible to the
                 operating system software running on the virtual
                 machine, and the f-map which is invisible to that
                 software but which is manipulated by the virtual
                 machine monitor running on the real machine. The
                 $\phi$-map maps process names into resource names and
                 the f-map maps virtual resource names into real
                 resource names. Thus, a process running on a virtual
                 machine addresses its resources under the composed map
                 f o $\phi$. In recursive operation, f maps from one
                 virtual machine level to another and we have f o f o
                 \ldots{} o f o $\phi$. The model is used to describe
                 and characterize previous virtual machine designs. We
                 also introduce and illustrate a general approach for
                 implementing virtual machines which follows directly
                 from the model. This design, the Hardware Virtualizer,
                 handles all process exceptions directly within the
                 executing virtual machine without software
                 intervention. All resource faults (VM-faults) generated
                 by a virtual machine are directed to the appropriate
                 virtual machine monitor without the knowledge of
                 processes on the virtual machine (regardless of the
                 level of recursion).",
  added-at =     "Wed Apr 9 10:12:31 2003",
  added-by =     "msteiner",
  annote =       "See also \cite{Goldbe72}",
}

@InProceedings{Madnick:1973:AAV,
  author =       "Stuart E. Madnick and John J. Donovan",
  booktitle =    "Proceedings of the {ACM} Workshop on Virtual Computer
                 Systems",
  title =        "Application and analysis of the virtual machine
                 approach to information system security and isolation",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "210--224",
  year =         "1973",
  URL =          "http://portal.acm.org/citation.cfm?id=803961&coll=portal&dl=ACM",
  abstract =     "Security is an important factor if the programs of
                 independent and possibly malicious users are to coexist
                 on the same computer system. In this paper we show that
                 a combined virtual machine monitor/operating system
                 (VMM/OS) approach to information system isolation
                 provides substantially better software security than a
                 conventional multiprogramming operating system
                 approach. This added protection is derived from
                 redundant security using independent mechanisms that
                 are inherent in the design of most VMM/OS systems.",
  added-at =     "Wed Apr 9 10:08:32 2003",
  added-by =     "msteiner",
}

@Article{Sitton:1973:PEL,
  author =       "Gary A. Sitton and Thomas A. Kendrick and A. Gil
                 Carrick",
  title =        "The {PL\slash EXUS} language and virtual machine",
  journal =      j-SIGPLAN,
  volume =       "8",
  number =       "11",
  pages =        "124--130",
  month =        nov,
  year =         "1973",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:13:35 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Article{Lesser:1974:DEP,
  author =       "Victor R. Lesser",
  title =        "The design of an emulator for a parallel machine
                 language",
  journal =      j-SIGPLAN,
  volume =       "9",
  number =       "8",
  pages =        "23--36",
  month =        aug,
  year =         "1974",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:13:40 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C5220 (Computer architecture); C6140B
                 (Machine-oriented languages); C7430 (Computer
                 engineering)",
  conflocation = "Harriman, NY, USA; 30 May-1 June 1973",
  conftitle =    "Proceedings of the ACM SIGPLAN-SIGMICRO interface
                 meeting on programming languages-Microprogramming",
  corpsource =   "Carnegie-Mellon Univ., Pittsburgh, PA, USA",
  keywords =     "coded; complex emulator; control structure; coupled;
                 dynamic execution characteristics; dynamically;
                 emulator; machine oriented languages; microcomputer
                 architecture; microprocesses; microprogramming;
                 paradigm; parallel hardware environment; parallel
                 machine language; parallel processing; structured;
                 virtual machines; virtual machines processing",
  sponsororg =   "ACM",
  treatment =    "A Application; T Theoretical or Mathematical",
}

@TechReport{Madnick:1974:AAV,
  author =       "Stuart E. Madnick and John J. Donovan",
  title =        "Application and analysis of the virtual machine
                 approach to information system security and
                 reliability",
  number =       "722--74(2)",
  institution =  "MIT Center for Information Systems Research",
  address =      "Cambridge, MA, USA",
  pages =        "25",
  year =         "1974",
  LCCN =         "HD28 .M414 no.722, 74; HD28.M414",
  bibdate =      "Mon Apr 10 10:43:19 MDT 2006",
  bibsource =    "library.mit.edu:9909/mit01",
  series =       "Sloan School of Management. Working paper;
                 Massachusetts Institute of Technology. Alfred P. Sloan
                 School of Management. Center for Information Systems
                 Research. Report",
  acknowledgement = ack-nhfb,
}

@Article{Popek:1974:FRV,
  author =       "Gerald J. Popek and Robert P. Goldberg",
  title =        "Formal Requirements for Virtualizable Third Generation
                 Architectures",
  journal =      j-CACM,
  volume =       "17",
  number =       "7",
  pages =        "412--421",
  month =        jul,
  year =         "1974",
  CODEN =        "CACMA2",
  DOI =          "http://doi.acm.org/10.1145/800009.808061",
  ISSN =         "0001-0782",
  MRclass =      "68A05",
  MRnumber =     "49 10177",
  MRreviewer =   "I. Kaufmann",
  bibdate =      "Mon Jan 22 07:13:00 MST 2001",
  bibsource =    "Compendex database;
                 ftp://ftp.ira.uka.de/pub/bibliography/Database/Wiederhold.bib;
                 http://dblp.uni-trier.de/db/journals/cacm/cacm17.html#PopekG74",
  abstract =     "Virtual machine systems have been implemented on a
                 limited number of third generation computer systems,
                 for example CP-67 on the IBM 360/67. The value of
                 virtual machine techniques to ease the development of
                 operating systems, to aid in program transferability,
                 and to allow the concurrent running of disparate
                 operating systems, test and diagnostic programs has
                 been well recognized. However, from previous empirical
                 studies, it is known that many third generation
                 computer systems, e.g. the DEC PDP-10, cannot support a
                 virtual machine system. In this paper, the hardware
                 architectural requirements for virtual machine systems
                 are discussed. First, a fairly specific definition of a
                 virtual machine is presented which includes the aspects
                 of efficiency, isolation, and identical behavior. A
                 model of third generation-like computer systems is then
                 developed. The model includes a processor with
                 supervisor and user modes, memory that has a simple
                 protection mechanism, and a trap facility. In this
                 context, instruction behavior is then carefully
                 characterized.",
  acknowledgement = ack-nhfb,
  classcodes =   "C5220 (Computer architecture); C7430 (Computer
                 engineering)",
  classification = "722",
  corpsource =   "Univ. California, Los Angeles, CA, USA",
  journalabr =   "Commun ACM",
  keywords =     "abstract model; architectures; computer architecture;
                 computer operating systems; formal requirements;
                 generation architecture; hypervisor; operating system;
                 sufficient conditions; systems; third; third generation
                 computer; virtual machine; virtual machine monitor;
                 virtual machines; virtual memory; virtualizable third
                 generation",
  oldlabel =     "PopekG74",
  treatment =    "A Application; P Practical",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/cacm/PopekG74",
}

@InProceedings{Bagley:1975:SDS,
  author =       "John D. Bagley and E. R. Floto and S. C. Hsieh and V.
                 Watson",
  title =        "Sharing Data and Services in a Virtual Machine
                 System",
  crossref =     "ACM:1975:PFS",
  pages =        "82--88",
  year =         "1975",
  bibdate =      "Sat Jan 27 15:11:04 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/sosp/sosp75.html#BagleyFHW75",
  oldlabel =     "BagleyFHW75",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/sosp/BagleyFHW75",
}

@InProceedings{Belpaire:1975:FPR,
  author =       "Gerald Belpaire and Nai-Ting Nsu",
  title =        "Formal Properties of Recursive Virtual Machine
                 Architectures",
  crossref =     "ACM:1975:PFS",
  pages =        "89--96",
  year =         "1975",
  bibdate =      "Sat Jan 27 15:11:08 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/sosp/sosp75.html#BelpaireN75",
  oldlabel =     "BelpaireN75",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/sosp/BelpaireN75",
}

@Article{Callaway:1975:PMT,
  author =       "Peter H. Callaway",
  title =        "Performance Measurement Tools for {VM\slash 370}",
  journal =      j-IBM-SYS-J,
  volume =       "14",
  number =       "2",
  pages =        "134--160",
  year =         "1975",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Wed Jan 08 16:35:07 1997",
  bibsource =    "Compendex database",
  abstract =     "To support the smooth running of a Virtual Machine
                 Facility\slash 370 (VM\slash 370) installation,
                 performance measurements of various types are
                 desirable. This paper describes a range of measurement
                 facilities that have been developed for VM\slash 370
                 for use both on-line and off-line at the level of the
                 users (general user, operator, and system analyst) and
                 the installation management.",
  acknowledgement = ack-nhfb,
  classification = "723",
  journalabr =   "IBM Syst J",
  keywords =     "computer operating systems",
}

@Article{DeRemer:1975:PLV,
  author =       "Frank DeRemer and Hans Kron",
  title =        "Programming-in-the large versus
                 programming-in-the-small",
  journal =      j-SIGPLAN,
  volume =       "10",
  number =       "6",
  pages =        "114--121",
  month =        jun,
  year =         "1975",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:13:49 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C6110 (Systems analysis and programming); C6140
                 (Programming languages); C7430 (Computer engineering)",
  conflocation = "Los Angeles, CA, USA; 21--23 April 1975",
  conftitle =    "International Conference on Reliable Software",
  corpsource =   "Univ. of California, Santa Cruz, CA, USA",
  keywords =     "compiler; fault tolerant computing; information
                 hiding; large programs; module interconnection
                 language; modules; programming; programming languages;
                 small programs; software reliability; virtual machines;
                 virtual machines languages",
  sponsororg =   "IEEE; ACM; et al",
  treatment =    "A Application; P Practical",
}

@Article{Donovan:1975:HAC,
  author =       "John J. Donovan and S. E. Madnick",
  title =        "Hierarchical Approach to Computer System Integrity",
  journal =      j-IBM-SYS-J,
  volume =       "14",
  number =       "2",
  pages =        "188--202",
  year =         "1975",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Wed Jan 08 16:35:07 1997",
  bibsource =    "Compendex database",
  note =         "See letters
                 \cite{Chandersekaran:1976:FVM,Donovan:1976:FAR}.",
  abstract =     "Security is an important factor if the programs of
                 independent and possibly error-prone or malicious users
                 are to coexist on the same computer system. In this
                 paper, it is shown that a hierarchically structured
                 operating system, such as produced by a virtual machine
                 system, that combines a virtual machine monitor with
                 several independent operating systems (VMM\slash OS),
                 provides substantially better software security than a
                 conventional two-level multiprogramming operating
                 system approach. This added protection is derived from
                 redundant security using independent mechanisms that
                 are inherent in the design of most VMM\slash OS
                 systems. Such a system can be obtained by exploiting
                 existing software resources.",
  acknowledgement = ack-nhfb,
  classification = "723",
  journalabr =   "IBM Syst J",
  keywords =     "computer operating systems; computer systems
                 programming --- Time Sharing Programs",
}

@InProceedings{Gaines:1975:ACV,
  author =       "Brian R. Gaines",
  title =        "Analogy Categories, Virtual Machines, and Structured
                 Programming",
  crossref =     "Muhlbacher:1975:GIF",
  pages =        "691--699",
  year =         "1975",
  bibdate =      "Tue Jan 23 23:24:01 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/gi/gi75.html#Gaines75",
  oldlabel =     "Gaines75",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/gi/Gaines75",
}

@Article{Infante:1975:PSP,
  author =       "R. Infante and U. Montanari",
  title =        "Proving structured programs correct, level by level",
  journal =      j-SIGPLAN,
  volume =       "10",
  number =       "6",
  pages =        "427--436",
  month =        jun,
  year =         "1975",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:13:49 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C6110 (Systems analysis and programming)",
  conflocation = "Los Angeles, CA, USA; 21--23 April 1975",
  conftitle =    "International Conference on Reliable Software",
  corpsource =   "Olivetti, Ivrea, Italy",
  keywords =     "assertions; fault tolerant computing; level axioms;
                 predicates; problem oriented data structures; problem
                 oriented predicates; programming; structured programs
                 correctness proof; theorem prover; virtual machines",
  sponsororg =   "IEEE; ACM; et al",
  treatment =    "A Application; P Practical",
}

@Article{Kamnitzer:1975:BXI,
  author =       "Stephen H. Kamnitzer",
  title =        "Bootstrapping {XPL} from {IBM\slash 360} to {UNIVAC
                 1100}",
  journal =      j-SIGPLAN,
  volume =       "10",
  number =       "5",
  pages =        "14--20",
  month =        may,
  year =         "1975",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:13:47 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C6150C (Compilers, interpreters and other
                 processors); C7430 (Computer engineering)",
  corpsource =   "Sperry Univac, Cape Town, South Africa",
  keywords =     "compiler; IBM/360 to UNIVAC 1100 bootstrapping;
                 program compilers; UNIVAC 1100 series computers;
                 virtual machines; XPL Compiler Generator System",
  treatment =    "A Application; P Practical",
}

@TechReport{Lamming:1975:LVM,
  author =       "M. Lamming",
  title =        "{LITL} Virtual machine. Fixed or Variable Size
                 Blocks",
  number =       "QMW-DCS-1975-085; QMW-DCS-1975-091",
  institution =  "Queen Mary College, Department of Computer Science",
  month =        jun,
  year =         "1975",
  abstract-url = "http://www.dcs.qmw.ac.uk/publications/report_abstracts/1975/091;
                 http://www.dcs.qmw.ac.uk/publications/report_abstracts/1975/085",
  scope =        "misc",
  xxnote =       "Check: Two reports or one??",
}

@InProceedings{Popek:1975:PVM,
  author =       "Gerald J. Popek and Charles S. Kline",
  title =        "The {PDP-11} Virtual Machine Architecture: {A} Case
                 Study",
  crossref =     "ACM:1975:PFS",
  pages =        "97--105",
  year =         "1975",
  bibdate =      "Sat Jan 27 15:12:53 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/sosp/sosp75.html#PopekK75",
  oldlabel =     "PopekK75",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/sosp/PopekK75",
}

@Article{Popek:1975:VPS,
  author =       "Gerald J. Popek and Charles S. Kline",
  title =        "A verifiable protection system",
  journal =      j-SIGPLAN,
  volume =       "10",
  number =       "6",
  pages =        "294--304",
  month =        jun,
  year =         "1975",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:13:49 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C6110 (Systems analysis and programming); C6150J
                 (Operating systems); C7430 (Computer engineering)",
  conflocation = "Los Angeles, CA, USA; 21--23 April 1975",
  conftitle =    "International Conference on Reliable Software",
  corpsource =   "Univ. of California, Los Angeles, CA, USA",
  keywords =     "capability faulting; fault tolerant computing; fault
                 tolerant computing faulting; flexible information
                 sharing facilities; levels of kernels; multiuser
                 operating system; operating systems (computers);
                 program verification; programming; security kernels;
                 security of data; systems analysis; UCLA Virtual
                 Machine System; ultra high reliability protection;
                 verifiable protection system; virtual machines; virtual
                 memory",
  sponsororg =   "IEEE; ACM; et al",
  treatment =    "A Application; P Practical",
}

@Article{Saltzer:1975:PIC,
  author =       "Jerome H. Saltzer and Michael D. Schroeder",
  title =        "The Protection of Information in Computer Systems",
  journal =      "Proceedings of the {IEEE}",
  volume =       "63",
  number =       "9",
  pages =        "1278--1308",
  month =        sep,
  year =         "1975",
  URL =          "http://www.mediacity.com/~norm/CapTheory/ProtInf/",
  abstract =     "This tutorial paper explores the mechanics of
                 protecting computer-stored information from
                 unauthorized use or modification. It concentrates on
                 those architectural structures--whether hardware or
                 software--that are necessary to support information
                 protection. The paper develops in three main sections.
                 Section I describes desired functions, design
                 principles, and examples of elementary protection and
                 authentication mechanisms. Any reader familiar with
                 computers should find the first section to be
                 reasonably accessible. Section II requires some
                 familiarity with descriptor-based computer
                 architecture. It examines in depth the principles of
                 modern protection architectures and the relation
                 between capability systems and access control list
                 systems, and ends with a brief analysis of protected
                 subsystems and protected objects. The reader who is
                 dismayed by either the prerequisites or the level of
                 detail in the second section may wish to skip to
                 Section III, which reviews the state of the art and
                 current research projects and provides suggestions for
                 further reading.",
  added-by =     "rah,sti",
  annote =       "Part I: --- Basics --- Design Principles: economy of
                 mechanism, fail-safe defaults, complete mediation, open
                 design, separation of privilege, least privilege, least
                 common mechanism, psychological acceptability. ---
                 separate virtual machines with controlled communication
                 Part II: --- Separation of addressing and protection
                 --- capabilities --- access control lists",
}

@Article{Williams:1975:CMI,
  author =       "M. H. Williams and H. L. Ossher",
  title =        "A computer model for instructional purposes",
  journal =      j-COMP-J,
  volume =       "18",
  number =       "4",
  pages =        "333--341",
  month =        nov,
  year =         "1975",
  CODEN =        "CMPJA6",
  ISSN =         "0010-4620",
  bibdate =      "Tue Mar 25 13:51:56 MST 1997",
  bibsource =    "Compendex database;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_18/Issue_04/",
  URL =          "http://www3.oup.co.uk/computer_journal/hdb/Volume_18/Issue_04/tiff/333.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_18/Issue_04/tiff/334.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_18/Issue_04/tiff/335.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_18/Issue_04/tiff/336.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_18/Issue_04/tiff/337.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_18/Issue_04/tiff/338.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_18/Issue_04/tiff/339.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_18/Issue_04/tiff/340.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_18/Issue_04/tiff/341.tif",
  acknowledgement = ack-nhfb,
  classcodes =   "C0220 (Computing education and training); C7810C
                 (Computer-aided instruction)",
  classification = "721; 723; 901",
  corpsource =   "Department of Computer Sci., Rhodes Univ., Rhodes,
                 Grahamstown, South Africa",
  keywords =     "computer aided instruction; computer model; computer
                 programming languages; computer science; computer
                 simulator; computers; engineering education;
                 instructional purposes; machine architecture; teaching;
                 virtual machines",
  treatment =    "A Application; P Practical",
}

@Article{Adix:1976:IER,
  author =       "Mary S. Adix and Henrik A. Schutz",
  title =        "Interpretive execution of real-time control
                 applications",
  journal =      j-SIGPLAN,
  volume =       "11",
  number =       "4",
  pages =        "78--87",
  day =          "1",
  month =        apr,
  year =         "1976",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:13:54 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C6140D (High level languages); C6150C (Compilers,
                 interpreters and other processors); C7430 (Computer
                 engineering)",
  conflocation = "New Orleans, LA, USA; 4--6 March 1976",
  conftitle =    "ACM SIGMIN/SIGPLAN Interface Meeting on Programming
                 Systems in the Small Processor Environment",
  corpsource =   "General Motors Res. Labs., Warren, MI, USA",
  keywords =     "interpretive execution; problem oriented languages;
                 program interpreters; real time control application;
                 space compaction; virtual machine language; virtual
                 machines",
  sponsororg =   "ACM",
  treatment =    "A Application; P Practical",
  xxpages =      "78--86",
}

@Article{Bagley:1976:SFM,
  author =       "John D. Bagley",
  title =        "Special feature: microprogrammable virtual machines",
  journal =      j-COMPUTER,
  volume =       "9",
  number =       "2",
  pages =        "38--42",
  month =        feb,
  year =         "1976",
  CODEN =        "CPTRB4",
  ISSN =         "0018-9162",
  bibdate =      "Thu Dec 12 07:20:54 MST 1996",
  bibsource =    "Compendex database",
  abstract =     "User alterable microprograms make it possible to
                 tailor the architecture of the computer to the
                 application domain but raises the problem of
                 microprogram development and testing. The technique
                 outlined provides a tool which furnishes the
                 microprogrammer with a virtual machine which is
                 microprogrammable. The function provided is similar to
                 that provided by a simulator, but the technique is more
                 efficient and allows multiple microprograms to be
                 executed concurrently with regular programs on a single
                 real machine.",
  acknowledgement = ack-nhfb,
  classification = "722; 723",
  journalabr =   "Computer",
  keywords =     "computer architecture; computer simulation; computer
                 systems programming --- testing",
}

@Article{Chandersekaran:1976:FVM,
  author =       "C. S. Chandersekaran and K. S. Shankar",
  title =        "Forum: On virtual machine integrity",
  journal =      j-IBM-SYS-J,
  volume =       "15",
  number =       "3",
  pages =        "264--269",
  year =         "1976",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Tue Mar 19 17:38:46 1996",
  note =         "See \cite{Donovan:1975:HAC,Donovan:1976:FAR}.",
  acknowledgement = ack-nhfb,
}

@TechReport{Donovan:1976:VMC,
  author =       "John J. Donovan and Henry D. Jacoby",
  title =        "Virtual machine communication for the implementation
                 of decision support systems",
  number =       "884--76(28)",
  institution =  "MIT Center for Information Systems Research",
  address =      "Cambridge, MA, USA",
  pages =        "3 + 29",
  year =         "1976",
  LCCN =         "HD28 .M414 no.884-76; HD28.M414",
  bibdate =      "Mon Apr 10 10:43:19 MDT 2006",
  bibsource =    "library.mit.edu:9909/mit01",
  acknowledgement = ack-nhfb,
}

@Article{Hamlet:1976:PBT,
  author =       "Richard Hamlet",
  title =        "The {PDP-11} as {B5500} in teaching systems
                 programming",
  journal =      j-SIGPLAN,
  volume =       "11",
  number =       "5",
  pages =        "47--52",
  month =        may,
  year =         "1976",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:13:56 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C0220 (Computing education and training); C6110
                 (Systems analysis and programming); C7430 (Computer
                 engineering)",
  corpsource =   "Department of Computer Sci., Univ. of Maryland,
                 College Park, MD, USA",
  keywords =     "B5500; computer aided instruction; PDP 11;
                 programming; SIMPL XI; systems programming; teaching;
                 virtual machines",
  treatment =    "P Practical",
}

@Article{Suski:1976:AGC,
  author =       "Gregory J. Suski",
  title =        "Automatic generation of computer graphics languages",
  journal =      j-SIGPLAN,
  volume =       "11",
  number =       "6",
  pages =        "113--122",
  month =        jun,
  year =         "1976",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:13:57 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C5540 (Terminals and graphic displays); C6140D (High
                 level languages); C7430 (Computer engineering)",
  conflocation = "Miami Beach, FL, USA; 26--27 April 1976",
  conftitle =    "Symposium on Graphic Languages",
  corpsource =   "Northwestern Univ., Evanston, IL, USA",
  keywords =     "computer graphics; computer graphics languages;
                 language generation system; LGS; mechanical language
                 generation; programming languages; virtual machines",
  sponsororg =   "ACM",
  treatment =    "P Practical",
}

@TechReport{Taylor:1976:RRH,
  author =       "John McMay Taylor",
  title =        "Redundancy and recovery in the {HIVE} virtual
                 machine",
  type =         "Report",
  number =       "76010",
  institution =  "Procurement executive, Ministry of Defence, Royal
                 Signals and Radar Establishment",
  address =      "London, UK",
  year =         "1976",
  LCCN =         "1966",
  bibdate =      "Mon Apr 10 10:43:15 MDT 2006",
  bibsource =    "library.ox.ac.uk:210/ADVANCE",
  acknowledgement = ack-nhfb,
}

@Article{Wallace:1976:SGI,
  author =       "Victor L. Wallace",
  title =        "The semantics of graphic input devices",
  journal =      j-SIGPLAN,
  volume =       "11",
  number =       "6",
  pages =        "61--65",
  month =        jun,
  year =         "1976",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:13:57 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C5540 (Terminals and graphic displays); C7430
                 (Computer engineering)",
  conflocation = "Miami Beach, FL, USA; 26--27 April 1976",
  conftitle =    "Symposium on Graphic Languages",
  corpsource =   "Department of Computer Sci., Univ. of North Carolina,
                 Chapel Hill, NC, USA",
  keywords =     "computer graphics; graphic input devices; interactive
                 input; interactive terminals; primitive, nonprimitives;
                 semantics; virtual devices; virtual machines",
  sponsororg =   "ACM",
  treatment =    "P Practical",
}

@Article{Donovan:1977:VMC,
  author =       "John J. Donovan and Henry D. Jacoby",
  title =        "Virtual Machine Communication for the Implementation
                 of Decision Support Systems",
  journal =      j-IEEE-TSE,
  volume =       "3",
  number =       "5",
  pages =        "333--342",
  month =        sep,
  year =         "1977",
  CODEN =        "IESEDJ",
  ISSN =         "0098-5589",
  bibdate =      "Tue Jan 23 05:54:52 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/journals/tse/tse3.html#DonovanJ77",
  annote =       "incomplete",
  oldlabel =     "DonovanJ77",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/tse/DonovanJ77",
}

@Book{Hartmann:1977:CPC,
  author =       "A. C. Hartmann",
  key =          "Hartmann",
  title =        "A Concurrent Pascal Compiler for MiniComputers",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  year =         "1977",
  bibdate =      "Fri Jul 27 13:37:33 1984",
  annote =       "This book describes a seven pass compiler for Per
                 Brinch Hansen's Concurrent Pascal programming language.
                 It requires 16,500 16-bit words of storage on a
                 PDP-11/45 computer, and compiles source text at the
                 rate of 240 characters per second (about 9--10 lines
                 per second). It generates code for an ideal virtual
                 machine that is simulated by a real machine. The
                 compiler is written in sequential Pascal and is easily
                 transported to other machines. [from the preface] The
                 compiler comprises seven passes: lexical analysis,
                 syntax analysis, name analysis, declaration analysis,
                 body analysis, code selection, and code assembly. After
                 an introduction and a chapter on each of the passes,
                 there are chapters on interpass topics, the virtual
                 machine, and implementation details. An appendix
                 provides syntax graphs for all the intermediate
                 languages, as well as the input and final code
                 languages. The seven-pass compiler has been running on
                 a PDP-ll/45 at CalTech since Jan 1975. Each pass is
                 described along with the virtual code that is output by
                 the last pass. The syntax graphs for each of the passes
                 is also given.",
  keywords =     "Concurrent Pascal",
}

@Article{Huxtable:1977:HSI,
  author =       "D. H. R. Huxtable and J. M. M. Pinkerton",
  title =        "The hardware\slash software interface of the {ICL}
                 2900 range of computers",
  journal =      j-COMP-J,
  volume =       "20",
  number =       "4",
  pages =        "290--295",
  month =        nov,
  year =         "1977",
  CODEN =        "CMPJA6",
  ISSN =         "0010-4620",
  bibdate =      "Tue Mar 25 13:51:56 MST 1997",
  bibsource =    "Compendex database;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_20/Issue_04/",
  URL =          "http://www3.oup.co.uk/computer_journal/hdb/Volume_20/Issue_04/tiff/290.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_20/Issue_04/tiff/291.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_20/Issue_04/tiff/292.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_20/Issue_04/tiff/293.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_20/Issue_04/tiff/294.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_20/Issue_04/tiff/295.tif",
  acknowledgement = ack-nhfb,
  classcodes =   "C5220 (Computer architecture); C6150 (Systems
                 software)",
  classification = "722; 723",
  corpsource =   "International Computers Ltd., Bracknell, UK",
  keywords =     "architecture; computer architecture; computer
                 software; computer systems, digital; concurrent
                 execution; hardware features; ICL 2900; independent
                 processes; instruction set; interference; mutual;
                 protection arrangements; support system software;
                 virtual machines",
  treatment =    "P Practical",
}

@Article{Keedy:1977:OIS,
  author =       "J. L. Keedy",
  title =        "An Outline of the {ICL} 2900 Series System
                 Architecture",
  journal =      "Australian Computer Journal",
  volume =       "9",
  number =       "2",
  pages =        "53--62",
  year =         "1977",
  abstract =     "The system architecture of the ICL 2900 Series is
                 outlined informally. Its central feature, the virtual
                 machine concept, is described and related to virtual
                 storage, segmentation and paging. The procedural
                 approach is then discussed and its implementation by a
                 stack mechanism is described. Further sections outline
                 the protection mechanisms, and the instruction set and
                 related features. Finally the virtual machine approach
                 is related to global system activities. This paper has
                 been written such that it may be of interest to readers
                 without a specialist knowledge of computer archi
                 tecture.",
  keywords =     "Computer Architecture, ICL 2900 series, Virtual
                 memory, descriptors, segmentation, Paging, Procedural
                 stacks, Protection. 6.21, 4.32.",
}

@MastersThesis{Wilding-White:1977:MBI,
  author =       "Arthur Llewellyn Wilding-White",
  title =        "A microprocessor {BCPL} implementation based on a
                 virtual stack machine",
  type =         "Thesis ({B.S.})",
  school =       "Department of Electrical Engineering and Computer
                 Science, Massachusetts Institute of Technology",
  address =      "Cambridge, MA, USA",
  pages =        "143",
  year =         "1977",
  bibdate =      "Mon Apr 10 10:43:19 MDT 2006",
  bibsource =    "library.mit.edu:9909/mit01",
  note =         "Supervised by Stephen A. Ward.",
  acknowledgement = ack-nhfb,
  subject =      "Microprocessors; BCPL (Computer program language);
                 Virtual computer systems",
}

@Article{Armstrong:1978:PPC,
  author =       "J. L. Armstrong",
  title =        "Programming a Parallel Computer for Robot Vision",
  journal =      j-COMP-J,
  volume =       "21",
  number =       "3",
  pages =        "215--218",
  month =        aug,
  year =         "1978",
  CODEN =        "CMPJA6",
  ISSN =         "0010-4620",
  bibdate =      "Tue Mar 25 13:51:56 MST 1997",
  bibsource =    "Compendex database;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_21/Issue_03/",
  URL =          "http://www3.oup.co.uk/computer_journal/hdb/Volume_21/Issue_03/tiff/215.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_21/Issue_03/tiff/216.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_21/Issue_03/tiff/217.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_21/Issue_03/tiff/218.tif",
  abstract =     "Work a Edinburgh has directed itself towards the
                 automatic recognition and inspection of objects in an
                 industrial environment using a television camera. A
                 particular need for such systems arises in the context
                 of numerically controlled machine tools. FORTRAN
                 emulators of the CLIP array processor have enabled
                 preliminary tests to be made of a parallel approach to
                 removing noise and extracting primitive features from
                 digitized pictures.",
  acknowledgement = ack-nhfb,
  classcodes =   "C3355C (Control applications in machining processes
                 and machine tools); C3355 (Control applications in
                 manufacturing processes); C6110 (Systems analysis and
                 programming); C7420 (Control engineering computing)",
  classification = "721; 723; 731; 741",
  corpsource =   "Machine Intelligence Res. Unit, Univ. of Edinburgh,
                 Edinburgh, UK",
  keywords =     "automatic recognition; camera; CLIP array processor;
                 computer programming; computerised pattern recognition;
                 computerised picture; emulators; FORTRAN; industrial
                 environment; industrial robots; inspection of objects;
                 numerical control; numerically controlled machine
                 tools; parallel approach; parallel computer; parallel
                 processing; processing; programming; robot vision;
                 robots; television; virtual machines; vision ---
                 Computer Applications",
  treatment =    "T Theoretical or Mathematical",
}

@Article{Bard:1978:AMV,
  author =       "Y. Bard",
  title =        "An analytic model of the {VM\slash 370} system",
  journal =      j-IBM-JRD,
  volume =       "22",
  number =       "5",
  pages =        "498--508",
  month =        sep,
  year =         "1978",
  CODEN =        "IBMJAE",
  ISSN =         "0018-8646",
  bibdate =      "Mon Feb 12 09:58:53 MST 2001",
  bibsource =    "Compendex database",
  abstract =     "An Analytic model is described of an interactive
                 multiprogrammed computer system. The model accepts a
                 multiple-user-class, transaction-oriented workload
                 description and a system configuration description, and
                 it produces predictions of resource utilizations,
                 transaction rates, and average transaction response
                 times. The solution method involves nearly complete
                 decomposition, with a closed queuing network
                 representing the multiprogrammed set. Asymptotic
                 formulas are used to generate good initial guesses for
                 an overall iterative scheme. Extensive validation
                 results are presented.",
  acknowledgement = ack-nhfb,
  classcodes =   "C6150J (Operating systems)",
  classification = "722; 723",
  corpsource =   "Cambridge Sci. Center, IBM, Cambridge, MA, USA",
  journalabr =   "IBM J Res Dev",
  keywords =     "analytic model; average; closed queuing network;
                 computer performance prediction; computer selection and
                 evaluation; computer systems programming ---
                 Multiprogramming; computer systems, digital;
                 interactive multiprogrammed computer; interactive
                 systems; iterative scheme; multiprogrammed set model;
                 multiprogramming; resource utilizations; system;
                 transaction rates; transaction response times;
                 validation; virtual machines; virtual storage; VM/370",
  treatment =    "A Application",
  ZMnumber =     "382.68033",
}

@Article{Cremers:1978:FMV,
  author =       "Armin B. Cremers and Thomas N. Hibbard",
  title =        "Formal Modeling of Virtual Machines",
  journal =      j-IEEE-TSE,
  volume =       "4",
  number =       "5",
  pages =        "426--436",
  month =        sep,
  year =         "1978",
  CODEN =        "IESEDJ",
  ISSN =         "0098-5589",
  bibdate =      "Tue Jan 23 05:53:37 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/journals/tse/tse4.html#CremersH78",
  annote =       "incomplete",
  oldlabel =     "CremersH78",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/tse/CremersH78",
}

@Manual{Forum:1978:VMI,
  author =       "IBM (Forum)",
  title =        "On Virtual Machine Integrity",
  year =         "1978",
}

@Article{Kumar:1978:PEH,
  author =       "B. Kumar and Edward S. Davidson",
  title =        "Performance Evaluation of Highly Concurrent Computers
                 by Deterministic Simulation",
  journal =      j-CACM,
  volume =       "21",
  number =       "11",
  pages =        "904--913",
  month =        nov,
  year =         "1978",
  CODEN =        "CACMA2",
  ISSN =         "0001-0782",
  bibdate =      "Mon Jan 22 06:56:38 MST 2001",
  bibsource =    "Compendex database;
                 http://dblp.uni-trier.de/db/journals/cacm/cacm21.html#KumarD78",
  abstract =     "Simulation is presented as a practical technique for
                 performance evaluation of alternative configurations of
                 highly concurrent computers. A technique is described
                 for constructing a detailed deterministic simulation
                 model of a system. In the model a control stream
                 replaces the instruction and data streams of the real
                 system. Simulation of the system model yields the
                 timing resource usage statistics needed for performance
                 evaluation, without the necessity of emulating the
                 system. As a case study, the implementation of a
                 simulation of a model of the CPU-memory subsystem of
                 the IBM 360\slash 191 is described. The results of
                 evaluating some alternative system designs are
                 discussed. The experiments reveal that, for the case
                 study, the major bottlenecks in the system are the
                 memory unit and the fixed point unit. Further, it
                 appears that many of the sophisticated pipelining and
                 buffering techniques implemented in the architecture of
                 the IBM 360\slash 91 are of little value when
                 high-speed (cache) memory is used, as in the IBM
                 360\slash 195.",
  acknowledgement = ack-nhfb,
  classcodes =   "C5220 (Computer architecture); C6150G (Diagnostic,
                 testing, debugging and evaluating systems); C7430
                 (Computer engineering)",
  classification = "722; 723",
  corpsource =   "Univ. of Illinois, Urbana, IL, USA",
  journalabr =   "Commun ACM",
  keywords =     "computer selection and evaluation; computer systems,
                 digital; CPU memory subsystem; deterministic
                 simulation; highly concurrent computers; IBM 360/91;
                 multiprocessing systems; performance evaluation;
                 virtual machines",
  oldlabel =     "KumarD78",
  treatment =    "P Practical",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/cacm/KumarD78",
}

@TechReport{Renaud:1978:UVM,
  author =       "D. J. Renaud",
  title =        "The {UT} Virtual Machine Monitor",
  type =         "Technical Report",
  number =       "CS-TR-78-78",
  institution =  "University of Texas at Austin, Department of Computer
                 Sciences",
  address =      "Austin, TX, USA",
  day =          "1",
  month =        may,
  year =         "1978",
  bibdate =      "November 24, 98",
  note =         "Wed, 23 Jun 104 21:38:33 GMT",
  URL =          "ftp://ftp.cs.utexas.edu/pub/techreports/tr78-78a.pdf
                 ftp://ftp.cs.utexas.edu/pub/techreports/tr78-78b.pdf",
}

@Article{Attanasio:1979:VCS,
  author =       "C. R. Attanasio",
  title =        "Virtual Control Storage --- Security Measures in
                 {VM\slash 370}",
  journal =      j-IBM-SYS-J,
  volume =       "18",
  number =       "1",
  pages =        "93--110",
  year =         "1979",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Wed Jan 08 16:35:07 1997",
  bibsource =    "Compendex database",
  abstract =     "An experimental extension to VM\slash 370 is described
                 whereby a distinct execution and data domain (Virtual
                 Control Storage) is made available to virtual machines
                 that require access to a resource manager, without
                 requiring a change in the scheduling unit. Thus
                 scheduling overhead and delays are avoided when
                 transition is made between user program and resource
                 manager. A mechanism is described for exchanging data
                 between execution domains by means of address-space
                 mapping.",
  acknowledgement = ack-nhfb,
  classification = "722; 723",
  journalabr =   "IBM Syst J",
  keywords =     "computer systems, digital",
}

@InProceedings{Canon:1979:VME,
  author =       "M. D. Canon and D. H. Fritz and John H. Howard and T.
                 D. Howell and Michael F. Mitoma and Juan
                 Rodriguez-Rossel",
  booktitle =    "Proceedings of the 7th ACM Symposium on Operating
                 Systems Principles (SOSP)",
  title =        "A Virtual Machine Emulator for Performance Evaluation
                 (Summary)",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "1--??",
  year =         "1979",
  CODEN =        "OSRED8",
  ISSN =         "0163-5980",
  bibdate =      "Sat Jan 27 15:11:21 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/sosp/sosp79.html#CanonFHHMR79",
  series =       j-OPER-SYS-REV,
  oldlabel =     "CanonFHHMR79",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/sosp/CanonFHHMR79",
}

@PhdThesis{Halstead:1979:RTN,
  author =       "R. H. Halstead",
  key =          "Halstead",
  title =        "Reference Tree Networks: Virtual Machine and
                 Implementation",
  type =         "Thesis ({Ph.D.})",
  school =       "Department of Electrical Engineering and Computer
                 Science, Massachusetts Institute of Technology",
  address =      "Cambridge, MA, USA",
  pages =        "252",
  year =         "1979",
  bibdate =      "Wed Nov 5 09:49:44 1986",
  note =         "Also issued as Technical Report MIT/LCS/TR-222.",
  abstract =     "A current-technology computing machine may be roughly
                 decomposed into a processor, a memory, and a data path
                 connecting them. The interposition of this data path
                 between processing and storage elements creates a
                 bottleneck, which inhibits progress at the
                 high-performance end of the technological spectrum.
                 Additionally, the monolithic nature of present-day
                 processors resists incremental addition or removal of
                 processing power. The research described here attacks
                 the problem of constructing more powerful and more
                 flexible computer systems along three fronts: the
                 definition of a virtual machine providing for parallel
                 computation using objects and object references, the
                 development of a distributed implementation mechanism
                 ({"}reference trees{"}) supporting object management
                 functions including garbage collection, and the
                 reinvestigation of scheduling algorithms and collection
                 performance results. A reference tree network using
                 these concepts is composed of a multitude of
                 independent small processors, yet operates as a
                 coherent programming system. Programs and data spread
                 automatically and transparently through the network to
                 occupy underused resources. The modular structure of
                 the network provides many parallel data paths as well
                 as allowing for easy addition or removal of modules,
                 thus addressing some of the problems discussed above. A
                 prototype reference tree network, the MuNet, is
                 currently in operation. {AD A076-570}",
  notes =        "Cost is \$26. Keywords: message passing, distributed
                 computing, multiprocessor systems, distributed object
                 management, networks",
  owner =        "seufert",
}

@Article{Hendricks:1979:EVM,
  author =       "Edson C. Hendricks and Timothy C. Hartmann",
  title =        "Evolution of a Virtual Machine Subsystem",
  journal =      j-IBM-SYS-J,
  volume =       "18",
  number =       "1",
  pages =        "111--142",
  year =         "1979",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Mon Jan 22 13:25:19 MST 2001",
  bibsource =    "Compendex database;
                 http://dblp.uni-trier.de/db/journals/ibmsj/ibmsj18.html#HendricksH79",
  abstract =     "Early investigation of virtual machine subsystem
                 flexibility centered on telecommunications support and
                 intercomputer networking and proceeded in two phases.
                 The first phase focused on an experimental program for
                 the virtual machine control program CP-67 that
                 supported remote work stations and pioneered
                 intercomputer spool communications. The results of that
                 effort inspired a second effort in the same area with
                 some significant redirection. This second phase
                 ultimately led to the remote spooling communications
                 subsystem component of VM\slash 370, the VM\slash 370
                 networking package (VNET), and a large network of
                 interactive computer systems within IBM. These phases
                 are discussed along with suggestions for several
                 continuing lines of work based on current results.",
  acknowledgement = ack-nhfb,
  classification = "722; 723",
  journalabr =   "IBM Syst J",
  keywords =     "computer systems, digital",
  oldlabel =     "HendricksH79",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/ibmsj/HendricksH79",
}

@Article{Jensen:1979:FAC,
  author =       "Richard M. Jensen",
  title =        "A Formal Approach for Communication Between Logically
                 Isolated Virtual Machines",
  journal =      j-IBM-SYS-J,
  volume =       "18",
  number =       "1",
  pages =        "71--92",
  year =         "1979",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Mon Jan 22 13:25:57 MST 2001",
  bibsource =    "Compendex database;
                 http://dblp.uni-trier.de/db/journals/ibmsj/ibmsj18.html#Jensen79",
  abstract =     "The growing use of the virtual machine concept has
                 resulted in the necessity for communication between the
                 virtual machines. The design and operation of the
                 Virtual Machine Communication Facility is discussed as
                 an approach to offering such communication. The
                 facility is an interface allowing a logical connection
                 between two or more virtual machines. Potential
                 applications for this facility conclude the
                 discussion.",
  acknowledgement = ack-nhfb,
  classification = "723",
  journalabr =   "IBM Syst J",
  keywords =     "computers, digital",
  oldlabel =     "Jensen79",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/ibmsj/Jensen79",
}

@Article{Kobayashi:1979:SMC,
  author =       "Y. Kobayashi and T. L. Kunii",
  title =        "A simulation of a minicomputer controlled system and
                 its use as a debugging tool",
  journal =      j-COMP-J,
  volume =       "22",
  number =       "1",
  pages =        "41--49",
  month =        feb,
  year =         "1979",
  CODEN =        "CMPJA6",
  ISSN =         "0010-4620",
  bibdate =      "Tue Mar 25 13:51:56 MST 1997",
  bibsource =    "Compendex database;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_22/Issue_01/",
  URL =          "http://www3.oup.co.uk/computer_journal/hdb/Volume_22/Issue_01/tiff/41.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_22/Issue_01/tiff/42.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_22/Issue_01/tiff/43.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_22/Issue_01/tiff/44.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_22/Issue_01/tiff/45.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_22/Issue_01/tiff/46.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_22/Issue_01/tiff/47.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_22/Issue_01/tiff/48.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_22/Issue_01/tiff/49.tif",
  acknowledgement = ack-nhfb,
  classcodes =   "C6150G (Diagnostic, testing, debugging and evaluating
                 systems)",
  classification = "722; 723",
  corpsource =   "Univ. of Tokyo, Tokyo, Japan",
  keywords =     "computer programming languages --- Program Debugging;
                 computer simulation; computerised control; computers,
                 miniature; debugging real programs; mechanism;
                 minicomputer controlled system; program debugging;
                 simulation; time flow; virtual machines",
  treatment =    "P Practical",
}

@Article{MacKinnon:1979:CVM,
  author =       "Richard A. MacKinnon",
  title =        "The Changing Virtual Machine Environment: Interfaces
                 to Real Hardware, Virtual Hardware, and Other Virtual
                 Machines",
  journal =      j-IBM-SYS-J,
  volume =       "18",
  number =       "1",
  pages =        "18--46",
  year =         "1979",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Mon Jan 22 13:27:26 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/journals/ibmsj/ibmsj18.html#MacKinnon79;
                 Compendex database",
  abstract =     "A survey is presented of changes to virtual machine
                 interfaces, implementation, architecture, and
                 simulation techniques as they affect IBM System\slash
                 370 and 303X (3031, 3032, 3033) processors, the system
                 control program to which virtual machines interface,
                 and other virtual machines executing on the same real
                 computing system or elsewhere. New uses of virtual
                 machine subsystems are discussed as they relate to
                 inter-virtual-machine communication.",
  acknowledgement = ack-nhfb,
  classification = "722; 723",
  journalabr =   "IBM Syst J",
  keywords =     "computer systems, digital",
  oldlabel =     "MacKinnon79",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/ibmsj/MacKinnon79",
}

@TechReport{Moore:1979:IVM,
  author =       "J. S. Moore II",
  title =        "The Inter{LISP} Virtual Machine Specification",
  type =         "Report",
  number =       "CSL 76-5",
  institution =  "Xerox, Palo Alto Research Center (PARC)",
  address =      "Palo Alto, CA, USA",
  year =         "1979",
  note =         "Sep. 1976, Rvsd. March 1979",
  keywords =     "LISP",
}

@Article{Parnas:1979:DSE,
  author =       "D. L. Parnas",
  key =          "Parnas",
  title =        "Designing Software for Ease of Expansion and
                 Contraction",
  journal =      j-IEEE-TSE,
  volume =       "SE-5",
  number =       "2",
  pages =        "128--138",
  month =        mar,
  year =         "1979",
  CODEN =        "IESEDJ",
  ISSN =         "0098-5589",
  annote =       "Focuses on design of software that can be subseted and
                 expanded. Families of programs sharing subsets of
                 modules. Loops in the 'uses' relation should be
                 avoided. Minimal program subset and minimal increments.
                 Virtual machines, modules, uses relation. Criteria for
                 letting a module use another module. Example. 21
                 references.",
}

@Article{Rajaraman:1979:PPV,
  author =       "M. K. Rajaraman",
  title =        "Performance prediction of a virtual machine",
  journal =      j-SIGMETRICS,
  volume =       "8",
  number =       "1--2",
  pages =        "57--62",
  month =        "Spring-Summer",
  year =         "1979",
  CODEN =        "????",
  DOI =          "http://doi.acm.org/10.1145/1041853.1041858",
  ISSN =         "0163-5999 (print), 1557-9484 (electronic)",
  bibdate =      "Thu Jun 26 10:53:30 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Modeling and simulation of computer systems have two
                 main objectives. First, to evaluate the performance of
                 a given configuration of a machine and second, to
                 derive a mechanism for prediction of performance when
                 configuration parameters change. This paper addresses
                 the second issue and reports the result of a recent
                 investigation of a Virtual Memory Computer. The results
                 indicate which variables or combination of variables
                 have significant effect on the performance and which do
                 not.",
  acknowledgement = ack-nhfb,
}

@TechReport{Abramson:1980:WGL,
  author =       "Harvey Abramson",
  title =        "Why Is a Goto Like a Dynamic Vector in the {BCPL-Slim}
                 Computing System",
  type =         "Technical Report",
  number =       "TR-80-09",
  institution =  "Department of Computer Science, University of British
                 Columbia",
  month =        nov,
  year =         "1980",
  bibdate =      "July 21, 1997",
  note =         "Mon, 21 Jul 1997 19:29:13 GMT",
  abstract =     "The Slim computer is a new virtual machine which can
                 be used in the translation and porting of the BCPL
                 compiler, and eventually, in the porting of an
                 operating system written in BCPL. For the purposes of
                 this paper, the Slim computer is a stack machine with a
                 single accumulator and a register which points to the
                 top of the stack. The procedures LEVEL and LONGJUMP,
                 traditionally used to implement transfers of control
                 across BCPL procedures, and which are usually written
                 in the assembler language of a host machine, cannot be
                 used with this architecture. In developing procedures
                 to implement \underline{all} transfers of control, we
                 show how these essential procedures --- though highly
                 dependent on the Slim architecture --- can be written
                 portably in BCPL, and discover an interesting
                 connection between implementing jumps and dynamic
                 vectors (by means of Aptovec) in the BCPL-Slim
                 computing system. Some parameters of portability in
                 rapping an abstract machine to host machines are
                 identified, and it is shown how to maintain the
                 portability of the above mentioned procedures in the
                 face of various mapping problems. Finally, we are led
                 to a comment on the design of BCPL to the effect that
                 \underline{goto}'s are an unnecessary feature of the
                 language.",
}

@Article{Canon:1980:VME,
  author =       "M. D. Canon and D. H. Fritz and John H. Howard and T.
                 D. Howell and Michael F. Mitoma and Juan
                 Rodriguez-Rossel",
  title =        "A Virtual Machine Emulator for Performance
                 Evaluation",
  journal =      j-CACM,
  volume =       "23",
  number =       "2",
  pages =        "71--80",
  year =         "1980",
  CODEN =        "CACMA2",
  ISSN =         "0001-0782",
  bibdate =      "Mon Jan 22 06:29:30 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/journals/cacm/cacm23.html#CanonFHHMR80",
  acknowledgement = ack-nhfb,
  oldlabel =     "CanonFHHMR80",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/cacm/CanonFHHMR80",
}

@InCollection{Dommergaard:1980:DVM,
  author =       "O. Dommergaard",
  key =          "Dommergaard80",
  booktitle =    "Abstract Software Specifications",
  title =        "The Design of a Virtual Machine for Ada",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  pages =        "463--605",
  year =         "1980",
  annote =       "Derives the design and formalizes the architecture of
                 a virtual machine for efficient execution of Ada
                 programs. This, the so-called A-code machine, is then
                 the basis for a compiling algorithm specification.",
}

@TechReport{Dommergaard:1980:FDP,
  author =       "S. Bodilsen O. Dommergaard",
  key =          "Dommergaard\&80",
  title =        "A Formal Definition of {P}-Code",
  institution =  "Department of Comp. Sci.",
  address =      "Techn. Univ. of Denmark",
  year =         "1980",
  annote =       "Like \cite{Dommergaard80a} this formalizes a(nother)
                 virtual machine, that of P-Code, for efficient
                 execution of Pascal programs.",
}

@Article{Groves:1980:DVM,
  author =       "L. J. Groves and W. J. Rogers",
  title =        "The design of a virtual machine for {Ada}",
  journal =      j-SIGPLAN,
  volume =       "15",
  number =       "11",
  pages =        "223--234",
  month =        nov,
  year =         "1980",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:14:31 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C6130 (Data handling techniques); C6140D (High level
                 languages); C6150C (Compilers, interpreters and other
                 processors); C6150J (Operating systems)",
  conflocation = "Boston, MA, USA; 9--11 Dec. 1980",
  conftitle =    "Proceedings of the ACM-SIGPLAN Symposium on the Ada
                 Programming Language",
  corpsource =   "Univ. of Waikato, Hamilton, New Zealand",
  keywords =     "Ada; addressing; blocks; compiler portability; control
                 flow; data handling; data storage; exceptions;
                 generating code; machine-independent translator;
                 manipulation; program compilers; program interpreters;
                 storage allocation; storage structure; subprograms;
                 task handling; virtual machine; virtual machines",
  treatment =    "A Application",
}

@Article{Kent:1980:PNV,
  author =       "S. A. Kent",
  title =        "A Programmable Network Virtual Machine",
  journal =      j-COMP-NET,
  volume =       "4",
  number =       "3",
  pages =        "125--137",
  month =        jun,
  year =         "1980",
  CODEN =        "CNETDP",
  ISSN =         "0376-5075",
  bibdate =      "Tue Jan 23 07:26:10 MST 2001",
  bibsource =    "Compendex database;
                 http://dblp.uni-trier.de/db/journals/cn/cn4.html#Kent80",
  acknowledgement = ack-nhfb,
  affiliation =  "Univ Coll, London, Engl",
  annote =       "The increasing diversity of resources which is
                 becoming available to users through the introduction of
                 computer networks has opened up new areas of
                 investigation. One of the problems encountered is that
                 of providing uniform and common access procedures where
                 functionally similar facilities exist on different
                 systems. \ldots{} One approach to solving these
                 problems is to create an agent that is able both to
                 automate remote access procedures on the \ldots{}",
  classification = "722; 723",
  descriptors =  "Computer network; design; access control; network
                 management;",
  enum =         "1638",
  journalabr =   "Comput Networks",
  keywords =     "computer networks; computers, digital",
  language =     "English",
  location =     "RWTH-AC-DFV: Bibl.",
  oldlabel =     "Kent80",
  references =   "36",
  revision =     "14/01/92",
  WARNING =      "Additional, or modified, lettercase-preserving braces
                 are likely to be required in title and booktitle
                 fields.",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/cn/Kent80",
}

@TechReport{Warren:1980:IPI,
  author =       "D. H. D. Warren",
  key =          "Warren",
  title =        "An Improved {Prolog} Implementation Which Optimises
                 Tail Recursion",
  type =         "Research Paper",
  number =       "156",
  institution =  "Department of AI, Univeristy of Edinburgh",
  year =         "1980",
  bibdate =      "Wed Jul 13 12:29:53 1983",
  keywords =     "Implementation; compiler; virtual machine; tail
                 recursion",
}

@Article{Sarda:1981:CAD,
  author =       "N. L. Sarda and J. R. Isaac",
  title =        "Computer aided design of database internal schema",
  journal =      j-INT-J-COMPUT-INF-SCI,
  volume =       "10",
  number =       "4",
  pages =        "219--234",
  month =        aug,
  year =         "1981",
  CODEN =        "IJCIAH",
  ISSN =         "0091-7036",
  bibdate =      "Sat Apr 26 12:20:22 MDT 1997",
  acknowledgement = ack-nhfb,
  classification = "C6110 (Systems analysis and programming); C6120
                 (File organisation); C6160 (Database management systems
                 (DBMS)); C7430 (Computer engineering)",
  corpsource =   "Computer Centre, Indian Inst. of Technol., Bombay,
                 India",
  keywords =     "data structures; database management systems; systems
                 analysis; virtual machines; computer aided design; data
                 structures; database internal schema; design; database
                 systems",
  treatment =    "P Practical",
}

@InProceedings{Wang:1981:VMB,
  author =       "Richard T. Wang and James C. Browne",
  title =        "Virtual Machine-Based Simulation of Distributed
                 Computing and Network Computing",
  crossref =     "ACM:1981:ASC",
  pages =        "154--156",
  year =         "1981",
  bibdate =      "Tue Jan 23 15:38:35 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/sigmetrics/sigmetrics81.html#WangB81",
  oldlabel =     "WangB81",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/sigmetrics/WangB81",
}

@TechReport{Abramsky:1982:SMV,
  author =       "S. Abramsky",
  title =        "{SECD-M}: a virtual machine for applicative
                 multiprogramming",
  number =       "QMW-DCS-1982-322; QMW-DCS-1982-339",
  institution =  "Department of Computer Science, Queen Mary College",
  month =        nov,
  year =         "1982",
  note =         "(LA has)",
  abstract-url = "http://www.dcs.qmw.ac.uk/publications/report_abstracts/1982/322;
                 http://www.dcs.qmw.ac.uk/publications/report_abstracts/1982/339",
  keywords =     "Applicative programming , functional programming, SECD
                 machines multiprogramming, non-determinism, operating
                 systems.",
  scope =        "theory",
}

@TechReport{Baden:1982:HPS,
  author =       "Scott B. Baden",
  title =        "High Performance Storage Reclamation in an
                 Object-Based Memory System",
  type =         "Technical Report",
  number =       "CSD-84-167",
  institution =  "University of California, Berkeley",
  pages =        "52",
  month =        jun,
  year =         "1982",
  bibdate =      "June 22, 1993",
  abstract =     "Measurements of the Smalltalk Virtual Machine indicate
                 that 20\%-30\% of the time is spent reclaiming disused
                 storage. Following the work of Deutsch, Bobrow, and
                 Snyder [Deutsch and Bobrow 76] [Deutsch 82a] [Deutsch
                 82b] [Snyder 79] we introduce a strategy that reduces
                 the overhead of storage reclamation by more than 80\%.
                 We discuss the design of hardware to support this
                 strategy, and compare the hardware to a traditional
                 software implementation. We conclude by suggesting
                 directions for future research.",
}

@Article{Ganapathi:1982:RCC,
  author =       "Mahadevan Ganapathi and Charles N. Fischer and John L.
                 Hennessy",
  key =          "Ganapathi et al.",
  title =        "Retargetable Compiler Code Generation",
  journal =      j-COMP-SURV,
  volume =       "14",
  number =       "4",
  pages =        "573--592",
  month =        dec,
  year =         "1982",
  CODEN =        "CMSVAN",
  ISSN =         "0010-4892",
  bibdate =      "Wed Dec 18 07:42:17 MST 1996",
  bibsource =    "Compendex database",
  note =         "See also
                 \cite{Wulf:1983:SFR,Ganapathi:1983:SFRa,Fraser:1983:SFR,Ganapathi:1983:SFRb}.",
  abstract =     "A classification of automated retargetable code
                 generation techniques and a survey of the work on these
                 techniques is presented. Retargetable code generation
                 research is classified into three categories:
                 interpretive code generation, pattern-matched code
                 generation, and table-driven code generation.
                 Interpretive code generation approaches generate code
                 for a virtual machine and then expand into real target
                 code. Pattern-matched code generation approaches
                 separate the machine description from the code
                 generation algorithm. Table-driven code generation
                 approaches employ a formal machine description and use
                 a code-generator generator to produce code generators
                 automatically. An analysis of these techniques and a
                 critique of automatic code generation algorithms are
                 presented.",
  acknowledgement = ack-nhfb,
  classification = "723",
  keywords =     "computer programming languages; Code-generator
                 generator; compiler compiler; intermediate
                 representation; machine-dependent optimization; machine
                 description",
  owner =        "manning",
}

@Article{Thanh:1982:ITC,
  author =       "Nguyen the Thanh and E. Walter Raschner",
  title =        "Indirect threaded code used to emulate a virtual
                 machine",
  journal =      j-SIGPLAN,
  volume =       "17",
  number =       "5",
  pages =        "80--89",
  month =        may,
  year =         "1982",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Tue Oct 28 16:17:03 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C6130 (Data handling techniques); C6150C (Compilers,
                 interpreters and other processors); C6150J (Operating
                 systems)",
  corpsource =   "E. Walter Raschner, Nixdorf Computer AG, Paderborn,
                 West Germany",
  keywords =     "assembler programs; codes; Indirect Threaded Code;
                 Pascal compiler; program assemblers; program
                 interpreters; Threaded Code; virtual machine; virtual
                 machines",
  treatment =    "P Practical",
}

@Article{Unger:1982:OSZ,
  author =       "B. Unger and D. Bidulock and G. Lomow and P. Belanger
                 and C. Hankins and N. Jain",
  title =        "An {OASIS} simulation of the {ZNET} microcomputer
                 network",
  journal =      j-IEEE-MICRO,
  volume =       "2",
  number =       "3",
  pages =        "70--84",
  month =        aug,
  year =         "1982",
  CODEN =        "IEMIDZ",
  ISSN =         "0272-1732",
  bibdate =      "Thu Dec 14 06:08:58 MST 2000",
  bibsource =    "Science Citation Index database (1980--2000)",
  acknowledgement = ack-nhfb,
  classcodes =   "C5620 (Computer networks and techniques); C7430
                 (Computer engineering)",
  corpsource =   "Univ. of Calgary, Alta., Canada",
  keywords =     "architecture; communication protocols; computer
                 networks; distributed programs; hardware; local; MCZ-2;
                 microcomputer network; multicomputer; network; OASIS;
                 prototype software; Prototyping System; simulation;
                 software; Software; systems; virtual machines; Zilog;
                 ZNET",
  treatment =    "P Practical",
  xxauthor =     "B. Unger and P. Belanger and D. Bidulock and C.
                 Hankins and N. Jain and G. Lomow",
}

@TechReport{Baker:1983:MAS,
  author =       "T. P. Baker",
  title =        "Mapping Ada onto a Simple Virtual Machine",
  number =       "ADA-83-02",
  institution =  "Florida State University",
  year =         "1983",
}

@TechReport{Cohen:1983:PSR,
  author =       "Shismon Cohen and Roni Rosner and Ari Zidon",
  title =        "{PARALISP Simulator (Reference Manual)}",
  type =         "Research Report",
  number =       "83-2",
  institution =  "Computer Science Department, Hebrew University",
  address =      "Jerusalem, Israel",
  month =        jan,
  year =         "1983",
  abstract =     "PLISP (``Parallel Lisp'') is the current
                 implementation of ``Senile Parallel Execution of Lisp
                 Programs'' (Lehmann and Cohen). PLISP may be thought of
                 as a virtual machine designed to evaluate LISP
                 expressions in a parallel fashion. The language of this
                 virtual machine is PARALISP. This means, for example,
                 that when a function application contains several
                 formal arguments, these arguments may be evaluated in
                 parallel, under the assumption that there are no
                 dependencies, or side effects. Therefore, PARALISP is a
                 version of LISP designed to enable parallel evaluation
                 to occur without side effects.",
  keywords =     "functional parallel; Lisp",
}

@Article{Gum:1983:SEA,
  author =       "Peter H. Gum",
  title =        "{System\slash 370} Extended Architecture: Facilities
                 for Virtual Machines",
  journal =      j-IBM-JRD,
  volume =       "27",
  number =       "6",
  pages =        "530--544",
  month =        nov,
  year =         "1983",
  CODEN =        "IBMJAE",
  ISSN =         "0018-8646",
  bibdate =      "Mon Jan 22 13:12:28 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/journals/ibmrd/ibmrd27.html#Gum83;
                 Compendex database",
  abstract =     "This paper describes the evolution of facilities for
                 virtual machines on IBM System\slash 370 computers, and
                 presents the elements of a new architectural facility
                 designed for the virtual-machine environment. Assists
                 that have been added to various System\slash 370 models
                 to support the use of virtual machines are summarized,
                 and a general facility for this purpose which was
                 introduced with the System\slash 370 Extended
                 Architecture (370-XA) is described.",
  acknowledgement = ack-nhfb,
  classcodes =   "C5220 (Computer architecture); C7430 (Computer
                 engineering)",
  classification = "723",
  corpsource =   "IBM Information Systems and Technol. Group,
                 Poughkeepsie, NY, USA",
  journalabr =   "IBM J Res Dev",
  keywords =     "370-XA architecture; computer architecture; computers;
                 data storage, digital; dynamic address translation;
                 Extended Architecture; IBM System/370; privileged
                 instructions; virtual machines",
  oldlabel =     "Gum83",
  treatment =    "P Practical",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/ibmrd/Gum83",
}

@Article{Kamrad:1983:ROA,
  author =       "III J. M. Kamrad",
  key =          "Kamrad",
  title =        "Runtime Organization for the Ada Language System
                 Programs",
  journal =      "Ada Letters",
  volume =       "III",
  number =       "3",
  pages =        "58--68",
  month =        nov,
  year =         "1983",
  bibdate =      "Wed Mar 6 10:04:32 1985",
  abstract =     "The runtime organization provides the execution
                 environment for generated code of a source program. The
                 runtime organization includes the primitive data
                 elements, such as scalar and composite data objects;
                 system data elements, such as stack and heaps; and a
                 runtime system to provide functionality not supported
                 in the target computer. In effect the runtime
                 organization provides an abstract or virtual machine.
                 This paper is a brief overview of the runtime
                 organization that is the execution environment for the
                 code generated by the Ada compiler in the Army Ada
                 Language System. Since this compiler translates the
                 full Ada language, the runtime organization must
                 provide support not normally found in other languages,
                 such as exception handling and tasking. As
                 retargetability is a major goal of the Ada Language
                 System, The runtime organization must also exist on
                 many targets, both with or without an operating system
                 support. While this paper specifically describes the
                 runtime organization for the VAX/VMS 11/780, it does
                 explore the design flexibility that enables the design
                 to support generated code over a variety of targets.",
}

@InProceedings{Kojima:1983:AMI,
  author =       "Tomihiko Kojima and Hidehiko Akita and Hisashi
                 Hashimoto",
  title =        "An Approach to a Machine Independent {UNIX} --- {UNIX}
                 on {HITAC M-series} Virtual Machines",
  crossref =     "STUG:1983:PUA",
  pages =        "363--369",
  month =        "Summer",
  year =         "1983",
  bibdate =      "Fri Oct 18 07:24:24 MDT 1996",
  bibsource =    "ftp://ftp.uu.net/library/bibliography",
  acknowledgement = ack-nhfb,
  affiliation =  "Hitachi Ltd.",
}

@Article{Mendelsohn:1983:RVF,
  author =       "Noah Mendelsohn and Mark H. Linehan and William J.
                 Anzick",
  title =        "Reflections on {VM\slash Pass-Through}: a Facility for
                 Interactive Networking",
  journal =      j-IBM-SYS-J,
  volume =       "23",
  number =       "1-2",
  pages =        "63--79",
  year =         "1983",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Wed Jan 08 16:35:07 1997",
  bibsource =    "Compendex database",
  abstract =     "An introduction to Pass-Through networking describes
                 features of the system, supported configurations, and
                 use of Pass-Through within the IBM Corporation. A brief
                 history of Pass-Through's development is also provided.
                 Pass-Through is then used to motivate a technical
                 discussion of interactive network technology and
                 virtual machine subsystems. Topics covered include
                 appropriate use of the virtual machine environment,
                 choice of routing strategy, and performance
                 considerations.",
  acknowledgement = ack-nhfb,
  classification = "723",
  journalabr =   "IBM Syst J",
  keywords =     "computer networks",
}

@InProceedings{Gold:1984:KR,
  author =       "B. D. Gold and R. R. Linde and P. F. Cudney",
  title =        "{KVM\slash 370} In Retrospect",
  crossref =     "IEEE:1984:PSS",
  pages =        "13--23",
  year =         "1984",
  annote =       "KVM/370 (Kernelized Virtual Machine System 370) is
                 based on IBM's Virtual Machine operating system,
                 VM/370. KVM/370 is a general purpose operating system
                 that enforces DoD military security policy using kernel
                 technology. Funded as a small research project in 1976,
                 the system has undergone continuous development since
                 1978 when implementation was begun by System
                 Development Corporation. This paper describes KVM/370's
                 architecture, security controls and performance. Based
                 on insights gained during the retrofit, recommendations
                 are made as to how a more efficient system might be
                 designed.",
}

@Article{Ibsen:1984:PVM,
  author =       "Leif Ibsen",
  title =        "A Portable Virtual Machine for {Ada}",
  journal =      j-SPE,
  volume =       "14",
  number =       "1",
  pages =        "17--29",
  month =        jan,
  year =         "1984",
  CODEN =        "SPEXBL",
  ISSN =         "0038-0644",
  bibdate =      "Sat May 31 13:36:16 MDT 1997",
  acknowledgement = ack-nhfb,
}

@InProceedings{Kim:1984:EVM,
  author =       "K. H. Kim",
  title =        "Evolution of a Virtual Machine Supporting
                 Fault-Tolerant Distributed Processes at a Research
                 Laboratory",
  crossref =     "IEEE:1984:DE",
  pages =        "620--628",
  month =        apr,
  year =         "1984",
  bibdate =      "Sat Jan 27 14:07:28 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/icde/icde84.html#Kim84",
  URL =          "http://dblp.uni-trier.de/db/conf/icde/Kim84.html",
  bookpages =    "????",
  cdrom =        "ICDE84/P620.pdf",
  cites-label =  "B1 (\ldots{}); C1 (\ldots{}); H1
                 (books/sp/Hartmann77); H2 (\ldots{}); K1 (\ldots{}); K2
                 (\ldots{}); V1 (\ldots{})",
  oldlabel =     "conf/icde/Kim84",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/icde/Kim84",
}

@Article{MacGregor:1984:MM,
  author =       "Doug MacGregor and Dave Mothersole and Bill Moyer",
  title =        "The {Motorola MC68020}",
  journal =      j-IEEE-MICRO,
  volume =       "4",
  number =       "4",
  pages =        "101--118",
  month =        aug,
  year =         "1984",
  CODEN =        "IEMIDZ",
  ISSN =         "0272-1732",
  bibdate =      "Thu Dec 14 06:08:58 MST 2000",
  bibsource =    "Compendex database; Science Citation Index database
                 (1980--2000)",
  acknowledgement = ack-nhfb,
  classcodes =   "B1265F (Microprocessors and microcomputers); C5130
                 (Microprocessor chips)",
  classification = "722; 723; 902",
  corpsource =   "Motorola Inc., Austin, TX, USA",
  keywords =     "32-bit microprocessor; cache; compatibility; computer
                 interfaces; computer programming --- Modular
                 Construction; computers, microprocessor; coprocessor
                 interface; high-speed asynchronous bus; instruction;
                 instruction set; microprocessor chips; Motorola MC
                 6802; Motorola MC68020; performance; programmer's
                 model; system enhancements; testability; virtual
                 memory/virtual machine",
  treatment =    "P Practical",
}

@Article{SPE::Ibsen1984,
  author =       "Leif Ibsen",
  title =        "A Portable Virtual Machine for {Ada}",
  journal =      j-SPE,
  volume =       "14",
  number =       "1",
  pages =        "17--29",
  month =        jan,
  year =         "1984",
}

@Article{Steensgaard-Madsen:1984:DPL,
  author =       "J. Steensgaard-Madsen and L. M. Olsen",
  title =        "Definition of the programming language {MODEF}",
  journal =      j-SIGPLAN,
  volume =       "19",
  number =       "2",
  pages =        "92--110",
  month =        feb,
  year =         "1984",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sat Apr 25 11:46:37 MDT 1998",
  acknowledgement = ack-nhfb,
  classification = "C6110 (Systems analysis and programming); C6140D
                 (High level languages)",
  keywords =     "application programs; data abstraction; discrete
                 events; high level languages; MODEF; programming;
                 programming language; semantics; sequential process;
                 statement-oriented approach; user defined operators;
                 virtual machine virtual machine",
  treatment =    "A Application; P Practical",
}

@MastersThesis{Turek:1984:IDV,
  author =       "John Joseph E. Turek",
  title =        "Issues in the design of a virtual network for the
                 connection machine",
  type =         "Thesis ({B.S.})",
  school =       "Department of Electrical Engineering and Computer
                 Science, Massachusetts Institute of Technology",
  address =      "Cambridge, MA, USA",
  pages =        "67",
  year =         "1984",
  bibdate =      "Mon Apr 10 10:56:30 2006",
  note =         "Supervised by Thomas Knight.",
  acknowledgement = ack-nhfb,
}

@InCollection{Uehara:1984:BPB,
  author =       "K. Uehara and R. Ochitani and O. Kakusho and J.
                 Toyoda",
  booktitle =    "1984 International Symposium on Logic Programming",
  title =        "A Bottom-up Parser Base on Predicate Logic: a Survey
                 of the Formalism and its Implementation Techniques",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  year =         "1984",
  ISBN =         "0-8186-0522-7",
  ISBN-13 =      "978-0-8186-0522-2",
  note =         "CH2007-3/84/0000-0220\$01.00",
  abstract =     "The authors present a grammar formalism for natural
                 language analysis based on the subset of predictive
                 logic, called PAMPS, and its implementation technique.
                 PAMPS has a bottom-up, left-to-right, parallel parser,
                 augmented by topdown filtering and a look-ahead
                 facility. Rules of a PAMPS grammar can have procedures
                 included in their right-hand sides, defined as Horn
                 clauses. These procedures are executed in a to-down,
                 depth-first manner. PAMPS can thus be seen to be an
                 elaborate mixture of an efficient bottom-up parser and
                 the programming language PROLOG. The authors have
                 developed two versions of PAMPS implementation. One is
                 an interpreter, and the other is a virtual machine and
                 its compiler. The technique for the virtual machine is
                 based on that of the DEC-10 PROLOG. Some modifications
                 are added so that the technique for the virtual machine
                 does not depend on any particular searching strategy.
                 It runs faster than the interpreter by a factor of 20
                 to 76. The technique is also useful in implementing
                 pseudo or-parallelism of PROLOG on a sequential
                 machine.",
  keywords =     "Program Compilers; Programming Theory; Software
                 Engineering",
}

@InProceedings{Abramski:1985:SMV,
  author =       "S. Abramski and R. Sykes",
  editor =       "Jean-Pierre Jouannaud",
  booktitle =    "{FPCA '85, Functional Programming Languages and
                 Computer Architecture}",
  title =        "{Secd-m: A Virtual Machine for Applicative
                 Programming}",
  volume =       "201",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  pages =        "81--98",
  year =         "1985",
  series =       "Lecture Notes in Computer Science",
  abstract =     "We present a virtual machine to support {\em
                 applicative multiprogramming\/} --- the description of
                 concurrent, asynchronous systems such as operating
                 systems in a functional style. The machine extend's
                 Landin's secd machine to support multiple concurrent
                 expression evaluation, non-determinism in the form of
                 the fair merge, and a full range of input and output
                 devices. This allows system programs to be written in a
                 functional style. The secd-m machine has been
                 implemented and a number of functional concurrent
                 programs demonstrated.",
  keywords =     "SECD, Abstract Machine, Operating System",
}

@InCollection{Abramsky:1985:SMV,
  author =       "Samson Abramsky and R. Sykes",
  title =        "{{\sc SECD-M}}: {A} virtual machine for applicative
                 programming",
  crossref =     "Jouannaud:1985:FPL",
  pages =        "81--98",
  month =        sep,
  year =         "1985",
  bibdate =      "Tue Jan 23 22:52:55 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/fpca/fpca85.html#AbramskyS85",
  abstract =     "We present a virtual machine to support applicative
                 multiprogramming - the description of concurrent,
                 asynchronous systems such as operating systems in a
                 functional style. The machine extend's Landin's secd
                 machine to support multiple concurrent expression
                 evaluation, non-determinism in the form of the fair
                 merge, and a full range of input and output devices.
                 This allows system programs to be written in a
                 functional style. The secd-m machine has been
                 implemented and a number of functional concurrent
                 programs demonstrated.",
  keywords =     "functional nancy symposium parallel non-determinism",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/fpca/AbramskyS85",
}

@InProceedings{Bachrach:1985:XVM,
  author =       "Jonathan Bachrach and John Wallerius and
                 Jehan-Fran{\c{c}}ois Paris",
  title =        "A {XINU} Virtual Machine",
  crossref =     "USENIX:1985:SCP",
  pages =        "348--355",
  month =        "Summer",
  year =         "1985",
  bibdate =      "Fri Oct 18 07:24:24 MDT 1996",
  bibsource =    "ftp://ftp.uu.net/library/bibliography",
  acknowledgement = ack-nhfb,
  affiliation =  "University of California, San Diego",
}

@Article{Clocksin:1985:DSS,
  author =       "W. F. Clocksin",
  title =        "Design and simulation of a sequential {PROLOG}
                 machine",
  journal =      "New Generation Comput.",
  volume =       "3",
  number =       "1",
  address =      "Japan",
  pages =        "101--20",
  year =         "1985",
  abstract =     "PROLOG-X is an implemented portable interactive
                 sequential prolog system in which clauses are
                 incrementally compiled for a virtual machine called the
                 ZIP machine. At present, the ZIP machine is emulated by
                 software, but it has been designed to permit easy
                 implementation in microcode or hardware. PROLOG-X
                 running on the software-based emulator provides
                 performance comparable with existing prolog
                 interpreters. To demonstrate its efficiency,
                 compatibility, and comprehensiveness of implementation,
                 PROLOG-X has been used to compile and run several large
                 applications programs. Several novel techniques are
                 used in the implementation, particularly in the areas
                 of the representation of the record database, the
                 selection of clauses, and the compilation of arithmetic
                 expressions.",
  keywords =     "program compilers; PROLOG; program interpreters;
                 virtual machines",
}

@Article{Gaudiot:1985:PES,
  author =       "J. L. Gaudiot and M. D. Ercegovac",
  title =        "Performance evaluation of a simulated data-flow
                 computer with low-resolution actors",
  journal =      j-J-PAR-DIST-COMP,
  volume =       "2",
  number =       "4",
  pages =        "321--351",
  month =        nov,
  year =         "1985",
  CODEN =        "JPDCER",
  ISSN =         "0743-7315",
  bibdate =      "Mon Apr 14 07:47:33 1997",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliationaddress = "Univ of Southern California, Los Angeles, CA,
                 USA",
  classification = "713; 723; 921; C5220 (Computer architecture); C5440
                 (Multiprocessing systems); C5470 (Performance
                 evaluation and testing); C7430 (Computer engineering)",
  corpsource =   "Comput. Res. Inst., Univ. of Southern California, Los
                 Angeles, CA, USA",
  journalabr =   "J Parallel Distrib Comput",
  keywords =     "array handling; associative memory cycle time; chain;
                 communication costs; communication issues; computer;
                 computer architecture; computer programming languages;
                 computer simulation; computer systems, digital ---
                 Performance; computers --- Data Communication Systems;
                 daisy; deterministic simulation; directed acyclic
                 graphs; dual counter-rotating rings; evaluation;
                 integrated circuits, VLSI; interconnection networks;
                 low-resolution actors; Mathematical Models; operations;
                 optimal double loop network; parallel processing;
                 parallelism limitation; performance; performance
                 degradation; performance evaluation; program
                 structures; simulated data-flow; simulated data-flow
                 computer; size actors; variable-; variable-resolution
                 scheme; vector; virtual machines",
  treatment =    "X Experimental",
}

@Manual{IBM:1985:VM,
  author =       "{IBM}",
  title =        "Virtual machine",
  organization = "IBM Corporation",
  address =      "Endicott, NY, USA",
  edition =      "Fourth",
  pages =        "282",
  year =         "1985",
  LCCN =         "QA76.9.V5 V451 1985",
  bibdate =      "Mon Apr 10 10:43:28 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  acknowledgement = ack-nhfb,
  remark =       "Publication number SX20-4400-3.",
  subject =      "Virtual computer systems; IBM 370 (Computer)",
}

@Article{Nanba:1985:VAV,
  author =       "S. Nanba and N. Ohno and H. Kubo and H. Morisue and T.
                 Ohshima and H. Yamagishi",
  title =        "{VM\slash 4}: {ACOS-4} virtual machine architecture",
  journal =      j-COMP-ARCH-NEWS,
  volume =       "13",
  number =       "3",
  pages =        "171--178",
  month =        jun,
  year =         "1985",
  CODEN =        "CANED2",
  ISSN =         "0163-5964",
  bibdate =      "Fri May 12 09:40:54 MDT 2006",
  bibsource =    "http://dblp.uni-trier.de/db/conf/isca/isca85.html#NanbaOKMOY85;
                 http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  oldlabel =     "NanbaOKMOY85",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/isca/NanbaOKMOY85",
}

@Article{Ballard:1986:QSD,
  author =       "M. B. Ballard and D. Maier and A. Wirfs-Brock",
  title =        "{QUICKTALK}: a {Smalltalk-80} dialect for defining
                 primitive methods",
  journal =      j-SIGPLAN,
  volume =       "21",
  number =       "11",
  pages =        "140--140",
  month =        nov,
  year =         "1986",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sat Apr 25 11:46:37 MDT 1998",
  abstract =     "QUICKTALK is a dialect of Smalltalk-80 that can be
                 compiled directly into native machine code, instead of
                 virtual machine bytecodes. The dialect includes
                 ``hints'' on the class of method arguments, instance
                 variables, and class variables. We designed the dialect
                 to describe primitive Smalltalk methods. QUICKTALK
                 achieves improved performance over bytecodes by
                 eliminating the interpreter loop on bytecode execution,
                 by reducing the number of message send/returns via
                 binding some target methods at compilation, and by
                 eliminating redundant class checking. We identify
                 changes to the Smalltalk-80 system and compiler to
                 support the dialect, and give performance
                 measurements.",
  acknowledgement = ack-nhfb,
  classification = "C6140D (High level languages)",
  conflocation = "Portland, OR, USA; 29 Sept.-2 Oct. 1986",
  conftitle =    "OOPSLA '86. Object-Oriented Programming Systems,
                 Languages and Applications. Conference Proceedings",
  corpsource =   "Oregon Graduate Center, Beaverton, OR, USA",
  keywords =     "bytecode execution; bytecodes; high level languages;
                 interpreter loop; machine code; performance
                 measurements; primitive methods; QUICKTALK; redundant
                 class checking; Smalltalk-80; virtual machine
                 bytecodes",
  owner =        "manning",
  pubcountry =   "USA A14",
  sponsororg =   "ACM",
  treatment =    "P Practical",
}

@Article{Bhaskar:1986:VIO,
  author =       "K. S. Bhaskar and J. K. Peckol and J. L. Beug",
  title =        "{Virtual Instruments}: object-oriented program
                 synthesis",
  journal =      j-SIGPLAN,
  volume =       "21",
  number =       "11",
  pages =        "303--303",
  month =        nov,
  year =         "1986",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sat Apr 25 11:46:37 MDT 1998",
  acknowledgement = ack-nhfb,
  classification = "C6115 (Programming support); C7410D (Electronic
                 engineering)",
  conflocation = "Portland, OR, USA; 29 Sept.-2 Oct. 1986",
  conftitle =    "OOPSLA '86. Object-Oriented Programming Systems,
                 Languages and Applications. Conference Proceedings",
  keywords =     "automatic test equipment; Berkeley Smalltalk;
                 bottom-up synthesis; human interface models; interface
                 models; object-oriented program synthesis; programming
                 environment; programming environments; programming
                 paradigm; software development; SUN workstation; test
                 engineers; user interfaces; Virtual Instruments;
                 virtual machines",
  pubcountry =   "USA B05",
  sponsororg =   "ACM",
  treatment =    "P Practical",
}

@TechReport{Danvy:1986:LVM,
  author =       "Olivier Danvy",
  title =        "{LILA}: a Virtual Machine for Functional and
                 Declarative Languages",
  number =       "86--38",
  institution =  "LITP, France",
  month =        may,
  year =         "1986",
  note =         "Workshop on Future Directions in Computer Science and
                 Software",
}

@InProceedings{Genter:1986:UVM,
  author =       "Robert E. (Rick) Genter",
  title =        "{Unix} as a Virtual Machine Environment",
  crossref =     "USENIX:1986:SCP",
  pages =        "475--485",
  month =        "Summer",
  year =         "1986",
  bibdate =      "Fri Oct 18 07:24:24 MDT 1996",
  bibsource =    "ftp://ftp.uu.net/library/bibliography",
  acknowledgement = ack-nhfb,
  affiliation =  "BBN Laboratories Inc.",
}

@Article{Ishikawa:1986:COO,
  author =       "Y. Ishikawa and M. Tokoro",
  title =        "A concurrent object-oriented knowledge representation
                 language {Orient 84\slash K}: its features and
                 implementation",
  journal =      j-SIGPLAN,
  volume =       "21",
  number =       "11",
  pages =        "232--232",
  month =        nov,
  year =         "1986",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sat Apr 25 11:46:37 MDT 1998",
  acknowledgement = ack-nhfb,
  classification = "C6140D (High level languages); C6150J (Operating
                 systems)",
  conflocation = "Portland, OR, USA; 29 Sept.-2 Oct. 1986",
  conftitle =    "OOPSLA '86. Object-Oriented Programming Systems,
                 Languages and Applications. Conference Proceedings",
  corpsource =   "Department of Electr. Eng., Keio Univ., Yokohama,
                 Japan",
  keywords =     "behavior part; concurrent object oriented language;
                 concurrent object-oriented knowledge representation
                 language; high level languages; implementation issues;
                 knowledge systems; knowledge-base part; monitor part;
                 multiprocessing programs; object framework; Orient
                 84/K; virtual machine",
  pubcountry =   "USA A23",
  sponsororg =   "ACM",
  treatment =    "P Practical",
}

@TechReport{Lee:1986:DSE,
  author =       "Joon Sup Lee",
  title =        "{Dartmouth-Smalltalk: An Exercise in Implementation}",
  type =         "Technical Report",
  number =       "PCS-TR86-108",
  institution =  "Dartmouth College, Computer Science",
  address =      "Hanover, NH, USA",
  month =        jan,
  year =         "1986",
  bibdate =      "January 20, 1995",
  abstract =     "This report discusses a preliminary implementation of
                 the Smalltalk-80 virtual machine for VAX/Unix.",
}

@TechReport{McDonald:1986:TND,
  author =       "D. McDonald and J. Brooks and B. Woolf and P. Werner",
  title =        "Transition Networks for Discourse Management",
  type =         "Technical Report",
  number =       "UM-CS-1986-034",
  institution =  "University of Massachusetts, Amherst, Computer
                 Science",
  month =        dec # " 31,",
  year =         "1986",
  bibdate =      "April 3, 1996",
  abstract =     "Transition networks are a natural notation for
                 formalizing the space of actions and interpretations
                 through which a program must navigate when holding a
                 conversation with a human user [7], [19]. However,
                 dissatisfaction with the augmented transition network
                 formalism that we used in earlier work on tutoring
                 dialogs [28] has led us to develop the new formalism
                 that we present in this paper. We have implemented a
                 program framework --- a virtual machine --- that
                 defines a node and arc notation interpreted
                 semantically in terms of situations (arcs) that dictate
                 the actions (nodes) that the system is to take. Our
                 work is based on analyses of recorded conversations and
                 grounded in an experimental man-machine interface by
                 which a human lawyer would get advice from a legal
                 reasoning program. We present the motivations behind a
                 discourse manager and its place within a man-machine
                 interface, a definition of our formalism, and
                 illustrations of its use in two different domains.",
  language =     "English",
  notes =        "This report is only available in hardcopy form. For
                 ordering hard copies of reports which are currently
                 unavailable via ftp, please send email to:
                 techrept@cs.umass.edu U.S. mail to: Librarian Computer
                 Science Department Lederle Graduate Research Center
                 University of Massachusetts Amherst, Ma. 01003",
  retrieval =    "Send email to techrept@cs.umass.edu",
  revision =     "April 3, 1996",
}

@Article{Samples:1986:SSB,
  author =       "A. Dain Samples and David Ungar and Paul Hilfinger",
  key =          "Samples \& Ungar \& Hilfinger",
  title =        "{SOAR}: {Smalltalk} without bytecodes",
  journal =      j-SIGPLAN,
  volume =       "21",
  number =       "11",
  pages =        "107--118",
  month =        nov,
  year =         "1986",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sat Apr 25 11:46:37 MDT 1998",
  note =         "OOPSLA '86 Conference Proceedings, Norman Meyrowitz
                 (editor), September 1986, Portland, Oregon.",
  abstract =     "We have implemented Smalltalk-80 on an
                 instruction-level simulator for a RISC microcomputer
                 called SOAR. Measurements suggest that even a
                 conventional computer can provide high performance for
                 Smalltalk-80 by abandoning the `Smalltalk Virtual
                 Machine' in favor of compiling Smalltalk directly to
                 SOAR machine code, linearizing the object table, and
                 replacing reference counting with a new technique
                 called Generation Scavenging. In order to implement
                 these techniques, we had to find new ways of hashing
                 objects, accessing often-used objects, invoking blocks,
                 referencing activation records, managing activation
                 record stacks, and converting the virtual machine
                 images.",
  acknowledgement = ack-nhfb,
  annote =       "High performance for Smalltalk-80 results from
                 abandoning the Smalltalk Virtual Machine, compiling
                 directly into machine code, linearizing the activation
                 records on the stack, eliminating the object table, and
                 replacing reference counting with generation
                 scavenging. 22 references.",
  classification = "C6140 (Programming languages); C6150 (Systems
                 software)",
  conflocation = "Portland, OR, USA; 29 Sept.-2 Oct. 1986",
  conftitle =    "OOPSLA '86. Object-Oriented Programming Systems,
                 Languages and Applications. Conference Proceedings",
  corpsource =   "Department of Electr. Eng. and Comput. Sci.,
                 California Univ., Berkeley, CA, USA",
  keywords =     "activation records; bytecodes; Generation Scavenging;
                 hashing objects; instruction level simulator; invoking
                 blocks; microcomputers; often-used objects; programming
                 languages; reference counting; RISC microcomputer;
                 SOAR; SOAR machine code; virtual machine images;
                 virtual machine images invoking blocks; virtual
                 machines",
  owner =        "manning",
  pubcountry =   "USA A11",
  sponsororg =   "ACM",
  treatment =    "P Practical",
}

@TechReport{Schoen:1986:CS,
  author =       "Eric Schoen",
  title =        "The {CAOS} System",
  type =         "Technical Report",
  number =       "CS-TR-86-1125",
  institution =  "Stanford University, Department of Computer Science",
  pages =        "76",
  month =        mar,
  year =         "1986",
  bibdate =      "May 01, 1995",
  abstract =     "The CAOS system is a framework designed to facilitate
                 the development of highly concurrent real-time signal
                 interpretation applications. It explores the potential
                 of multiprocessor architectures to improve the
                 performance of expert systems in the domain of signal
                 interpretation. CAOS is implemented in Lisp on a
                 (simulated) collection of processor-memory sites,
                 linked by a high-speed communications subsystem. The
                 {"}virtual machine{"} on which it depends provides
                 remote evaluation and packet-based message exchange
                 between processes, using virtual circuits known as
                 streams. To this presentation layer, CAOS adds (1) a
                 flexible process scheduler, and (2) an object-centered
                 notion of agents, dynamically-instantiable entities
                 which model interpreted signal features. This report
                 documents the principal ideas, programming model, and
                 implementation of CAOS. A model of real-time signal
                 interpretation, based on replicated {"}abstraction{"}
                 pipelines, is presented. For some applications, this
                 model offers a means by which large numbers of
                 processors may be utilized without introducing
                 synchronization-necessitated software bottlenecks. The
                 report concludes with a description of the performance
                 of a large CAOS application over various sizes of
                 multiprocessor configurations. Lessons about problem
                 decomposition grain size, global problem solving
                 control strategy, and appropriate service provided to
                 CAOS by the underlying architecture are discussed.",
  notes =        "[Adminitrivia V1/Prg/19950501]",
}

@PhdThesis{Watson:1986:PRL,
  author =       "Paul Watson",
  title =        "The Parallel Reduction of Lambda Calculus Expression",
  school =       "University of Manchester",
  pages =        "133",
  month =        jul,
  year =         "1986",
  note =         "Also available as UMCS-87-2-1",
  abstract =     "Models of computation for the evaluation of Functional
                 Programs are based on the rules for reducing Lambda
                 Calculus expressions. Reduction is achieved by the
                 application of the b-conversion rule to suitable
                 redexes, but few models of computation provide a full
                 implementation of this rule because of the complexity
                 of avoiding variable name clashes. Consequently,
                 evaluation orders are restricted to those in which name
                 clashes cannot occur. This thesis develops a model of
                 computation for the parallel reduction of Lambda
                 Calculus expressions, represented in De Bruijn's
                 name-free notation, which does provide a full
                 implementation of b-conversion, allowing expression to
                 be reduced by any evaluation order. The model is
                 designed to allow reduction to be performed on a
                 parallel machine comprised of a set of processor/store
                 pairs connected by a communications network. A data-
                 driven, graph reduction execution mechanism is used to
                 exploit the parallel hardware efficiently. A language
                 for specifying graph reduction models of computation is
                 proposed, and is used to give full specification of the
                 Lambda Calculus reduction model. Specifications in the
                 language can be compiled to the instruction set of a
                 virtual machine. The code produced can then be executed
                 by a virtual machine emulator, or could be recompiled
                 to the order code of a physical processor to allow the
                 high performance simulation of models of computation.
                 The virtual machine is used as the foundation for the
                 design of a physical machine which would support the
                 parallel reduction of lambda calculus expressions. One
                 of the major issues in the design of graph reduction
                 models of computation is the removal of redundant parts
                 of the expression graph. Neither of the two standard
                 Garbage Collection schemes: Reference Count, or
                 Mark-Scan is entirely suitable for a distributed
                 machine, mainly because of the synchronisation they
                 require. A modified Reference Garbage Collection scheme
                 is described which removes the need for
                 synchronisation, and enhances some of the attractive
                 properties of Reference Count Garbage Collection.",
}

@TechReport{Baden:1987:RTP,
  author =       "Scott B. Baden",
  title =        "Run-Time Partitioning of Scientific Continuum
                 Calculations Running on Multiprocessors",
  type =         "Technical Report",
  number =       "CSD-87-366",
  institution =  "University of California, Berkeley",
  pages =        "154",
  month =        jun,
  year =         "1987",
  bibdate =      "June 10, 1993",
  abstract =     "A wide range of scientific continuum calculations
                 typically concentrate computational effort
                 non-uniformly over localized regions of physical space.
                 We present a run-time partitioning strategy, intended
                 for such methods, that distributes work evenly across a
                 team of processors and that can exploit the spatial
                 localization present in the original computation in
                 order to avoid high overhead costs. We tried out our
                 strategy on Anderson's Methods of Local Corrections, a
                 type of vortex method for computational fluid dynamics.
                 Because computational effort follows particles that
                 congregate and disperse irregularly about the domain,
                 this problem is hard to partition in a way that
                 distributes the work evenly among the processors. We
                 ran experiments on 32 processors of an Intel Personal
                 Scientific Computer-- a message-passing hypercube
                 multiprocessor--and on 4 processors of a Cray X-MP--a
                 shared-memory vector architecture--and achieved good
                 parallel speedups of 22 and 3.6, respectively. The
                 partitioner may be implemented as a virtual machine
                 (VM) and made available to the programmer as a library
                 of run-time utilities. The semantics of the VM are
                 insensitive to the application and to the computer
                 architecture on which the VM are insensitive to the
                 application and to the computer architecture on which
                 the VM is implemented. The VM works with ordinary
                 programming languages, incurs modest overhead costs,
                 and requires no special hardware support. It should
                 apply to diverse applications, including finite
                 difference methods, and to diverse architectures
                 without requiring that the application be reprogrammed
                 extensively for each new architecture.",
  retrieval =    "tiff (in {001-154}.tif)",
}

@Article{Bergh:1987:HEH,
  author =       "Arndt B. Bergh and Keith Keilman and Daniel J.
                 Magenheimer and James A. Miller",
  title =        "{HP} 3000 Emulation on {HP} Precision Architecture
                 Computers",
  journal =      j-HEWLETT-PACKARD-J,
  volume =       "38",
  number =       "11",
  pages =        "87--89",
  month =        dec,
  year =         "1987",
  CODEN =        "HPJOAX",
  ISSN =         "0018-1153",
  bibdate =      "Tue Mar 25 14:12:15 MST 1997",
  bibsource =    "Compendex database",
  abstract =     "Two software subsystems for HP Precision Architecture
                 machines provide program execution that duplicates that
                 of HP 3000s running the MPE V operating system. The HP
                 3000 Emulator and the HP 3000 Object Code Translator
                 (OCT), provide program execution that duplicates that
                 of MPE V on the non-HP-Precision-Architecture HP 3000s.
                 The Emulator enables a user program to be loaded and
                 run without preparation or modification on an HP
                 Precision Architecture computer with the normal MPE
                 commands. In the case of the OCT, specific action by
                 the user is required to produce a translated program
                 before it can be run in the improved-performance
                 translated mode. This involves no code modification but
                 only a compiler-like invocation of the OCT for
                 translation, after which the target program will
                 automatically execute translated.",
  acknowledgement = ack-nhfb,
  classcodes =   "C6150J (Operating systems)",
  classification = "722; 723",
  journalabr =   "Hewlett Packard J",
  keywords =     "3000 Object Code Translator; commercial operating
                 system; compatibility mode; computer architecture;
                 computer operating systems --- Program Compilers;
                 computers; environment; Hewlett Packard computers; HP;
                 HP 3000 emulator; HP 3000 Emulator; HP 3000 object code
                 translator (oct); HP 3000 Series 930; HP Precision
                 Architecture; MPE V; MPE XL operating system; operating
                 systems (computers); program execution; program
                 translation; software portability; virtual machines",
  treatment =    "P Practical; R Product Review",
}

@InProceedings{Bush:1987:CSR,
  author =       "W. R. Bush and A. D. Samples and D. Ungar and P. N.
                 Hilfinger",
  key =          "Bush et al.",
  booktitle =    "Proceedings of the Second International Conference on
                 Architectural Support for Programming Languages and
                 Operating Systems-ASPLOSII",
  title =        "Compiling {Smalltalk-80} to a {RISC}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "112--116",
  month =        oct,
  year =         "1987",
  bibdate =      "Mon Nov 16 15:42:30 1987",
  abstract =     "The Smalltalk On A RISC project at U.C. Berkeley
                 proves that a high-level object-oriented language can
                 attain high performance on a modified reduced
                 instruction set architecture. The single most important
                 optimization is the removal of a layer of
                 interpretation, compiling the bytecoded virtual machine
                 instructions into low-level, register-based, hardware
                 instructions. This paper describes the compiler and how
                 it was affected by SOAR architectural features. The
                 compiler generates code of reasonable density and
                 speed. Because of Smalltalk-80's semantics, relatively
                 few optimizations are possible, but hardware and
                 software mechanisms at runtime offset these
                 limitations. Register allocation for an architecture
                 with register windows comprises the major task of the
                 compiler. Performance analysis suggests that SOAR is
                 not simple enough; several hardware features could be
                 efficiently replaced by instruction sequences
                 constructed by the compiler.",
  owner =        "manning",
}

@Article{Carr:1987:EUC,
  author =       "Harold Carr and Robert R. Kessler",
  title =        "Emulator for {Utah Common Lisp}'s {Abstract Virtual
                 Register Machine}",
  journal =      j-J-FORTH-APPL-RES,
  volume =       "5",
  number =       "1",
  year =         "1987",
  CODEN =        "JFAREL",
  ISSN =         "0738-2022",
  bibdate =      "Wed Aug 6 19:54:46 MDT 1997",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliationaddress = "Univ of Utah, Salt Lake City, UT, USA",
  classification = "723",
  journalabr =   "J Forth Appl Res",
  keywords =     "abstract virtual register machine; computer operating
                 systems; computer programming languages --- Lisp;
                 forth; Utah Common Lisp; virtual machine emulator",
  pagecount =    "1987",
}

@Article{Iacobovici:1987:VSP,
  author =       "S. Iacobovici and C. C. Ng",
  title =        "{VLSI} and System Performance Modeling",
  journal =      j-IEEE-MICRO,
  volume =       "7",
  number =       "4",
  pages =        "59--72",
  month =        aug,
  year =         "1987",
  CODEN =        "IEMIDZ",
  ISSN =         "0272-1732",
  bibdate =      "Thu Dec 14 06:08:58 MST 2000",
  bibsource =    "Science Citation Index database (1980--2000)",
  acknowledgement = ack-nhfb,
  classcodes =   "B1130B (Computer-aided circuit analysis and design);
                 B2570 (Semiconductor integrated circuits); C7410D
                 (Electronic engineering); C7430 (Computer
                 engineering)",
  corpsource =   "Nat. Semicond., Santa Clara, CA, USA",
  keywords =     "circuit analysis computing; CPU; digital simulation;
                 evaluation; high-level; high-level simulation
                 environment; PAWS; performance; Performance Analysis
                 Workbench; performance-evaluation; simulation language;
                 simulation languages; System; system performance
                 modeling; virtual machines; VLSI; VLSI chips",
  treatment =    "P Practical",
  xxpages =      "59--71",
}

@TechReport{Lau:1987:OCV,
  author =       "A. S. K. Lau",
  title =        "Overview of the {CLIP7} Virtual Machine",
  type =         "Report",
  number =       "87/6",
  institution =  "Department of Physics and Astronomy, University
                 College London",
  address =      "London, UK",
  year =         "1987",
  keywords =     "multiprocessors, architecture, CLIP7",
}

@Article{Odette:1987:CPF,
  author =       "L. L. Odette",
  title =        "Compiling Prolog to Forth",
  journal =      j-J-FORTH-APPLIC-RESEARCH,
  volume =       "4",
  number =       "4",
  pages =        "487--534",
  year =         "1987",
  abstract =     "The fact that the focus of a Prolog computation is the
                 structure of the program leads directly to a view of a
                 Prolog compiler as a procedure that takes a collection
                 of Prolog clauses and produces a description of their
                 structure that just happens to be executable. Forth
                 lends itself naturally to the description of both
                 structures and processes. In fact, some hold that Forth
                 programming involves creating the parts of speech
                 required to describe an application. This article
                 proposes that for this reason, Forth is a very good
                 language for prototyping Prolog compilers. A simple
                 object language for a Prolog to Forth compiler is
                 presented and discussed.",
  checked =      "19940317",
  keywords =     "source",
  sjb =          "Ignore all but the last sentence of the abstract, the
                 last sentence is what this paper is all about. It
                 describes a virtual machine for executing Prolog, how
                 this virtual machine can be implemented in Forth and
                 how the virtual machine instructions can be created
                 from Prolog source. Appendices contain the code to
                 implement the virtual machine and Prolog to virtual
                 machine mapping. The compiled code is over ten times
                 quicker than the interpreter described
                 in~cite{Odette:Paloski:jfar:1987}. An optimised version
                 has been ported to the NC4000P where it runs the naive
                 reverse benchmark at 6K LIPS at a clock rate of 4MHz.
                 Does {\em not} do garbage collection.",
}

@Article{Umeno:1987:NMR,
  author =       "Hidenori Umeno and Shunji Tanaka",
  title =        "New Methods for Realizing Plural Near-Native
                 Performance Virtual Machines",
  journal =      j-IEEE-TRANS-COMPUT,
  volume =       "36",
  number =       "9",
  pages =        "1076--1087",
  year =         "1987",
  CODEN =        "ITCOB4",
  ISSN =         "0018-9340",
  bibdate =      "Tue Jan 23 02:35:55 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/journals/tc/tc36.html#UmenoT87",
  oldlabel =     "UmenoT87",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#journals/tc/UmenoT87",
}

@PhdThesis{Watson:1987:PRL,
  author =       "Paul Watson",
  title =        "The Parallel Reduction of Lambda Calculus Expression",
  type =         "Ph.{D}. Thesis",
  number =       "UMCS-87-2-1",
  school =       "University of Manchester, Computer Science
                 Department",
  month =        feb,
  year =         "1987",
  URL =          "http://www.cs.man.ac.uk/csonly/cstechrep/Abstracts/UMCS-87-2-1.html
                 mailto:techreports@cs.man.ac.uk",
  abstract =     "Models of computation for the evaluation of Functional
                 Programs are based on the rules for reducing Lambda
                 Calculus expressions. Reduction is achieved by the
                 application of the b-conversion rule to suitable
                 redexes, but few models of computation provide a full
                 implementation of this rule because of the complexity
                 of avoiding variable name clashes. Consequently,
                 evaluation orders are restricted to those in which name
                 clashes cannot occur. \_ This thesis develops a model
                 of computation for the parallel reduction of Lambda
                 Calculus expressions, represented in De Bruijn's
                 name-free notation, which does provide a full
                 implementation of b-conversion, allowing expression to
                 be reduced by any evaluation order. The model is
                 designed to allow reduction to be performed on a
                 parallel machine comprised of a set of processor/store
                 pairs connected by a communications network. A data-
                 driven, graph reduction execution mechanism is used to
                 exploit the parallel hardware efficiently. \_ A
                 language for specifying graph reduction models of
                 computation is proposed, and is used to give full
                 specification of the Lambda Calculus reduction model.
                 Specifications in the language can be compiled to the
                 instruction set of a virtual machine. The code produced
                 can then be executed by a virtual machine emulator, or
                 could be recompiled to the order code of a physical
                 processor to allow the high performance simulation of
                 models of computation. The virtual machine is used as
                 the foundation for the design of a physical machine
                 which would support the parallel reduction of lambda
                 calculus expressions. \_ One of the major issues in the
                 design of graph reduction models of computation is the
                 removal of redundant parts of the expression graph.
                 Neither of the two standard Garbage Collection schemes:
                 Reference Count, or Mark-Scan is entirely suitable for
                 a distributed machine, mainly because of the
                 synchronisation they require. A modified Reference
                 Garbage Collection scheme is described which removes
                 the need for synchronisation, and enhances some of the
                 attractive properties of Reference Count Garbage
                 Collection.",
}

@Article{Bodlaender:1988:CFU,
  author =       "Hans L. Bodlaender",
  title =        "The complexity of finding uniform emulations on fixed
                 graphs",
  journal =      j-INFO-PROC-LETT,
  volume =       "29",
  number =       "3",
  pages =        "137--141",
  day =          "26",
  month =        oct,
  year =         "1988",
  CODEN =        "IFPLAT",
  ISSN =         "0020-0190",
  MRclass =      "68Q25 (05C99 68R10)",
  MRnumber =     "90e:68044",
  MRreviewer =   "Pavel Tomasta",
  bibdate =      "Wed Nov 11 12:16:26 MST 1998",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliationaddress = "Utrecht, Neth",
  classification = "722; 723; 921; C4240 (Programming and algorithm
                 theory)",
  corpsource =   "Department of Comput. Sci., Utrecht Univ.,
                 Netherlands",
  journalabr =   "Inf Process Lett",
  keywords =     "complexity; computational complexity; Computer
                 Simulation; Computer Systems, Digital; directed graphs;
                 Fixed Graphs; fixed graphs; graph theory; Mathematical
                 Techniques--Graph Theory; NP-complete; NP-completeness;
                 parallel algorithms; Parallel Processing; Processor
                 Networks; structure-preserving simulations; theory;
                 Uniform Emulations; uniform emulations; verification;
                 virtual machines",
  subject =      "F.1.2 Theory of Computation, COMPUTATION BY ABSTRACT
                 DEVICES, Modes of Computation, Parallelism \\ F.1.3
                 Theory of Computation, COMPUTATION BY ABSTRACT DEVICES,
                 Complexity Classes, Reducibility and completeness \\
                 G.2.m Mathematics of Computing, DISCRETE MATHEMATICS,
                 Miscellaneous \\ G.1.0 Mathematics of Computing,
                 NUMERICAL ANALYSIS, General, Parallel algorithms",
  treatment =    "T Theoretical or Mathematical",
}

@TechReport{Gilbert:1988:TSW,
  author =       "P. (Paul) Gilbert and others",
  title =        "Typed Smalltalk working papers, 1988",
  volume =       "UIUCDCS-R-88-1457; UILU-ENG-88-1762",
  type =         "Report",
  institution =  "Department of Computer Science, University of Illinois
                 at Urbana-Champaign",
  address =      "1304 W. Springfield Ave., Urbana 61801, IL, USA",
  pages =        "118",
  month =        sep,
  year =         "1988",
  LCCN =         "QA76 .I4 no. 1457; QA76.73.S59",
  bibdate =      "Mon Apr 10 10:43:48 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  remark =       "A user's guide to Typed Smalltalk / Ralph E. Johnson
                 and Justin O. Graver -- High level optimization in a
                 Typed Smalltalk compiler / by Joseph Patrick Loyall
                 (iii, 44 p.) -- The virtual machine architecture of
                 Typed Smalltalk / Ralph E. Johnson, Lawrence W.
                 Zurawski -- An implementation-independent definition of
                 Smalltalk execution contexts / Lawrence W. Zurawski --
                 Creating stand-alone Smalltalk applications / Paul D.
                 Gilbert.",
  subject =      "Smalltalk (Computer program language); Object-oriented
                 programming (Computer science)",
}

@Manual{IBM:1988:VMSa,
  author =       "{IBM Corporation}",
  title =        "Virtual machine \slash{} extended architecture system
                 product: application development guide for {FORTRAN}
                 and {COBOL}",
  organization = pub-IBM,
  address =      pub-IBM:adr,
  pages =        "iii--x + 263",
  year =         "1988",
  bibdate =      "Sat Jan 27 13:40:57 MST 1996",
  acknowledgement = ack-nhfb,
  annote =       "Index. ``SC23-0369-0.'' ``Licensed program
                 5664-308''.",
  keywords =     "IBM Manuals.",
}

@Manual{IBM:1988:VMSb,
  author =       "{International Business Machines Corporation}",
  title =        "Virtual machine \slash{} system product: application
                 development guide for {FORTRAN} and {COBOL}",
  organization = pub-IBM,
  address =      pub-IBM:adr,
  edition =      "Fourth",
  pages =        "x + 280",
  year =         "1988",
  bibdate =      "Sat Jan 27 13:40:57 MST 1996",
  acknowledgement = ack-nhfb,
  annote =       "Spine title: VM/SP Application Development Guide for
                 FORTRAN and COBOL. ``SC24-5247-03.'' ``July 1988''
                 ``File number S370/4300-50.'' Includes index.
                 Bibliography: p.263-266.",
  keywords =     "Virtual computer systems.",
}

@Article{Janakiram:1988:RPB,
  author =       "V. K. Janakiram and E. F. Gehringer and D. P. Agrawal
                 and Mehrotra and R.",
  title =        "A randomized parallel branch-and-bound algorithm",
  journal =      j-INT-J-PARALLEL-PROG,
  volume =       "17",
  number =       "3",
  pages =        "277--301",
  month =        jun,
  year =         "1988",
  CODEN =        "IJPPE5",
  ISSN =         "0885-7458 (print), 1573-7640 (electronic)",
  bibdate =      "Sat Apr 26 11:04:14 MDT 1997",
  bibsource =    "http://springerlink.metapress.com/openurl.asp?genre=issue&issn=0885-7458&volume=17&issue=3",
  acknowledgement = ack-nhfb,
  classification = "C4240 (Programming and algorithm theory); C5470
                 (Performance evaluation and testing); C7430 (Computer
                 engineering)",
  corpsource =   "AT and T Bell Labs, Holmdel, NJ, USA",
  keywords =     "computational complexity; knapsack problem;
                 multiprocessor simulator; parallel algorithms; parallel
                 branch-and-bound algorithm; parallel deterministic
                 algorithms; performance evaluation; randomized
                 algorithms; reliability; software reliability; speedup
                 bounds; virtual machines",
  treatment =    "P Practical; T Theoretical or Mathematical",
}

@Article{Kermarrec:1988:SEA,
  author =       "Y. Kermarrec",
  title =        "Some experiments with {Ada}",
  journal =      j-ADA-USER,
  volume =       "9",
  number =       "2",
  pages =        "79--82",
  month =        "????",
  year =         "1988",
  CODEN =        "ADUSEB",
  ISSN =         "0268-652X",
  bibdate =      "Mon Sep 8 18:43:50 MDT 1997",
  acknowledgement = ack-nhfb,
  classification = "C6110 (Systems analysis and programming); C7430
                 (Computer engineering)",
  corpsource =   "Department Inf. et Reseaux, Ecole Nat. Sup{\'e}rieure
                 des Telecommun. de Bretagne, Brest, France",
  keywords =     "Ada; Ada programming language; computer networks;
                 distributed algorithms; Occam; Occam debugging;
                 parallel programming; program debugging; transputer
                 network simulator; transputers; virtual machines",
  pubcountry =   "UK",
  treatment =    "P Practical",
}

@InCollection{Low:1988:SPO,
  author =       "C. Low",
  editor =       "S. Gjessing and K. Nygaard",
  booktitle =    "ECOOP '88 European Conference on Object-Oriented
                 Programming",
  title =        "A Shared, Persistent Object Store",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  pages =        "390--410",
  month =        aug,
  year =         "1988",
  abstract =     "Smalltalk-80 is presented as a useful testbed for
                 prototyping applications involving shared, persistent
                 objects, and a detailed design of a shared persistent
                 object store is discussed. The store is a set of named
                 containers for object state, and it provides low-cost
                 atomic transactions using an optimistic synchronization
                 technique. The standard Smalltalk-80 virtual machine is
                 modified to support a new object class, the
                 Transaction,and an example of a Smalltalk program using
                 nested sub-transactions is given. Immutability of
                 object state is identified both as an important
                 property of objects, and a basis for producing an
                 efficient implementation within a distributed system
                 environment.",
  keywords =     "Persistent Objects",
}

@Article{Sandberg:1988:EOO,
  author =       "David W. Sandberg",
  title =        "Experience With an Object-oriented Virtual Machine",
  journal =      j-SPE,
  volume =       "18",
  number =       "5",
  pages =        "415--426 (or 415--425??)",
  month =        may,
  year =         "1988",
  CODEN =        "SPEXBL",
  ISSN =         "0038-0644",
  bibdate =      "Sat May 31 13:36:16 MDT 1997",
  acknowledgement = ack-nhfb,
}

@Article{So:1988:PLV,
  author =       "K. So and V. Zecca",
  title =        "Program locality of vectorized applications running on
                 the {IBM} 3090 with {Vector Facility}",
  journal =      j-IBM-SYS-J,
  volume =       "27",
  number =       "4",
  pages =        "436--452",
  month =        nov,
  year =         "1988",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Tue Mar 19 17:38:46 1996",
  abstract =     "An Instruction-level simulator is used to study the
                 program locality of large scientific applications. The
                 simulator, which models an IBM 3090 processor with
                 Vector Facility and a cache, was developed to help a
                 programmer improve the performance of an application
                 through better understanding and use of the Vector
                 Facility and the memory hierarchy of the IBM 3090
                 system. The main observations on a set of scientific
                 applications are as follows: although the applications
                 have different characteristics of memory accesses and
                 vectorization, their program locality is high enough to
                 take advantage of conventional cache structures; the
                 cache hit ratio of the vector execution can be quite
                 different from (but not significantly lower than) that
                 of the scalar execution of the same application; and
                 the application programs that are written to optimize
                 the use of the memory hierarchy in the system generally
                 result in higher cache hit ratios than the others. The
                 cache performance of these applications with respect to
                 various cache parameters is also presented. In
                 particular, the study finds that the cache structure of
                 the IBM 3090 is well suited for large scientific
                 applications.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Res. Div., Yorktown Heights, NY, USA",
  classification = "C5470 (Performance evaluation and testing); C5440
                 (Multiprocessor systems and techniques); C7430
                 (Computer engineering)",
  keywords =     "Cache performance; Conventional cache structures;
                 design, Instruction-level simulator; IBM 3090;
                 measurement; performance; Scientific applications;
                 Vector Facility",
  language =     "English",
  pubcountry =   "USA",
  subject =      "C.4 Computer Systems Organization, PERFORMANCE OF
                 SYSTEMS \\ C.5.3 Computer Systems Organization,
                 COMPUTER SYSTEM IMPLEMENTATION, Microcomputers \\ B.3.2
                 Hardware, MEMORY STRUCTURES, Design Styles, Cache
                 memories",
  thesaurus =    "Buffer storage; IBM computers; Parallel machines;
                 Performance evaluation; Virtual machines",
}

@Article{Tucker:1988:AAC,
  author =       "Lewis W. Tucker and George G. Robertson",
  title =        "Architecture and Applications of the {Connection
                 Machine}",
  journal =      j-COMPUTER,
  volume =       "21",
  number =       "8",
  institution =  "TMC",
  pages =        "26--38",
  month =        aug,
  year =         "1988",
  CODEN =        "CPTRB4",
  ISSN =         "0018-9162",
  bibdate =      "Sat Aug 17 16:07:35 1996",
  bibsource =    "Database/Graefe.bib; Graphics/rosenfeld/1988.bib;
                 Graphics/vision.bib; Misc/IMMD_IV.bib;
                 Parallel/par.misc.bib",
  annote =       "I think this is a better article than the Scientific
                 American or other papers I've seen on this. --enm There
                 is some salesmanship.",
  keywords =     "CM, CM-2, data vault, virtual machines, nexus, *LISP,
                 C*, SIMD, image analysis example,, Thinking Machines,
                 image processing, digital",
}

@Article{Birmingham:1989:MSC,
  author =       "William P. Birmingham and Anurag P. Gupta and Daniel
                 P. Siewiorek",
  title =        "The {Micon} System for Computer Design",
  journal =      j-IEEE-MICRO,
  volume =       "9",
  number =       "5",
  pages =        "61--67",
  month =        oct,
  year =         "1989",
  CODEN =        "IEMIDZ",
  ISSN =         "0272-1732",
  bibdate =      "Thu Dec 14 06:08:58 MST 2000",
  bibsource =    "Compendex database; Science Citation Index database
                 (1980--2000)",
  acknowledgement = ack-nhfb,
  affiliation =  "Univ of Michigan, Ann Arbor, MI, USA",
  classcodes =   "C7430 (Computer engineering)",
  classification = "722; 723",
  corpsource =   "Michigan Univ., Ann Arbor, MI, USA",
  keywords =     "artificial intelligence; computer; Computer Hardware;
                 Computers, Microcomputer--Design; databases; Design;
                 design; Design Automation; design synthesis; Micon
                 system; microprocessor configurer system; tool
                 environment; virtual machines",
  treatment =    "P Practical; R Product Review",
  xxauthor =     "W. P. Birmingham and D. P. Siewiorek and A. P. Gupta",
}

@Article{Blandy:1989:VSM,
  author =       "G. O. Blandy and S. R. Newson",
  title =        "{VM\slash XA} storage management",
  journal =      j-IBM-SYS-J,
  volume =       "28",
  number =       "1",
  pages =        "175--191",
  year =         "1989",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Tue Mar 19 17:38:46 1996",
  abstract =     "The VM/XA System Product manages the vast amounts of
                 real and expanded storage available on the new
                 Enterprise Systems Architecture/370 processors for both
                 guest use and support of internal operating system
                 functions. The management algorithms are examined, and
                 the rationale for their selection is presented.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Data Syst. Div., Kingston, NY, USA",
  classification = "C6120 (File organisation); C6150J (Operating
                 systems); C5220 (Computer architecture); C5420
                 (Mainframes and minicomputers)",
  keywords =     "Enterprise Systems Architecture/370; Expanded storage;
                 Guest use; IBM; Internal operating system functions;
                 Mainframes; Storage management; Virtual machines;
                 VM/XA",
  language =     "English",
  pubcountry =   "USA",
  thesaurus =    "Computer architecture; IBM computers; Mainframes;
                 Storage allocation; Storage management; Virtual
                 machines; Virtual storage",
}

@TechReport{Blelloch:1989:SPP,
  author =       "G. E. Blelloch",
  title =        "{SCAN} {PRIMITIVES} {AND} {PARALLEL} {VECTOR}
                 {MODELS}",
  type =         "Technical Report",
  number =       "MIT/LCS/TR-463",
  institution =  "Massachusetts Institute of Technology, Laboratory for
                 Computer Science",
  pages =        "256",
  month =        jul,
  year =         "1989",
  bibdate =      "February 25, 1995",
  note =         "Cost is \$26. Date: Oct. 1989 Keywords: parallel
                 algorithms, parallel computing, P-RAM, parallel
                 compilers, data-parallel, scan operation, vector
                 models",
  abstract =     "This thesis defines a class of machine models called
                 parallel vector models and demonstrates that these
                 models are excellent both as algorithmic models on
                 which the complexity of algorithms can be analyzed, and
                 as instruction sets for virtual machines to which very
                 high-level programming languages can be compiled. As
                 algorithmic models, the thesis argues that the parallel
                 vector models permit a simpler and more concise
                 description and complexity analysis of algorithms than
                 the Parallel-RAM models. The thesis describes and
                 analyzes a broad variety of parallel algorithms in the
                 parallel vector models ranging from graph algorithms to
                 numerical algorithms. The thesis also describes a
                 compiler that compiles a high-level language,
                 PARALATION LISP, into the models and describes how the
                 models can be implemented on an actual parallel
                 machine, the Connection Machine. A set of scan
                 primitives and a set of segmented primitives play a
                 crucial role in the algorithms and the algorithms and
                 the compiler described in the thesis. The scan
                 primitives can be used for a huge variety of tasks and
                 improve the asymptotic complexity of many algorithms by
                 an O (lg n) factor. The segmented instructions can be
                 used to execute a vector routine over many sets of
                 values in parallel. They form the foundation of a
                 technique for flattening nested parallelism used by the
                 compiler.",
  notes =        "Cost is \$26. Date: Oct. 1989 Keywords: parallel
                 algorithms, parallel computing, P-RAM, parallel
                 compilers, data-parallel, scan operation, vector
                 models",
}

@Article{Bozman:1989:VSM,
  author =       "G. P. Bozman",
  title =        "{VM\slash XA SP2} minidisk cache",
  journal =      j-IBM-SYS-J,
  volume =       "28",
  number =       "1",
  pages =        "165--174",
  year =         "1989",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Tue Mar 19 17:38:46 1996",
  abstract =     "Given the growing disparity between CPU power and the
                 speed of secondary storage, a data cache exploiting
                 large processor storage has the potential to improve
                 response time dramatically in many situations. The
                 VM/XA SP2 minidisk cache facility, the result of
                 research activity on the characteristics of interactive
                 file-system activity, uses expanded storage to cache
                 input/output to minidisks on the Conversational Monitor
                 System. The size of the cache is dynamically adjusted
                 by an arbitration process to optimize system
                 performance. Several other functions improve the
                 performance of the cache during periods of unusual I/O
                 loads.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Res. Div., T. J. Watson Res. Center, Yorktown
                 Heights, NY, USA",
  classification = "C5320C (Storage on moving magnetic media); C6150J
                 (Operating systems); C5320G (Semiconductor storage)",
  keywords =     "Conversational Monitor System; CPU power; Data cache;
                 Expanded storage; I/O loads; IBM; Input/output;
                 Interactive file-system activity; Large processor
                 storage; Response time; Secondary storage; System
                 performance; Virtual Machine/Extended Architecture;
                 VM/XA SP2 minidisk cache",
  language =     "English",
  pubcountry =   "USA",
  thesaurus =    "Buffer storage; IBM computers; Magnetic disc storage;
                 Storage allocation; Storage management",
}

@TechReport{Brorsson:1989:ESV,
  author =       "Mats Brorsson",
  key =          "198910",
  title =        "{Emulation of Shared Virtual Memory on an Experimental
                 Multiprocessor.}",
  institution =  "Department of Computer Engineering, Lund University",
  address =      "P.O. Box 118, S-221~00 Lund, Sweden",
  month =        oct,
  year =         "1989",
  annote =       "The performance of a paged virtual memory system is
                 relative to program behaviour, which makes it important
                 to use realistic workloads in the evaluation. Memory
                 traces are often used to drive simulation models of
                 paging performance. In the case of multiprocessors,
                 however, the complex interactions between parallel
                 processes cannot be captured by static traces. An
                 experimental environment for performance evaluation of
                 shared virtual memory systems on a class of
                 multiprocessors has been developed. It is based on
                 emulation of memory structures in software, which
                 combines the flexibility of simulation with the
                 efficiency of dedicated hardware. Each memory reference
                 is handled by software executed on special purpose
                 emulation hardware, which makes it possible to
                 implement a wide range of memory management mechanisms.
                 By combining hardware (containing 38 processing
                 elements) with emulation software, virtual machines
                 capable of executing real life parallel programs are
                 created. Non-invasive run-time measurements targeted
                 for each particular experiment can be done by means of
                 'software probes' integrated in the emulation software.
                 In order to show how the experimental system can be
                 used, a particular decentralized virtual memory
                 management scheme has been implemented. It is based on
                 a generalized version of the Denning working set policy
                 also handling shared pages. As part of the example,
                 facilities for automatic experimental control and
                 graphical result presentation are demonstrated.",
  ftp =          "dit.lth.se:/pub/techreports/complete-papers/Dt-070.ps.Z",
  location =     "070",
}

@TechReport{Demillo:1989:DSC,
  author =       "Richard A. Demillo and Richard J. Lipton",
  title =        "Defining Software by Continuous, Smooth Functions",
  number =       "SERC-TR-49-P",
  institution =  "Software Engineering Research Centre",
  month =        aug,
  year =         "1989",
  abstract =     "A simple proof is given that for every operational
                 description of a software system expressed as a
                 discrete state transition function on a virtual machine
                 there is a continuous smooth function on the reals that
                 agrees with the state transition function on all legal
                 states and has exactly the same complexity. An
                 implication of this result is that there is no reason
                 in principle that the methods of classical analysis
                 cannot be used in software engineering.",
}

@Article{Farrow:1989:VCB,
  author =       "Rodney Farrow and Alec G. Stanculescu",
  title =        "A {VHDL} compiler based on attribute grammar
                 methodology",
  journal =      j-SIGPLAN,
  volume =       "24",
  number =       "7",
  pages =        "120--130",
  month =        jul,
  year =         "1989",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:15:41 MST 2003",
  bibsource =    "http://www.acm.org/pubs/contents/proceedings/pldi/73141/index.html;
                 http://portal.acm.org/;
                 http://www.acm.org/pubs/contents/proceedings/pldi/73141/index.html",
  URL =          "http://www.acm.org:80/pubs/citations/proceedings/pldi/73141/p120-farrow/",
  abstract =     "This paper presents aspects of a compiler for a new
                 hardware description language (VHDL) written using
                 attribute grammar techniques. VHDL is introduced, along
                 with the new compiler challenges brought by a language
                 that extends an Ada subset for the purpose of
                 describing hardware. Attribute grammar programming
                 solutions are presented for some of the language
                 challenges. The organization of the compiler and of the
                 target virtual machine represented by the simulation
                 kernel are discussed, and performance and code-size
                 figures are presented. The paper concludes that
                 attribute grammars can be used for large commercial
                 compilers with excellent results in terms of rapid
                 development time and enhanced maintainability, and
                 without paying any substantial penalty in terms of
                 either the complexity of the language that can be
                 handled or the resulting compilation speed.",
  acknowledgement = ack-nhfb,
  annote =       "Published as part of the Proceedings of PLDI'89.",
  classification = "722; 723",
  conference =   "Proceedings of the SIGPLAN '89 Conference on
                 Programming Language Design and Implementation",
  journalabr =   "SIGPLAN Not",
  keywords =     "Attribute Grammar Methodology; Computer Hardware
                 Description Languages; Computer Operating
                 Systems--Program Compilers; Computer Programming
                 Languages--Ada; Design; design; languages",
  meetingaddress = "Portland, OR, USA",
  meetingdate =  "Jun 21--23 1989",
  meetingdate2 = "06/21--23/89",
  sponsor =      "ACM, Special Interest Group on Programming Languages,
                 New York; SS NY, USA",
  subject =      "{\bf B.6.3} Hardware, LOGIC DESIGN, Design Aids,
                 Hardware description languages. {\bf D.3.4} Software,
                 PROGRAMMING LANGUAGES, Processors, Compilers. {\bf
                 D.2.10} Software, SOFTWARE ENGINEERING, Design**,
                 Methodologies**.",
}

@Article{Giacalone:1989:FSI,
  author =       "Alessandro Giacalone and Prateek Mishra and Sanjiva
                 Prasad",
  title =        "{FACILE}: {A} Symmetric Integration of Concurrent and
                 Functional Programming",
  journal =      j-INT-J-PARALLEL-PROG,
  volume =       "18",
  number =       "2",
  pages =        "121--160",
  month =        apr,
  year =         "1989",
  CODEN =        "IJPPE5",
  DOI =          "http://www.springerlink.com/openurl.asp?genre=article&id=doi:10.1007/BF01491213",
  ISSN =         "0885-7458 (print), 1573-7640 (electronic)",
  bibdate =      "Wed Jul 6 16:39:43 MDT 2005",
  bibsource =    "http://springerlink.metapress.com/openurl.asp?genre=issue&issn=0885-7458&volume=18&issue=2;
                 Misc/Functional.bib; Parallel/Pfpbib.bib",
  note =         "Also in TAPSOFT '89, ed. J. Diaz and F. Orejas, pp.
                 184-209, Springer-Verlag, Lecture Notes in Computer
                 Science 352 (1989).",
  URL =          "http://www.springerlink.com/openurl.asp?genre=article&issn=0885-7458&volume=18&issue=2&spage=121",
  acknowledgement = ack-nhfb,
  classification = "C4220 (Automata theory); C6110 (Systems analysis and
                 programming); C6140D (High level languages); C7430
                 (Computer engineering)",
  corpsource =   "Department of Comput. Sci., State Univ. of New York,
                 Stony Brook, NY, USA",
  keywords =     "abstract model; automata theory; C-FAM; compilation
                 rules; Concurrent and Functional Abstract Machine;
                 concurrent processes; execution rules; expression
                 evaluation; Facile; functional programming; high level
                 languages; labeled transition system; multi-paradigm
                 languages; operational behavior; operational semantics;
                 parallel programming; structural operational semantics;
                 virtual machines",
  treatment =    "B Bibliography; P Practical",
}

@Article{Perez-Cazares:1989:DAL,
  author =       "J.-R. Perez-Cazares and R. Rannou",
  title =        "Developing an Animated Local Network Simulator",
  journal =      j-CGF,
  volume =       "8",
  number =       "2",
  pages =        "139--142",
  month =        jun,
  year =         "1989",
  CODEN =        "CGFODY",
  ISSN =         "0167-7055 (print), 1467-8659 (electronic)",
  bibdate =      "Mon Apr 14 10:23:20 MDT 1997",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliation =  "Ecole Natl Sup{\'e}rieure des Telecommunications de
                 Bretagne",
  affiliationaddress = "Brest, Fr",
  classification = "718; 723; C5620L (Local area networks); C6110
                 (Systems analysis and programming); C6130B (Graphics
                 techniques); C7430 (Computer engineering); C7810C
                 (Computer-aided instruction)",
  conference =   "7th Annual Eurographic (UK) Conference",
  conflocation = "Manchester, UK; 29--31 March 1989",
  conftitle =    "7th EUROGRAPHICS UK Conference",
  corpsource =   "Lab. Infor. de Brest Ecole Nat. Sup{\'e}rieure des
                 Telecommun. de Bretagne, Brest, France",
  keywords =     "Ada; Ada code; animated; Animated environment;
                 animated local network; Animated local network
                 simulator; Animation; computer aided instruction;
                 computer animation; Computer Graphics; Computer
                 Networks--Local Networks; Computer Programming
                 Languages--Ada; Computer Simulation--Applications;
                 Design methodology; design methodology; design process;
                 Design process; designer; digital; distributed systems
                 research group; Distributed systems research group;
                 environment; graphical; Graphical representation; IEEE
                 animated network simulator; internal behaviour;
                 Internal behaviour; languages, IEEE animated network
                 simulator; local area networks; methods; network;
                 Network designer; Object-Oriented Development, design;
                 parallelism; Parallelism; pictorial; Pictorial methods;
                 representation; simulation; simulator; Software
                 engineering; software engineering; teaching support;
                 Teaching support; teaching support; virtual machines",
  meetingaddress = "Manchester, Engl",
  meetingdate =  "Mar 29--31 1989",
  meetingdate2 = "03/29--31/89",
  subject =      "I.3.5 Computing Methodologies, COMPUTER GRAPHICS,
                 Computational Geometry and Object Modeling, Modeling
                 packages \\ C.2.5 Computer Systems Organization,
                 COMPUTER-COMMUNICATION NETWORKS, Local Networks \\
                 I.3.7 Computing Methodologies, COMPUTER GRAPHICS,
                 Three-Dimensional Graphics and Realism, Animation",
  thesaurus =    "Ada; Computer aided instruction; Computer animation;
                 Digital simulation; Local area networks; Software
                 engineering; Virtual machines",
  treatment =    "P Practical",
}

@TechReport{Scott:1989:EOS,
  author =       "M. L. Scott and T. J. LeBlanc and B. D. Marsh",
  title =        "Evolution of an Operating System for Large-Scale
                 Shared-Memory Multiprocessors",
  type =         "TR",
  number =       "TR309",
  institution =  "University of Rochester, Computer Science Department",
  month =        mar,
  year =         "1989",
  note =         "Thu, 17 Jul 97 09:00:00 GMT",
  URL =          "ftp://ftp.cs.rochester.edu/pub/papers/systems/89.TR309.Psyche_Evolution.ps.Z",
  abstract =     "Scalable shared-memory multiprocessors (those with
                 non-uniform memory access times) are among the most
                 flexible architectures for high-performance parallel
                 computing, admitting efficient implementations of a
                 wide range of process models, communication mechanisms,
                 and granularities of parallelism. Such machines present
                 opportunities for general-purpose parallel computing
                 that cannot be exploited by existing operating systems,
                 because the traditional approach to operating system
                 design presents a virtual machine in which the
                 definition of processes, communication, and grain size
                 are outside the control of the user. Psyche is an
                 operating system designed to enable the most effective
                 use possible of large-scale shared memory
                 multiprocessors. The Psyche project is characterized by
                 (1) a design that permits the implementation of
                 multiple models of parallelism, both within and among
                 applications, (2) the ability to trade protection for
                 performance, with information sharings as the default,
                 rather than the exception, (3) explicit, user-level
                 control of process structure and scheduling, and (4) a
                 kernel implementation that uses shared memory itself,
                 and that provides users with the illusion of uniform
                 memory access times.\par

                 The postscript here was reconstructed from old troff
                 source, and does not match the formatting of the
                 hard-copy TR. In particular, the bibliography has
                 re-built from a newer database, and in several cases
                 cites newer versions of papers -- versions that
                 postdate the TR.",
  annote =       "Scalable shared-memory multiprocessors (those with
                 non-uniform memory access times) are among the most
                 flexible architectures for high-performance parallel
                 computing, admitting efficient implementations of a
                 wide range of process models, communication mechanisms,
                 and granularities of parallelism. Such machines present
                 opportunities for general-purpose parallel computing
                 that cannot be exploited by existing operating systems,
                 because the traditional approach to operating system
                 design presents a virtual machine in which the
                 definition of processes, communication, and grain size
                 are outside the control of the user. Psyche is an
                 operating system designed to enable the most effective
                 use possible of large-scale shared memory
                 multiprocessors. The Psyche project is characterized by
                 (1) a design that permits the implementation of
                 multiple models of parallelism, both within and among
                 applications, (2) the ability to trade protection for
                 performance, with information sharing as the default,
                 rather than the exception, (3) explicit, user-level
                 control of process structure and scheduling, and (4) a
                 kernel implementation that uses shared memory itself,
                 and that provides users with the illusion of uniform
                 memory access times. The postscript here was
                 reconstructed from old troff source, and does not match
                 the formatting of the hard-copy TR. In particular, the
                 bibliography has re-built from a newer database, and in
                 several cases cites newer versions of papers --
                 versions that postdate the TR.
                 89.TR309.Psyche_Evolution.ps.Z",
  keywords =     "psyche tr309",
}

@InProceedings{Signorini:1989:HSM,
  author =       "J. Signorini",
  title =        "How a {SIMD} machine can implement a complex cellular
                 automaton? a case study: {von Neumann}'s 29-state
                 cellular automaton",
  crossref =     "ACM:1989:PSN",
  pages =        "175--186",
  year =         "1989",
  bibdate =      "Wed Apr 15 19:32:44 MDT 1998",
  acknowledgement = ack-nhfb,
  classification = "C4220 (Automata theory); C5220 (Computer
                 architecture); C7430 (Computer engineering)",
  corpsource =   "Department d'Inf., Paris 8 Univ., St. Denis, France",
  keywords =     "14 bit per processing element; 29-state cellular
                 automaton; complex cellular automaton; decoder; finite
                 automata; parallel architectures; periodic pulser; SIMD
                 machine; transition rule; virtual machines",
  sponsororg =   "ACM; IEEE",
  treatment =    "X Experimental",
}

@Article{Tetzlaff:1989:ABS,
  author =       "William H. Tetzlaff and Martin G. Kienzle and Juan A.
                 Garay",
  title =        "Analysis of block-paging strategies",
  journal =      j-IBM-JRD,
  volume =       "33",
  number =       "1",
  pages =        "51--59",
  month =        jan,
  year =         "1989",
  CODEN =        "IBMJAE",
  ISSN =         "0018-8646",
  bibdate =      "Tue Mar 25 14:26:59 MST 1997",
  bibsource =    "Compendex database",
  abstract =     "The performance of interactive paging systems in
                 general and Virtual Machine/System Product (VM/SP)
                 systems with the High Performance Option (HPO) in
                 particular depends upon locality of reference. This
                 storage-management dependency, often considered in the
                 context of individual programs, extends in fact to a
                 significant degree across most virtual-machine
                 transactions. This paper investigates strategies to
                 exploit locality of reference at the system level by
                 analyzing page-reference strings gathered from live
                 systems. Alternative strategies are evaluated using
                 trace-driven simulations.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Res. Div., Thomas J. Watson Res. Center",
  affiliationaddress = "Yorktown Heights, NY, USA",
  classcodes =   "C6120 (File organisation)",
  classification = "721; 722; 723; C6120 (File organisation)",
  corpsource =   "IBM Res. Div., Thomas J. Watson Res. Center, Yorktown
                 Heights, NY, USA",
  journalabr =   "IBM J Res Dev",
  keywords =     "Block-Paging Strategies; Block-paging strategies;
                 block-paging strategies; Computer Programming; Data
                 Processing; Data Storage, Digital; High Performance
                 Option; Interactive Paging; interactive paging systems;
                 Interactive paging systems; Live systems; live systems;
                 Machine/System Product; management dependency; page-;
                 Page-Reference Strings; Page-reference strings;
                 reference strings; storage management; storage-;
                 Storage-Management Dependency; Storage-management
                 dependency; Trace-Driven Simulations; Trace-driven
                 simulations; trace-driven simulations; Virtual; Virtual
                 Machine/System Product; virtual storage;
                 Virtual-machine transactions; virtual-machine
                 transactions; Virtual-Machine Transactions",
  thesaurus =    "Storage management; Virtual storage",
  treatment =    "P Practical",
}

@Article{Thomas:1989:AMM,
  author =       "David A. Thomas and Wilf R. LaLonde and John Duimovich
                 and Michael Wilson and Jeff McAffer and Brian Barry",
  title =        "{Actra} --- a multitasking\slash multiprocessing
                 {Smalltalk}",
  journal =      j-SIGPLAN,
  volume =       "24",
  number =       "4",
  pages =        "87--90",
  month =        apr,
  year =         "1989",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:15:37 MST 2003",
  bibsource =    "Compendex database; http://www.acm.org/pubs/toc/;
                 Compendex database; http://portal.acm.org/;
                 http://www.acm.org/pubs/toc/",
  URL =          "http://www.acm.org:80/pubs/citations/proceedings/plan/67386/p87-thomas/",
  abstract =     "The Actra project is investigating future generation
                 industrial computer systems based on the actor or
                 object-oriented metaphor. It is designed to provide an
                 integrated, multi-user, multi-processor object-oriented
                 program development environment for use in medium and
                 high performance industrial applications dealing with
                 complex man-machine systems. Typical areas include
                 command and control systems, manufacturing systems,
                 simulation and intelligent assistants. In this paper we
                 have presented concurrent programming features of Actra
                 a multiprocessor Smalltalk. The design builds on
                 existing message passing primitives and requires
                 minimal changes to the Smalltalk virtual machine and
                 applications programs. We have introduced operations
                 for creating and communicating between active
                 objects(actors) which are consistent with the
                 object-oriented viewpoint. The resulting system
                 provides a powerful facility for performing
                 anthropomorphic programming in a multitasking\slash
                 multiprocessor environment.",
  acknowledgement = ack-nhfb,
  affiliation =  "Carleton Univ",
  affiliationaddress = "Ottawa, Ont, Can",
  classification = "723",
  conference =   "Proceedings of the ACM SIGPLAN Workshop on
                 Object-Based Concurrent Programming",
  confname =     "Proceedings of the ACM SIGPLAN workshop on
                 Object-based concurrent programming, September 26--27
                 1988, San Diego, CA",
  journalabr =   "SIGPLAN Not",
  keywords =     "Actor Based Systems; Computer Programming Languages;
                 Computer Systems Programming--Multiprocessing Programs;
                 Concurrent Programming; design; languages; Object-Based
                 Programming; Programming Language Actra",
  meetingaddress = "San Diego, CA, USA",
  meetingdate =  "Sep 26--27 1988",
  meetingdate2 = "09/26--27/88",
  subject =      "{\bf D.3.2} Software, PROGRAMMING LANGUAGES, Language
                 Classifications, Smalltalk-80.",
}

@InProceedings{Wang:1989:NNS,
  author =       "C.-J. Wang and C.-H. Wu and S. Sivasundaram",
  title =        "Neural network simulation on shared-memory vector
                 multiprocessors",
  crossref =     "ACM:1989:PSN",
  pages =        "197--204",
  year =         "1989",
  bibdate =      "Wed Apr 15 19:32:44 MDT 1998",
  acknowledgement = ack-nhfb,
  classification = "C1230 (Artificial intelligence)C4240 (Programming
                 and algorithm theory); C7430 (Computer engineering)",
  corpsource =   "Department of Electr. and Comput. Eng., Colorado
                 Univ., Colorado Springs, CO, USA",
  keywords =     "Alliant FX/80; concurrent operations; delay
                 differential equation; feedforward network; Fourier
                 transform; Hopfield network; learning systems; neural
                 computing; neural nets; neural network simulation;
                 parallel algorithms; parallel architectures; parallel
                 machine; parallel machines; parallel training
                 algorithm; recurrent network; shared-memory vector
                 multiprocessors; training algorithms; training data
                 size; training time; travelling salesman problem;
                 vector multiprocessor; virtual machines",
  sponsororg =   "ACM; IEEE",
  treatment =    "P Practical; X Experimental",
}

@InProceedings{Wendorf:1989:SOS,
  author =       "J. W. Wendorf and R. G. Wendorf and H. Tokuda",
  title =        "Scheduling operating system processing on small-scale
                 multiprocessors",
  crossref =     "Shriver:1989:PTA",
  pages =        "904--913 (vol. 2)",
  year =         "1989",
  bibdate =      "Sun Sep 29 06:28:50 MDT 1996",
  acknowledgement = ack-nhfb,
  affiliation =  "North American Philips Corp., Briarcliff Manor, NY,
                 USA",
  classification = "C6150J (Operating systems); C7430 (Computer
                 engineering)",
  keywords =     "Assignment policies; Asymmetric handling; Discrete
                 event simulator; Load conditions; Mach; Operating
                 system processing; Performance; Preemptive priority;
                 Scheduling policies; Small-scale multiprocessors;
                 Symmetric scheduling; System configurations;
                 VAX-11/784",
  thesaurus =    "DEC computers; Multiprocessing programs; Operating
                 systems [computers]; Performance evaluation;
                 Scheduling; Virtual machines",
}

@InProceedings{Bessiere:1990:VMM,
  author =       "P. Bessiere and A. Chams and T. Muntean",
  booktitle =    "Proceedings of the International Neural Network
                 Conference Paris",
  title =        "A virtual machine model for artificial neural network
                 programming",
  publisher =    pub-KLUWER,
  address =      pub-KLUWER:adr,
  pages =        "689--692",
  year =         "1990",
  ref =          "INNC",
}

@Article{Blelloch:1990:CCO,
  author =       "G. E. Blelloch and G. W. Sabot",
  title =        "Compiling Collection-Oriented Languages onto Massively
                 Parallel Computers",
  journal =      j-J-PAR-DIST-COMP,
  volume =       "8",
  number =       "2",
  pages =        "119--134",
  month =        feb,
  year =         "1990",
  CODEN =        "JPDCER",
  ISSN =         "0743-7315",
  bibdate =      "Sat Apr 12 17:13:17 MDT 1997",
  acknowledgement = ack-nhfb,
  classification = "C5440 (Multiprocessor systems and techniques); C6110
                 (Systems analysis and programming); C6150C (Compilers,
                 interpreters and other processors)",
  corpsource =   "Carnegie Mellon Univ., Sch. of Comput. Sci.,
                 Pittsburgh, PA, USA",
  keywords =     "collection oriented languages compilation; compiler;
                 descriptions; flat virtual machine; high-level;
                 massively; nested collections; nested parallelism;
                 PARALATION LISP; parallel computers; parallel
                 processing; parallel programming; program compilers",
  treatment =    "P Practical",
}

@InProceedings{Board:1990:PPN,
  author =       "J. A. {Board, Jr.} and J. Shue-Jen Lu",
  title =        "Performance of parallel neural network simulations",
  crossref =     "Board:1990:TRA",
  pages =        "185--200",
  year =         "1990",
  bibdate =      "Sat Sep 28 20:21:01 MDT 1996",
  acknowledgement = ack-nhfb,
  affiliation =  "Department of Electr. Eng., Duke Univ., Durham, NC,
                 USA",
  classification = "C1230 (Artificial intelligence); C5440
                 (Multiprocessor systems and techniques); C5470
                 (Performance evaluation and testing); C7430 (Computer
                 engineering)",
  keywords =     "BBN Butterfly; C language; Communication overhead;
                 Constraint satisfaction; INMOS Transputer; MACH
                 operating system; Network size; Occam 2; Parallel
                 neural network simulations; Partitioned algorithm;
                 Performance evaluation; Speedup limit; T800 Transputer;
                 Transputer Development System programming environment;
                 Uniform System programming environment",
  thesaurus =    "Neural nets; Parallel algorithms; Performance
                 evaluation; Programming environments; Transputers;
                 Virtual machines",
}

@InProceedings{Feeley:1990:PVM,
  author =       "Marc Feeley and James S. Miller",
  booktitle =    "Proceedings of the 1990 ACM Conference on LISP and
                 Functional Programming, Nice",
  title =        "A parallel virtual machine for efficient {Scheme}
                 compilation",
  crossref =     "ACM:1990:PAC",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "119--130",
  month =        jun,
  year =         "1990",
  bibdate =      "Wed Jan 24 04:51:56 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/lfp/lfp1990.html#FeeleyM90",
  URL =          "http://www.acm.org/pubs/citations/proceedings/lfp/91556/p119-feeley/",
  abstract =     "Programs compiled by Gambit, our Scheme compiler,
                 achieve performance as much as twice that of the
                 fastest available Scheme compilers. Gambit is easily
                 ported, while retaining its high performance, through
                 the use of a simple virtual machine (PVM). PVM allows a
                 wide variety of machine-independent optimizations and
                 it supports parallel computation based on the future
                 construct. PVM conveys high-level information
                 bidirectionally between the machine-independent front
                 end of the compiler and the machine-dependent back end,
                 making it easy to implement a number of common back end
                 optimizations that are difficult to achieve for other
                 virtual machines. PVM is similar to many real computer
                 architectures and has an option to efficiently gather
                 dynamic measurements of virtual machine usage. These
                 measurements can be used in performance prediction for
                 ports to other architectures as well as design
                 decisions related to proposed optimizations and object
                 representations.",
  acknowledgement = ack-nhfb,
  affiliation =  "Brandeis Univ., Waltham, MA, USA",
  bookpages =    "????",
  classification = "C6150C (Compilers, interpreters and other
                 processors)",
  conflocation = "Nice, France; 27--29 June 1990",
  corpsource =   "Brandeis Univ., Waltham, MA, USA",
  keywords =     "Gambit; machine-independent; machine-independent front
                 end; Machine-independent front end; Machine-independent
                 optimizations; object; Object representations;
                 optimizations; parallel processing; parallel virtual
                 machine; Parallel virtual machine; portability; program
                 compilers; representations; Scheme compiler; simple
                 virtual machine; Simple virtual machine; software;
                 virtual machines; Lisp; PVM portability",
  oldlabel =     "FeeleyM90",
  sponsororg =   "ACM",
  thesaurus =    "Parallel processing; Program compilers; Software
                 portability; Virtual machines",
  treatment =    "P Practical",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/lfp/FeeleyM90",
}

@InProceedings{Hu:1990:RTC,
  author =       "W. Hu",
  title =        "Reducing Timing Channels with Fuzzy Time",
  crossref =     "IEEE:1990:PIC",
  pages =        "8--20",
  year =         "1990",
  annote =       "This paper describes fuzzy time. This is a collection
                 of techniques that reduces the bandwidths of covert
                 timing channels by making all clocks available to a
                 process noisy. Developed in response to the problems
                 posed by high-speed hardware timing channels, fuzzy
                 time has been implemented in the VAX security kernel.
                 The VAX security kernel is a virtual-machine monitor
                 security kernel for the VAX architecture designed to
                 meet the requirements of the A1 rating from the
                 National Computer Security Center.",
}

@InProceedings{Karger:1990:VSK,
  author =       "P. A. Karger and M. E. Zurko and D. W. Bonin and A. H.
                 Mason and C. E. Kahn",
  title =        "A {VMM} Security Kernel for the {VAX} Architecture",
  crossref =     "IEEE:1990:PIC",
  pages =        "2--19",
  year =         "1990",
  annote =       "This paper describes the development of a
                 virtual-machine monitor (VMM) security kernel for the
                 VAX architecture. The paper particularly focuses on how
                 the systems hardware, microcode, and software are aimed
                 at meeting A1-level security requirements while
                 maintaining the standard interfaces and applications of
                 the VMS and ULTRIX-32 operating systems. The VAX
                 security kernel supports multiple concurrent virtual
                 machines on a single VAX system, providing isolation
                 and controlled sharing of sensitive data. Rigorous
                 engineering standards were applied during development
                 to comply with the assurance requirements for
                 verification and configuration management. The VAX
                 security kernel has been developed with a heavy
                 emphasis on performance and on system management tools.
                 The kernel performs sufficiently well that all of its
                 development is now carried out in virtual machines
                 running on the kernel itself, rather than in a
                 conventional time-sharing system.",
}

@TechReport{Kratzer:1990:MPS,
  author =       "Steven G. Kratzer",
  title =        "Massively parallel sparse-matrix computations",
  type =         "Technical report",
  number =       "SRC-TR-90-008",
  institution =  inst-SRC-IDA,
  address =      inst-SRC-IDA:adr,
  pages =        "14",
  day =          "1",
  month =        feb,
  year =         "1990",
  bibdate =      "Fri Aug 30 08:01:51 MDT 1996",
  abstract =     "This paper shows that QR factorization of large,
                 sparse matrices can be performed efficiently on
                 massively-parallel SIMD (Single Instruction stream,
                 Multiple Data stream) computers such as the Connection
                 Machine CM-2. The problem is cast as a dataflow graph,
                 using existing techniques for symbolic manipulation of
                 the structure of the matrix. Then the nodes in the
                 graph, which represent units of computational work, are
                 mapped to a `virtual dataflow machine' in such a way
                 that only nearest-neighbor communication is required.
                 This virtual machine is implemented by programming the
                 CM-2 processors to support the static dataflow
                 protocol. Execution results for standard test matrices
                 show that good performance is obtained even for
                 `unstructured' sparsity patterns that are not amenable
                 to nested dissection techniques.",
  acknowledgement = ack-nhfb,
  keywords =     "Connection machines; Matrices; Parallel processing
                 (Electronic computers)",
}

@InProceedings{Ozgur:1990:SON,
  author =       "A. Ozgur and O. Kaynak",
  booktitle =    "INNC 90 Paris. International Neural Network
                 Conference",
  title =        "A self organizing neural network for pattern
                 recognition",
  volume =       "1",
  institution =  "Atakoy 5 Kisim B-1/17, Istanbul, Turkey",
  publisher =    pub-KLUWER,
  address =      pub-KLUWER:adr,
  pages =        "107",
  year =         "1990",
  ISBN =         "0-7923-0831-X",
  ISBN-13 =      "978-0-7923-0831-7",
  abstract =     "Summary form only given, as follows. The authors
                 simulate and test a neural network which can recognize
                 patterns and which possesses abilities such as
                 selective attention, segmentation, and associative
                 recall. The network consists of several types of
                 neurons of which some can learn and extract features,
                 and others generate gain or threshold control signals.
                 The backward propagation channels are responsible for
                 selective attention and associative recall. The neural
                 cells in the simulated network are organized in three
                 layers and they total 16630 in number. The simulation
                 program is written in C-language and run on an Apple
                 Macintosh computer. This self-organizing network is
                 able to repair a deformed pattern in a deformed manner,
                 even if, during the training period, only undeformed
                 and noise free patterns are presented to it.",
  city =         "Paris, France",
  classification = "C1250 (Pattern recognition), C5260B (Computer vision
                 and picture processing), C5320 (Digital storage), C1240
                 (Adaptive system theory), C1230 (Artificial
                 intelligence), C7430 (Computer engineering)",
  days =         "9-13 July 1990",
  file =         "nn/attention/selective",
  index =        "Layered",
  indexnumber =  "3800010 C91007802",
  keywords =     "Feature learning, Feature extraction, Deformed pattern
                 repair, Self organizing neural network, Pattern
                 recognition, Selective attention, Segmentation,
                 Associative recall, Threshold control signals, Backward
                 propagation channels, C-language, Apple Macintosh
                 computer",
  language =     "English",
  refs =         "0",
  sponsor =      "Thomson",
  thesaurus =    "Apple computers, Content-addressable storage, Neural
                 nets, Pattern recognition, Picture processing,
                 Self-organising storage, Virtual machines",
  treatment =    "Theoretical/Mathematical",
}

@Article{Plata:1990:ASP,
  author =       "O. G. Plata and J. D. Bruguera and F. F. Rivera and R.
                 Doallo and E. L. Zapata",
  title =        "{ACLE}: a Software Package for {SIMD} Computer
                 Simulation",
  journal =      j-COMP-J,
  volume =       "33",
  number =       "3",
  pages =        "194--203",
  month =        jun,
  year =         "1990",
  CODEN =        "CMPJA6",
  ISSN =         "0010-4620",
  bibdate =      "Tue Mar 25 13:51:56 MST 1997",
  bibsource =    "http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/",
  URL =          "http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/tiff/194.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/tiff/195.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/tiff/196.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/tiff/197.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/tiff/198.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/tiff/199.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/tiff/200.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/tiff/201.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/tiff/202.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_33/Issue_03/tiff/203.tif",
  acknowledgement = ack-nhfb,
  affiliation =  "Department of Electron., Univ. of Santiago de
                 Compostela, Spain",
  classcodes =   "C7430 (Computer engineering); C5440 (Multiprocessor
                 systems and techniques); C6140D (High level languages);
                 C6150C (Compilers, interpreters and other processors)",
  classification = "C5440 (Multiprocessor systems and techniques);
                 C6140D (High level languages); C6150C (Compilers,
                 interpreters and other processors); C7430 (Computer
                 engineering)",
  corpsource =   "Department of Electron., Univ. of Santiago de
                 Compostela, Spain",
  keywords =     "ACLAN-to-C translator; ACLE; algorithm mapping;
                 Algorithm mapping; algorithmic solution; Algorithmic
                 solution; array; Array C Language Emulator; Array
                 processor programming; C language; computer simulation;
                 computers; hypercube; Hypercube computers;
                 machine-independent; Machine-independent programming
                 language; package; parallel algorithms; Parallel
                 algorithms; processor programming; program execution;
                 Program execution; program processors; programming
                 language; SIMD; SIMD computer simulation; simulation
                 routines library; Simulation routines library;
                 software; Software package; software packages;
                 subroutines; virtual machines",
  thesaurus =    "C language; Parallel algorithms; Program processors;
                 Software packages; Subroutines; Virtual machines",
  treatment =    "P Practical",
}

@Article{Pountain:1990:SPP,
  author =       "D. Pountain",
  title =        "Simulating a primitive parallel computer",
  journal =      j-BYTE,
  volume =       "15",
  number =       "13",
  pages =        "72IS/25--26, 28, 30, 32, 34, 36--37",
  month =        dec,
  year =         "1990",
  CODEN =        "BYTEDJ",
  ISSN =         "0360-5280",
  bibdate =      "Thu Sep 12 18:39:30 MDT 1996",
  acknowledgement = ack-nhfb,
  classification = "C7430 (Computer engineering)",
  keywords =     "Computer simulation; Parallel architectures; Parallel
                 computers; Primitive parallel computer; Primitive
                 Parallel Computers; PriPar; Turing machine",
  thesaurus =    "Parallel machines; Virtual machines",
}

@Article{Rounce:1990:AWE,
  author =       "Peter A. Rounce and Jose Delgado",
  title =        "Architectures Within the {Esprit Span Project}",
  journal =      j-IEEE-MICRO,
  volume =       "10",
  number =       "6",
  pages =        "24--27, 88--97",
  month =        dec,
  year =         "1990",
  CODEN =        "IEMIDZ",
  ISSN =         "0272-1732",
  bibdate =      "Thu Dec 14 06:08:58 MST 2000",
  bibsource =    "Science Citation Index database (1980--2000);
                 Compendex database",
  abstract =     "To integrate symbolic and numeric computing on
                 parallel systems, project participants developed a
                 target architecture that resulted in a number of
                 significant advancements in programming languages and
                 architecture.",
  acknowledgement = ack-nhfb,
  affiliation =  "Dept of Comput Sci, Univ Coll, London, UK",
  classcodes =   "C5220 (Computer architecture); C7310 (Mathematics)",
  classification = "722; 723",
  corpsource =   "Department of comput. Sci., Univ. Coll., London, UK",
  keywords =     "Computational Models; Computer Architecture; Computer
                 Programming Languages; Computer Systems,
                 Digital--Parallel Processing; DICE; distributed memory
                 architecture; esprit span Project; ESPRIT SPAN project;
                 Kernel System architectures; parallel architectures;
                 parallel systems; parallel-; Parle high-level
                 procedural language; Research; Sprint processor
                 architecture; symbol manipulation; symbolic and numeric
                 computing; system architectures; Virtual Machine Code",
  treatment =    "P Practical",
}

@TechReport{Schuh:1990:PRI,
  author =       "Daniel T. Schuh and Michael J. Carey and David J.
                 DeWitt",
  title =        "Persistence in {E} Revisited---Implementation
                 Experiences",
  type =         "Technical Report",
  number =       "CS-TR-1990-957",
  institution =  "University of Wisconsin, Madison",
  month =        aug,
  year =         "1990",
  bibdate =      "November 22, 1994",
  abstract =     "This paper discusses the design and implementation of
                 the E Persistent Virtual Machine (EPVM), an interpreter
                 that provides support for persistent data access in the
                 current version of the E programming language. Included
                 are descriptions of both the EPVM interface and the
                 major implementation tactics employed within EPVM. A
                 novel pointer swizzling scheme that has been
                 investigated in the context of E and EPVM is also
                 described. Finally, a performance analysis of the key
                 EPVM primitives is presented.",
}

@InProceedings{Seiden:1990:AFV,
  author =       "K. F. Seiden and J. P. Melanson",
  title =        "The Auditing Facility for a {VMM} Security Kernel",
  crossref =     "IEEE:1990:PIC",
  pages =        "262--277",
  year =         "1990",
  annote =       "The VAX security kernel is a prototype security kernel
                 implemented as a virtual machine monitor (VMM) for the
                 VAX architecture. The VAX security kernel is capable of
                 emulating one or more virtual machines (VMs) on a
                 single physical machine allowing multiple copies of
                 virtual machine operating systems to execute
                 concurrently. The system presently supports both VMS
                 and ULTRIX as virtual machine operating systems A
                 fundamental component of any security kernel is the
                 ability to produce an audit trail of security relevant
                 events. While there are numerous examples of auditing
                 subsystems at the DoD Trusted Computer System
                 Evaluation Criteria (TCSEC) [5] C2 or B1 level, there
                 is much less experience with the requirements at the B2
                 level and above. This paper describes the design and
                 implementation of the VAX security kernel auditing
                 facility, built to satisfy the requirements at the A1
                 level.",
}

@TechReport{Smith:1990:PTL,
  author =       "Robert Smith and Aaron Sloman and John Gibson",
  title =        "{POPLOG}'s Two-level Virtual Machine Support for
                 Interactive Languages",
  type =         "Cognitive Science Research Report",
  number =       "153",
  institution =  "University-of-Sussex",
  address =      "Brighton",
  month =        jan,
  year =         "1990",
  abstract =     "To appear (1991?) in a volume edited by D.Sleeman and
                 N.O.Bernson Price: 1.00 (Actually it appeared as
                 Research Directions in Cognitive Science Volume 5:
                 Artificial Intelligence, eds D. Sleeman and N. Bernsen,
                 Lawrence Earlbaum Associates, 1992)",
  keywords =     "Pop, Pop-11",
}

@Article{Volz:1990:VNU,
  author =       "Richard A. Volz",
  title =        "Virtual Nodes and Units of Distribution for
                 Distributed {Ada}",
  journal =      j-SIGADA-LETTERS,
  volume =       "10",
  number =       "4",
  pages =        "85--96",
  month =        "Spring",
  year =         "1990",
  CODEN =        "AALEE5",
  ISSN =         "0736-721X",
  bibdate =      "Sat Aug 9 09:05:36 MDT 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classcodes =   "C6140D (High level languages); C6110 (Systems analysis
                 and programming); C6150J (Operating systems)",
  conflocation = "Framington, PA, USA; 26--29 June 1989",
  conftitle =    "Third International Workshop on Real-Time Ada Issues",
  corpsource =   "Department of Comput. Sci., Texas A and M Univ.,
                 College Station, TX, USA",
  keywords =     "Ada; Ada program; additional study; architecture
                 characterizations; architecture dependence choice;
                 complex task; dependency; distributed Ada; distributed
                 processing; embedded real-time systems; memory systems;
                 processing elements; programming; real-time systems;
                 shared; system architecture; UoD; virtual machines;
                 virtual node",
  sponsororg =   "Software Eng. Inst.; U.S. Office of Naval Res.; Ada
                 UK; ACM",
  treatment =    "P Practical",
}

@Article{Whang:1990:QOM,
  author =       "Kyu-Young Y. Whang and Ravi Krishnamurthy",
  title =        "Query Optimization in a Memory-Resident Domain
                 Relational Calculus Database System",
  journal =      j-TODS,
  volume =       "15",
  number =       "1",
  pages =        "67--95",
  month =        mar,
  year =         "1990",
  CODEN =        "ATDSD3",
  ISSN =         "0362-5915",
  bibdate =      "Sat Apr 14 10:34:48 MDT 2001",
  bibsource =    "Database/Graefe.bib; Database/Wiederhold.bib;
                 http://www.acm.org/pubs/toc/",
  URL =          "http://www.acm.org/pubs/articles/journals/tods/1990-15-1/p67-whang/p67-whang.pdf;
                 http://www.acm.org/pubs/citations/journals/tods/1990-15-1/p67-whang/;
                 http://www.acm.org/pubs/toc/Abstracts/tods/77646.html",
  abstract =     "We present techniques for optimizing queries in
                 memory-resident database systems. Optimization
                 techniques in memory-resident database systems differ
                 significantly from those in conventional disk-resident
                 database systems. In this paper we address the
                 following aspects of query optimization in such systems
                 and present specific solutions for them: (1) a new
                 approach to developing a CPU-intensive cost model; (2)
                 new optimization strategies for main-memory query
                 processing; (3) new insight into join algorithms and
                 access structures that take advantage of memory
                 residency of data; and (4) the effect of the operating
                 system's scheduling algorithm on the memory-residency
                 assumption. We present an interesting result that a
                 major cost of processing queries in memory-resident
                 database systems is incurred by evaluation of
                 predicates. We discuss optimization techniques using
                 the Office-by-Example (OBE) that has been under
                 development at IBM Research. We also present the
                 results of performance measurements, which prove to be
                 excellent in the current state of the art. Despite
                 recent work on memory-resident database systems, query
                 optimization aspects in these systems have not been
                 well studied. We believe this paper opens the issues of
                 query optimization in memory-resident database systems
                 and presents practical solutions to them.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Thomas J. Watson Res. Center, Yorktown Heights,
                 NY, USA",
  annote =       "Office-by-example extends the concept of
                 query-by-example (QBE); disks are used only for
                 permanent storage of data and backup; The technique is
                 not a heuristic since it employs a systematic search,
                 but uses the branch-and-bound algorithm. Uses the
                 nested-loop join with use of indexes. An index is an
                 array of tuple identifiers. Assess uses binary search.
                 When an index entry is inserted, the upper half of the
                 index is block-copied. In a 3081 processor copying 1 MB
                 of memory takes less than 0.1 second. Queries in OBE
                 are in the canonical form, have no substructures. Pure
                 demand paging is not suitable, the system has a global
                 goal for paging activities. The set of virtual machines
                 on the dispatch list is determined.",
  generalterms = "Algorithms; Experimentation; Languages; Performance",
  keywords =     "experimentation; languages; Large Main Memory TODS,
                 algorithms; performance",
  subject =      "{\bf H.2.4}: Information Systems, DATABASE MANAGEMENT,
                 Systems, Query processing. {\bf H.2.3}: Information
                 Systems, DATABASE MANAGEMENT, Languages, Query
                 languages. {\bf H.2.2}: Information Systems, DATABASE
                 MANAGEMENT, Physical Design, Access methods.",
}

@InProceedings{Xu:1990:HMD,
  author =       "J. Xu and K. Hwang",
  title =        "Heuristic methods for dynamic load balancing in a
                 message-passing supercomputer",
  crossref =     "IEEE:1990:PSN",
  pages =        "888--897",
  year =         "1990",
  bibdate =      "Wed Apr 15 18:34:48 MDT 1998",
  acknowledgement = ack-nhfb,
  classification = "C5440 (Multiprocessor systems and techniques);
                 C6150J (Operating systems)",
  corpsource =   "IBM Corp., San Jose, CA, USA",
  keywords =     "distributed control; distributed load balancers;
                 distributed processing; dynamic load balancing; iPSC/2
                 hypercube; load imbalances; message passing
                 multicomputer; message-passing supercomputer; migration
                 overheads; parallel event drives simulator; parallel
                 processing; parallel simulator; performance evaluation;
                 process migration; PSIM; resource allocation;
                 scheduling; system utilizations; threshold update;
                 variable threshold; virtual machines",
  sponsororg =   "IEEE; ACM; Lawrence Livermore Nat. Lab.; Los Alamos
                 Nat. Lab.; NASA Ames Res. Center; Nat. Center Atmos.
                 Res.; NSF; SIAM; Supercomput. Res. Center",
  treatment =    "P Practical; X Experimental",
}

@Article{Aharon:1991:VIR,
  author =       "A. Aharon and A. Bar-David and B. Dorfman and E.
                 Gofman and M. Leibowitz and V. Schwartzburd",
  title =        "Verification of the {IBM RISC System\slash 6000} by a
                 dynamic biased pseudo-random test program generator",
  journal =      j-IBM-SYS-J,
  volume =       "30",
  number =       "4",
  pages =        "527--538",
  year =         "1991",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Tue Mar 19 17:38:46 1996",
  abstract =     "Verification of a computer that implements a new
                 architecture is especially difficult since no approved
                 functional test cases are available. The logic design
                 of the IBM RISC system/6000 was verified mainly by a
                 specially developed random test program generator
                 (RTPG), which was used from the early stages of the
                 design until its successful completion. APL was chosen
                 for the RISC System/6000 RTPG implementation after
                 considering the suitability of this programming
                 language for modeling computer architectures, the very
                 tight schedule, and the highly changeable environment
                 in which RTPG would operate.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Israel Sci. and Technol. Ltd., Haifa, Israel",
  classification = "C6150G (Diagnostic, testing, debugging and
                 evaluating systems); C4240 (Programming and algorithm
                 theory); C5470 (Performance evaluation and testing);
                 C7430 (Computer engineering); C6140D (High level
                 languages)",
  keywords =     "Computer architectures; Functional test cases; IBM
                 RISC system/6000; Logic design; Programming language;
                 Pseudo-random test program generator; RTPG
                 implementation; Specially developed random test program
                 generator; Tight schedule",
  language =     "English",
  pubcountry =   "USA",
  thesaurus =    "APL; IBM computers; Performance evaluation; Program
                 verification; Virtual machines",
}

@Article{Alfonseca:1991:AAA,
  author =       "M. Alfonseca",
  title =        "Advanced applications of {APL}: logic programming,
                 neural networks, and hypertext",
  journal =      j-IBM-SYS-J,
  volume =       "30",
  number =       "4",
  pages =        "543--553",
  year =         "1991",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Tue Mar 19 17:38:46 1996",
  abstract =     "A review is given of the work of the author on the
                 application of the APL and APL2 programming languages
                 to logic programming, emulation of neural networks, and
                 the programming of hypertext applications.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Software Technol. Lab., Madrid, Spain",
  classification = "C6140D (High level languages); C6110L (Logic
                 programming); C5290 (Neural computing techniques);
                 C6160Z (Other DBMS); C7430 (Computer engineering);
                 C6170 (Expert systems)",
  keywords =     "APL2 programming languages; Hypertext applications;
                 Logic programming; Neural networks",
  language =     "English",
  pubcountry =   "USA",
  thesaurus =    "APL; Hypermedia; Logic programming; Neural nets;
                 Virtual machines",
}

@InProceedings{Aral:1991:PCS,
  author =       "Ziya Aral and Ilya Gertner and Alan Langerman and Dave
                 Mitchell",
  title =        "Process Control Structures for Multiprocessor",
  crossref =     "Milutinovic:1991:PTA",
  volume =       "1",
  pages =        "49--58",
  year =         "1991",
  abstract =     "Describes a new approach to implementing and using a
                 'process' abstraction in multiprocessors. A new
                 paradigm is described for virtual machines which are
                 built out of finer granularity units called Resource
                 Control Blocks (RCB). A collection of RCBs define a
                 virtual machine. Each RCB is independently sharable. A
                 user has the freedom to define a set of virtual
                 machines each spanning a different collection of
                 resources. Although the new paradigm offers additional
                 flexibility, it carries no additional overhead when
                 compared to previous implementations. Backwards
                 compatible processes are scheduled and created with the
                 same efficiency. New processes that carry less weight
                 are created much more efficiently. A production system
                 has been implemented and measured on Multimax, a
                 shared-memory multiprocessor.",
}

@Article{Balter:1991:AIG,
  author =       "R. Balter and J. Bernadat and D. Decouchant and A.
                 Duda and A. Freyssinet and S. Krakowiak and M.
                 Meysembourg and P. Le Dot and H. Nguyen Van and E.
                 Paire and M. Riveill and C. Roison and X. Rousset de
                 Pina and R. Scioville and G. Vand{\^o}me",
  title =        "Architecture and Implementation of Guide, an
                 Object-Oriented Distributed System",
  journal =      j-COMP-SYS,
  volume =       "4",
  number =       "1",
  pages =        "31--67",
  month =        "Winter",
  year =         "1991",
  CODEN =        "CMSYE2",
  ISSN =         "0895-6340",
  bibdate =      "Fri Sep 13 08:51:08 MDT 1996",
  acknowledgement = ack-nhfb,
  classification = "C6150J (Operating systems); C6110 (Systems analysis
                 and programming)",
  keywords =     "Dynamic links; Job sharing; Persistent objects
                 storage; Synchronized transactions; Guide;
                 Object-oriented distributed operating system; Grenoble
                 Universities integrated distributed environment; Object
                 model; Language; Type; Class; Single inheritance;
                 Execution units; Multi-threaded virtual machines;
                 Nodes; Distributed object memory; Synchronized objects;
                 Execution structures; UNIX",
  thesaurus =    "Distributed processing; Object-oriented programming;
                 Operating systems [computers]",
}

@InProceedings{Balzer:1991:PVM,
  author =       "Robert Balzer",
  title =        "Process Virtual Machine",
  crossref =     "Thomas:1993:PIS",
  pages =        "37--40",
  year =         "1991",
}

@Article{Bennett:1991:SMC,
  author =       "R. B. Bennett and W. J. Bitner and M. A. Musa and M.
                 K. Ainsworth",
  title =        "Systems management for {Coordinated Resource
                 Recovery}",
  journal =      j-IBM-SYS-J,
  volume =       "30",
  number =       "1",
  pages =        "90--106",
  year =         "1991",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Tue Mar 19 17:38:46 1996",
  abstract =     "Coordinated Resource Recovery is a Virtual
                 Machine/Enterprise Systems Architecture (VM/ESA)
                 function for providing consistency of changes to
                 multiple resources in environments that include
                 distributed applications. It provides a uniform
                 solution for applications to the problem of resource
                 consistency. Systems management of Coordinated Resource
                 Recovery in VM/ESA (CRR) is the set of system services
                 and interfaces that support both automatic and manual
                 procedures for managing CRR installation, performance,
                 and recovery, as well as resource manager and
                 application participation. Much of systems management
                 is focused on application recovery from occasional
                 failures of the procedures for coordinating consistent
                 resource changes. The paper describes several key
                 aspects of CRR systems management, including the CRR
                 recovery log, facilities for minimizing manual
                 intervention when failures occur, performance
                 considerations, and application participation in
                 recovery.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Data Syst. Div., Endicott, NY, USA",
  classification = "C6150J (Operating systems)",
  keywords =     "Application recovery; Coordinated Resource Recovery;
                 CRR recovery log; CRR systems management; Interfaces;
                 Multiple resources; Resource consistency; System
                 services; Virtual Machine/Enterprise Systems
                 Architecture; VM/ESA",
  language =     "English",
  pubcountry =   "USA",
  thesaurus =    "IBM computers; Operating systems [computers]; Virtual
                 machines",
}

@Article{Christodoulakis:1991:OOA,
  author =       "Stavros Christodoulakis and Natassa Ailamaki and
                 Manolis Fragonikolakis and Yorgos Kapetanakis and
                 Leonidas Koveos",
  title =        "An Object Oriented Architecture For Multimedia
                 Information Systems",
  journal =      "Data Engineering",
  volume =       "14",
  number =       "3",
  pages =        "4--15",
  month =        sep,
  year =         "1991",
  bibdate =      "Wed Dec 11 11:19:22 1991",
  abstract =     "we present aspects of the design and implementation of
                 a Multimedia Object Server. We first present the design
                 and implementation of the Object Virtual Machine (OVM),
                 a multimedia object manager. OVM considers environments
                 with large main memories that can comtain a large
                 number of objects. However, multimedia objects ahvae to
                 reside in secondary and tertiary storage due to their
                 size. Multimedia objects are treated as first class
                 objects, and methods and acces structures for them are
                 supported by the system. The secondary storage
                 information is modeled in three layers: logical files,
                 physical files and devices; thus allowing flexibility,
                 clustering and parallelism in the multimedia database
                 design. Next, we describe experimental and analytical
                 performance studies for a server environment for
                 multimedia data. We outline results on optimal data
                 placement on optical disks, buffering for
                 delay-sensitive multimedia data environments and
                 scheduling aspects in a server based on secondary and
                 tertiary optical storage(jukeboxes).",
  owner =        "suchen",
}

@Article{Daszczuk:1991:SSD,
  author =       "W. B. Daszczuk",
  title =        "A Structured Semantic Design of Distributed Operating
                 Systems",
  journal =      j-COMP-J,
  volume =       "34",
  number =       "6",
  pages =        "482--492",
  month =        dec,
  year =         "1991",
  CODEN =        "CMPJA6",
  ISSN =         "0010-4620",
  bibdate =      "Tue Mar 25 13:51:56 MST 1997",
  bibsource =    "http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/",
  URL =          "http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/482.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/483.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/484.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/485.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/486.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/487.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/488.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/489.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/490.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/491.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_06/tiff/492.tif",
  acknowledgement = ack-nhfb,
  affiliation =  "Inst. of Comput. Sci., Warsaw Univ. of Technol.,
                 Poland",
  classcodes =   "C6150N (Distributed systems); C6150J (Operating
                 systems)",
  classification = "C6150J (Operating systems); C6150N (Distributed
                 systems)",
  corpsource =   "Inst. of Comput. Sci., Warsaw Univ. of Technol.,
                 Poland",
  keywords =     "distributed; Distributed hardware environment;
                 Distributed operating systems; hardware environment;
                 multi-microprocessor systems; Multi-microprocessor
                 systems; network operating systems; operating systems;
                 structured semantic design; Structured semantic design;
                 UNIX-like systems; virtual machines; Virtual machines",
  thesaurus =    "Network operating systems; Virtual machines",
  treatment =    "P Practical",
}

@InProceedings{Fertig:1991:FVM,
  author =       "Scott Fertig and David Gelernter",
  title =        "{FGP}: {A} Virtual Machine for Acquiring Knowledge
                 from Cases",
  crossref =     "Mylopoulos:1991:IPT",
  pages =        "796--802",
  year =         "1991",
  bibdate =      "Wed Jan 24 02:56:32 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/ijcai/ijcai91.html#FertigG91",
  oldlabel =     "FertigG91",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/ijcai/FertigG91",
}

@Article{Fischofer:1991:VSS,
  author =       "W. T. Fischofer",
  title =        "{VM\slash ESA}: {A} single system for centralized and
                 distributed computing",
  journal =      j-IBM-SYS-J,
  volume =       "30",
  number =       "1",
  pages =        "4--13",
  year =         "1991",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Tue Mar 19 17:38:46 1996",
  abstract =     "The rapid evolution of distributed and personal
                 systems in recent years has not diminished the
                 importance of centralized computing. Today, systems at
                 all levels need to operate in networked configurations
                 to allow users and applications to access and
                 manipulate data from anywhere with full integrity and
                 optimal performance. Virtual Machine/Enterprise Systems
                 Architecture (VM/ESA) satisfies this requirement as a
                 single VM product that has been designed for both
                 centralized and distributed computing. The author
                 describes how VM/ESA builds on IBM's reputation for
                 virtual machine performance, function, and flexibility
                 to form an ideal solution base for the 1990s.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Endicott Programming Lab., NY, USA",
  classification = "C6150J (Operating systems)",
  keywords =     "Centralized computing; Distributed computing; IBM;
                 Networked configurations; Virtual machine performance;
                 Virtual Machine/Enterprise Systems Architecture;
                 VM/ESA",
  language =     "English",
  pubcountry =   "USA",
  thesaurus =    "IBM computers; Network operating systems; Virtual
                 machines",
}

@Article{Fujimoto:1991:VTM,
  author =       "Richard M. Fujimoto",
  title =        "The {Virtual Time Machine}",
  journal =      j-COMP-ARCH-NEWS,
  volume =       "19",
  number =       "1",
  pages =        "35--44",
  month =        mar,
  year =         "1991",
  CODEN =        "CANED2",
  ISSN =         "0163-5964",
  bibdate =      "Fri May 12 09:40:33 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Article{Gdaniec:1991:VDS,
  author =       "J. M. Gdaniec and J. P. Hennessy",
  title =        "{VM} data spaces and {ESA\slash XC} facilities",
  journal =      j-IBM-SYS-J,
  volume =       "30",
  number =       "1",
  pages =        "14--33",
  year =         "1991",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Sun Sep 15 05:47:47 MDT 1996",
  abstract =     "Release 1.1 of the Virtual Machine/Enterprise Systems
                 Architecture (VM/ESA) operating system introduces a new
                 function called VM Data Spaces, provided through a new
                 virtual-machine architecture called Enterprise Systems
                 Architecture/Extended Configuration (ESA/XC). ESA/XC is
                 the strategic VM/ESA virtual-machine environment for
                 Conversational Monitor System (CMS) users and services
                 virtual machines requiring large amounts of storage or
                 advanced data-sharing capabilities. ESA/XC includes all
                 of the facilities of System/370 Extended Architecture
                 (370-XA) that are used by CMS or server programs and is
                 therefore upward compatible for CMS or server programs
                 currently running in 370-XA virtual machines. As an
                 introduction to the VM Data Spaces function, the paper
                 describes the ESA/XC virtual-machine architecture and
                 presents an overview of the VM/ESA services provided in
                 support of the ESA/XC architecture.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Data Syst. Div., Endicott, NY, USA",
  classification = "C6150J (Operating systems)",
  keywords =     "Conversational Monitor System; Enterprise Systems
                 Architecture/Extended Configuration; ESA/XC; Operating
                 system; System/370 Extended Architecture; Virtual
                 Machine/Enterprise Systems Architecture;
                 Virtual-machine architecture; Virtual-machine
                 environment; VM data spaces; VM/ESA",
  language =     "English",
  pubcountry =   "USA",
  thesaurus =    "IBM computers; Operating systems [computers]; Virtual
                 machines",
}

@TechReport{Greenfield:1991:PIT,
  author =       "P. G. Greenfield and R. J. Hendley",
  title =        "A proposed Intelligent Tutoring System Framework
                 Incorporating Persistent Logic Programming",
  number =       "CSR-91-1",
  institution =  "University of Birmingham, School of Computer Science",
  month =        feb,
  year =         "1991",
  abstract =     "This paper proposes a virtual machine architectural
                 approach to the construction of a generic Intelligent
                 System (ITS) in which the components of the system are
                 organised as a community of co-operating processes each
                 of which has a substantial portion that can be
                 specified in a declarative manner using Horn clause
                 Logic.",
}

@Article{Jolitz:1991:PUS,
  author =       "William Frederick Jolitz and Lynne Greer Jolitz",
  title =        "Porting {UNIX} to the 386: {A} Stripped-Down Kernel",
  journal =      j-DDJ,
  volume =       "16",
  number =       "7",
  pages =        "32, 34--36, 38, 40, 84--88, 88, 90",
  month =        jul,
  year =         "1991",
  CODEN =        "DDJOEB",
  ISSN =         "1044-789X",
  bibdate =      "Tue Sep 10 09:11:02 MDT 1996",
  bibsource =    "http://www.ddj.com/index/author/index.htm, UnCover
                 database",
  abstract =     "386BSD's basic kernel incorporates a unique
                 ``recursive'' paging feature that leverages resources
                 and reduces complexity.",
  acknowledgement = ack-nhfb,
  classification = "C6150J (Operating systems); C6150E (General utility
                 programs); C7430 (Computer engineering)",
  keywords =     "386BSD; Bootstrap procedure; Initialization;
                 Machine-dependent portions; Machine-independent
                 portions; Operating system porting; Recursive paging;
                 Stripped-down kernel; UNIX kernel; Virtual machine",
  thesaurus =    "Assembly language listings; C listings; Computer
                 bootstrapping; Microprocessor chips; Software
                 portability; Unix; Utility programs; Virtual machines",
}

@InProceedings{Kelem:1991:SMV,
  author =       "N. L. Kelem and R. J. Feiertag",
  title =        "A Separation Model for Virtual Machine Monitors",
  crossref =     "IEEE:1991:PIC",
  pages =        "78--87 (or 78--86??)",
  year =         "1991",
  bibdate =      "Tue Jan 23 16:47:31 MST 2001",
  bibsource =    "http://dblp.uni-trier.de/db/conf/sp/sp1991.html#KelemF91",
  annote =       "This paper presents a security policy for separation
                 Virtual Machine Monitors (SVMMs) and interprets
                 Rushby's Separation Model [RUSH81] for SVMMs. Applying
                 the technique of [RUSH81] yields a practical method for
                 demonstrating that an implementation of an SVMM adheres
                 to the abstract Isolation Axiom of the Separation
                 Model, thus providing relatively strong assurance for a
                 low level of effort. First we describe the relevant
                 characteristics of SVMMs, and note the applicable
                 formal modeling requirements. Next we present a summary
                 of the SVMM Separation Model, a modification of the
                 original model presented in [RUSH81]. The Separation
                 Model technique permits a proof of separability among
                 the operating systems under control of the kernel of an
                 SVMM. We supply an interpretation of the elements of
                 the Separation Model using concepts from SVMMs.
                 Finally, we relate this work to similar Applications of
                 the Separation Model.",
  oldlabel =     "KelemF91",
  XMLdata =      "ftp://ftp.informatik.uni-trier.de/pub/users/Ley/bib/records.tar.gz#conf/sp/KelemF91",
}

@MastersThesis{Lott:1991:DVM,
  author =       "Christopher M. Lott",
  title =        "Defining a virtual machine for executing {MVP--L}
                 project plans",
  school =       "Department of Computer Science, The University of
                 Maryland",
  address =      "College Park, MD 20742",
  month =        aug,
  year =         "1991",
}

@InProceedings{Malan:1991:MA,
  author =       "G. Malan and R. Rashid and D. Golub and R. Baron",
  title =        "{DOS} as a {Mach 3.0} application",
  crossref =     "USENIX:1991:PUM",
  pages =        "27--40",
  year =         "1991",
  bibdate =      "Sat Sep 28 19:47:51 MDT 1996",
  acknowledgement = ack-nhfb,
  affiliation =  "Sch. of Comput. Sci., Carnegie Mellon Univ.,
                 Pittsburgh, PA, USA",
  classification = "C6150J (Operating systems); C7430 (Computer
                 engineering)",
  keywords =     "Common DOS functions; Common DOS software; DOS
                 functionality; DOS operating system; Frequently loaded
                 DOS drivers; High memory area; High-speed space combat
                 simulation system; I/O devices; I386/i486 architecture;
                 Latency demands; Mach features; Machine-dependent
                 kernel modifications; Multiple virtual DOS
                 environments; Multithreaded emulation; PC architecture;
                 Performance sensitive PC entertainment software;
                 Timing; Unix emulation; Unix Server; VGA display;
                 Virtual 8086 mode; Virtual machine environment; Wing
                 Commander",
  thesaurus =    "IBM computers; Microcomputer applications; Supervisory
                 programs; Unix; Virtual machines",
}

@InProceedings{Manas:1991:VLM,
  author =       "J. A. Manas and J. Salvachua",
  editor =       "Kenneth R. Parker and Gordon A. Rose",
  booktitle =    "Proceedings of {Formal Description Techniques IV}",
  title =        "A Virtual {LOTOS} Machine",
  publisher =    pub-NORTH-HOLLAND,
  address =      pub-NORTH-HOLLAND:adr,
  pages =        "441--456",
  year =         "1991",
  bibdate =      "Mon May 24 07:35:14 2010",
  abstract =     "LOTOS behaviour semantics are usually presented in a
                 declarative style that permits to evaluate which events
                 are possible at each stage, and which is the behaviour
                 after an event occurs. In order to generate code that
                 implements these operational semantics an imperative
                 model is very convenient for efficiency. A virtual
                 machine (machine for LOTOS Behaviour Machine) is
                 presented in this paper that provides such an
                 imperative point of view, but still keeps independent
                 of implementation details, effectively providing an
                 intermediate representation for either interpretation
                 or generation of code for any systems programming
                 language. An abstract model of execution is presented,
                 and then the virtual machine is presented by describing
                 its instructions, the relationship to LOTOS constructs,
                 and its dynamic semantics. C code generation is briefly
                 commented too.",
  acknowledgement = ack-nhfb,
}

@Article{Maslak:1991:CRR,
  author =       "B. A. Maslak and J. M. Showalter and T. J.
                 Szczygielski",
  title =        "{Coordinated Resource Recovery} in {VM\slash ESA}",
  journal =      j-IBM-SYS-J,
  volume =       "30",
  number =       "1",
  pages =        "72--89",
  year =         "1991",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Tue Mar 19 17:38:46 1996",
  abstract =     "A system service for coordinated recovery of resources
                 is a critical function needed for distributed
                 processing environments because applications need to
                 provide for data integrity while the location of the
                 data and processes are transparent to the application.
                 VM is the first IBM operating system to provide
                 Coordinated Resource Recovery as a system service
                 rather than as a service provided by unique
                 environments running on the operating system, and the
                 VM Common Programming Interface-Communications and
                 Shared File System are the first subsystems to utilize
                 the service. The paper is an overview of why and how VM
                 provided Coordinated Resource Recovery (CRR). CRR is
                 the implementation of the Systems Application
                 Architecture (SAA) resource recovery interface within
                 Virtual Machine/Enterprise Systems Architecture
                 (VM/ESA). This coordinated sync point system service
                 allows one or more applications or subsystems to update
                 multiple resources and to request that all updates be
                 committed or backed out together.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Data Syst. Div., Endicott, NY, USA",
  classification = "C6150J (Operating systems)",
  keywords =     "Coordinated Resource Recovery; Data integrity;
                 Distributed processing environments; IBM operating
                 system; Resource recovery interface; Shared File
                 System; Sync point system service; System service;
                 Systems Application Architecture; Virtual
                 Machine/Enterprise Systems Architecture; VM Common
                 Programming Interface-Communications",
  language =     "English",
  pubcountry =   "USA",
  thesaurus =    "IBM computers; Operating systems [computers]; Virtual
                 machines",
}

@Article{Meleshchuk:1991:IPP,
  author =       "S. B. Meleshchuk and A. N. Nedumov",
  title =        "Implementation of a protocol for parallel database
                 access with virtual machine communications facilities",
  journal =      j-PROGRAMMIROVANIE,
  volume =       "17",
  number =       "1",
  pages =        "35--42",
  month =        jan # "\slash " # feb,
  year =         "1991",
  CODEN =        "PCSODA",
  ISSN =         "0132-3474, 0361-7688",
  bibdate =      "Wed Apr 16 06:39:19 MDT 1997",
  note =         "English translation in Programming and Computer
                 Software, vol. 17, no. 1, pp. 27--32, November 1991.",
  acknowledgement = ack-nhfb,
  classification = "C6150J (Operating systems)",
  corpsource =   "Leningrad Techn. State Univ., USSR",
  keywords =     "COMMIT protocol; concurrency control; deadlock;
                 electronic mail; interrupts; IUCV mail facility;
                 machines; parallel; parallel database access;
                 processing; protocol; protocols; virtual; virtual
                 machines",
  pubcountry =   "USSR",
  treatment =    "P Practical",
}

@Article{Osisek:1991:EIA,
  author =       "D. L. Osisek and K. M. Jackson and P. H. Gum",
  title =        "{ESA}\slash 390 interpretive-execution architecture,
                 foundation for {VM\slash ESA}",
  journal =      j-IBM-SYS-J,
  volume =       "30",
  number =       "1",
  pages =        "34--51",
  year =         "1991",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Sun Sep 15 05:47:47 MDT 1996",
  abstract =     "The interpretive-execution facility of Enterprise
                 Systems Architecture/390 (ESA/390) provides an
                 instruction for the execution of virtual machines. This
                 instruction, called Start interpretive execution (SIE),
                 was initially created, for virtualizing either
                 System/370 or 370-XA architectures, and was used later
                 for virtualizing ESA/370 and ESA/390 architectures. SIE
                 has evolved to provide capabilities for a number of
                 specialized performance environments. Most recently it
                 provides for the unique requirements of Enterprise
                 Systems Architecture/Extended Configuration (ESA/XC)
                 virtual-machine architecture. This comprehensive set of
                 capabilities in the architecture serves as the platform
                 for the ability of VM/ESA to provide functions in
                 virtual machines for end users and system servers. The
                 paper describes the evolution of SIE and outlines use
                 of the various capabilities in VM/ESA.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Data Syst. Div., Endicott, NY, USA",
  classification = "C6150J (Operating systems)",
  keywords =     "Enterprise Systems Architecture/390; Enterprise
                 Systems Architecture/Extended Configuration; ESA/390
                 interpretive-execution architecture; SIE; Start
                 interpretive execution; Virtual-machine architecture;
                 VM/ESA",
  language =     "English",
  pubcountry =   "USA",
  thesaurus =    "IBM computers; Operating systems [computers]; Virtual
                 machines",
}

@Book{Pulman:1991:EER,
  editor =       "Stephen G. Pulman",
  title =        "{EUROTRA ET6/1}: rule formalism and virtual machine
                 design study -- final report",
  publisher =    "Commission of the European Communities",
  address =      "Luxembourg, Luxembourg",
  year =         "1991",
  note =         "Contributors: H. Alshawi, D.J. Arnold, R. Backofen,
                 D.M. Carter, J. Lindop, K. Netter, S.G. Pulman, J.
                 Tsujii and H. Uszkoreit.",
}

@Article{Rosing:1991:DPP,
  author =       "Matthew Rosing and Robert B. Schnabel and Robert P.
                 Weaver",
  title =        "The {DINO} parallel programming language",
  journal =      j-J-PAR-DIST-COMP,
  volume =       "13",
  number =       "1",
  pages =        "30--42",
  day =          "1",
  month =        sep,
  year =         "1991",
  CODEN =        "JPDCER",
  ISSN =         "0743-7315",
  bibdate =      "Sat Apr 12 19:06:31 MDT 1997",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliation =  "Univ of Colorado",
  affiliationaddress = "Boulder, CO, USA",
  classification = "721; 722; 723; C6140D (High level languages)",
  corpsource =   "Department of Comput. Sci., Colorado Univ., Boulder,
                 CO, USA",
  journalabr =   "J Parallel Distrib Comput",
  keywords =     "compiler; Computer Operating Systems; Computer
                 Programming Languages--C; Computer
                 Programming--Algorithms; Computer Systems, Digital;
                 constructs; data; DINO parallel programming language;
                 distributed data; Distributed memory multiprocessors;
                 distributed memory multiprocessors; distributed
                 numerically; high-level parallel; MIMD; oriented
                 language; Parallel algorithms; parallel algorithms;
                 parallel languages; Parallel Processing; Parallel
                 programs; semantics; Software package DINO; standard C;
                 structures; syntax; virtual machine; virtual parallel
                 computer",
  treatment =    "P Practical",
}

@PhdThesis{Shen:1991:VTD,
  author =       "Shioupyn Shen",
  title =        "The virtual-time data-parallel machine",
  type =         "Thesis ({Ph.D.})",
  school =       "Department of Computer Science, University of
                 California, Los Angeles",
  address =      "Los Angeles, CA, USA",
  pages =        "xi + 115",
  year =         "1991",
  LCCN =         "LD791.9.C6 S548 1991",
  bibdate =      "Mon Apr 10 11:00:44 2006",
  acknowledgement = ack-nhfb,
}

@Article{Stone:1991:VCS,
  author =       "R. L. Stone and T. S. Nettleship and J. Curtiss",
  title =        "{VM\slash ESA CMS Shared File System}",
  journal =      j-IBM-SYS-J,
  volume =       "30",
  number =       "1",
  pages =        "52--71",
  year =         "1991",
  CODEN =        "IBMSA7",
  ISSN =         "0018-8670",
  bibdate =      "Sun Sep 15 05:47:47 MDT 1996",
  abstract =     "Discussed is work toward satisfying requirements on
                 the Conversational Monitor System (CMS) in the areas of
                 data sharing and physical DASD space sharing. This work
                 advances the present CMS file system design. Described
                 is the CMS Shared File System (SFS), which was designed
                 to satisfy the data sharing and physical DASD space
                 sharing requirements by providing a pool of DASD space
                 that is shared among multiple users. DASD space
                 assigned to the pool is easily extended, and read/write
                 sharing of individual files is allowed. Also discussed
                 is SFS security, usage of Virtual Machine/Enterprise
                 Systems Architecture (VM/ESA) data spaces for single
                 system performance, and coordinated resource recovery
                 to provide file data integrity in the distributed
                 environment.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Data Syst. Div., Endicott, NY, USA",
  classification = "C6150J (Operating systems); C6120 (File
                 organisation)",
  keywords =     "Conversational Monitor System; Data sharing; Data
                 spaces; File data integrity; Multiple users; Physical
                 DASD space sharing; Resource recovery; SFS security;
                 Virtual Machine/Enterprise Systems Architecture; VM/ESA
                 CMS Shared File System",
  language =     "English",
  pubcountry =   "USA",
  thesaurus =    "File organisation; IBM computers; Operating systems
                 [computers]; Virtual machines",
}

@Article{Tollenaere:1991:SMN,
  author =       "T. Tollenaere and G. A. Orban",
  title =        "Simulating modular neural networks on message-passing
                 multiprocessors",
  journal =      j-PARALLEL-COMPUTING,
  volume =       "17",
  number =       "4--5",
  pages =        "361--379",
  month =        jul,
  year =         "1991",
  CODEN =        "PACOEJ",
  ISSN =         "0167-8191",
  bibdate =      "Mon Apr 14 11:08:33 MDT 1997",
  acknowledgement = ack-nhfb,
  classification = "C1230 (Artificial intelligence); C7430 (Computer
                 engineering)",
  corpsource =   "Lab. for Neuro- and Psychophysiol., Katholieke Univ.,
                 Leuven, Belgium",
  keywords =     "compiler; data structure; decomposition;
                 entropy-driven artificial neural network; Hopfield
                 network; image restoration; independent simulation
                 environment; machine-; mapping; message-passing
                 multiprocessors; modular neural networks; neural nets;
                 parallel machines; parallel processing; simulation
                 programs; simulator program; splitter program;
                 transputer system; virtual machines",
  treatment =    "P Practical; T Theoretical or Mathematical",
}

@Article{Wejchert:1991:VPN,
  author =       "J. Wejchert and G. Tesauro",
  title =        "Visualizing processes in neural networks",
  journal =      j-IBM-JRD,
  volume =       "35",
  number =       "1/2",
  pages =        "244--253",
  month =        jan # "\slash " # mar,
  year =         "1991",
  CODEN =        "IBMJAE",
  ISSN =         "0018-8646",
  bibdate =      "Tue Mar 25 14:26:59 MST 1997",
  abstract =     "A real-time visualization toolkit has been designed to
                 study processes in neural network learning. To date,
                 relatively little attention has been given to
                 visualizing these complex, nonlinear systems. Two new
                 visualization methods are introduced and then applied.
                 One represents synaptic weight data as `bonds' of
                 varying length embedded in the geometrical structure of
                 a network. The other maps the temporal trajectory of
                 the system in a multidimensional configuration space as
                 a two-dimensional diagram. Two-dimensional graphics
                 were found to be sufficient for representing dynamic
                 neural processes. As an application, the visualization
                 tools are linked to simulations of networks learning
                 various Boolean functions. A multiwindow environment
                 allows different aspects of the simulation to be viewed
                 simultaneously using real-time animations. The
                 visualization toolkit can be used in a number of ways:
                 to see how solutions to a particular problem are
                 obtained; to observe how different parameters affect
                 learning dynamics; and to identify the decision stages
                 of learning.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Sci. Centre, Winchester, UK",
  classcodes =   "C7430 (Computer engineering); C1230D (Neural nets);
                 C6130B (Graphics techniques); C1240 (Adaptive system
                 theory)",
  classification = "C1230D (Neural nets); C1240 (Adaptive system
                 theory); C6130B (Graphics techniques); C7430 (Computer
                 engineering)",
  corpsource =   "IBM Sci. Centre, Winchester, UK",
  keywords =     "2D diagram; Boolean; Boolean functions; configuration
                 space; Dynamic neural processes; dynamic neural
                 processes; engineering graphics; functions; learning
                 systems; multidimensional; Multidimensional
                 configuration space; Multiwindow environment;
                 multiwindow environment; neural nets; Neural network
                 learning; neural network learning; Neural networks;
                 neural networks; Nonlinear systems; nonlinear systems;
                 real-; Real-time animations; real-time animations;
                 real-time visualization; Real-time visualization
                 toolkit; Synaptic weight data; synaptic weight data;
                 Temporal trajectory; temporal trajectory; time systems;
                 toolkit; virtual machines",
  thesaurus =    "Engineering graphics; Learning systems; Neural nets;
                 Real-time systems; Virtual machines",
  treatment =    "P Practical",
}

@Article{Wu:1991:NNS,
  author =       "J.-. L. Wu and S.-T. Cheng",
  title =        "A neural network simulating system",
  journal =      j-COMP-J,
  volume =       "34",
  number =       "1",
  pages =        "92--93",
  month =        feb,
  year =         "1991",
  CODEN =        "CMPJA6",
  ISSN =         "0010-4620",
  bibdate =      "Tue Mar 25 13:51:56 MST 1997",
  bibsource =    "http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_01/",
  URL =          "http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_01/tiff/92.tif;
                 http://www3.oup.co.uk/computer_journal/hdb/Volume_34/Issue_01/tiff/93.tif",
  acknowledgement = ack-nhfb,
  affiliation =  "Department of Comput. Sci. and Inf. Eng., Nat. Taiwan
                 Univ., Taipei, Taiwan",
  classcodes =   "C7430 (Computer engineering); C6140D (High level
                 languages); C6110B (Software engineering techniques);
                 C1230 (Artificial intelligence)",
  classification = "C1230 (Artificial intelligence); C6110B (Software
                 engineering techniques); C6140D (High level languages);
                 C7430 (Computer engineering)",
  corpsource =   "Department of Comput. Sci. and Inf. Eng., Nat. Taiwan
                 Univ., Taipei, Taiwan",
  keywords =     "experimental neural network description language;
                 Experimental neural network description language;
                 models; network simulation system; neural; neural nets;
                 neural network; Neural network models; Neural network
                 simulation system; specification languages; unifying
                 way; Unifying way; virtual machines",
  thesaurus =    "Neural nets; Specification languages; Virtual
                 machines",
  treatment =    "P Practical; T Theoretical or Mathematical",
}

@Article{Ackerman:1992:SIE,
  author =       "D. F. Ackerman and M. H. Decker and J. J. Gosselin and
                 K. M. Lasko and M. P. Mullen and R. E. Rosa and E. V.
                 Valera and B. Wile",
  title =        "Simulation of {IBM Enterprise System\slash 9000}
                 models 820 and 900",
  journal =      j-IBM-JRD,
  volume =       "36",
  number =       "4",
  pages =        "751--764",
  month =        jul,
  year =         "1992",
  CODEN =        "IBMJAE",
  ISSN =         "0018-8646",
  bibdate =      "Tue Mar 25 14:26:59 MST 1997",
  abstract =     "The discovery and removal of logic design errors early
                 in the development cycle is critical to timely
                 availability of market-driven processor products. The
                 paper describes the part played by simulation in the
                 verification of the high-end models of the IBM
                 Enterprise System/9000 (ES/9000) processor family, and
                 how that effort advanced the state of the art of logic
                 design simulation. The increased complexity of the
                 ES/9000 design over that of the IBM Enterprise
                 System/3090 (ES/3090) necessitated a larger simulation
                 effort. New tools and methods were developed. Two
                 simulation missions were established. Element
                 simulation addressed ES/9000 functional elements (e.g.
                 the storage controller) individually using the Compiled
                 Enhanced Functional Simulator (CEFS), a software tool.
                 System simulation tested two or more functional
                 elements together using the Engineering Verification
                 Engine (EVE), a special-purpose hardware parallel
                 processor, and an attached IBM 3092 Processor
                 Controller (PCE). The results achieved by simulation
                 are discussed, together with the methods used and the
                 impact these results had on the overall verification of
                 the ES/9000 Models 820 and 900.",
  acknowledgement = ack-nhfb,
  affiliation =  "IBM Enterprise Syst., Poughkeepsie, NY, USA",
  classcodes =   "C5470 (Performance evaluation and testing); C7430
                 (Computer engineering); C5210 (Logic design methods);
                 C5420 (Mainframes and minicomputers)",
  classification = "C5210 (Logic design methods); C5420 (Mainframes and
                 minicomputers); C5470 (Performance evaluation and
                 testing); C7430 (Computer engineering)",
  corpsource =   "IBM Enterprise Syst., Poughkeepsie, NY, USA",
  keywords =     "Compiled Enhanced Functional Simulator; computer
                 testing; development cycle; Development cycle;
                 Engineering Verification Engine; formal verification;
                 high-end models; High-end models; IBM computers; logic;
                 logic design errors; Logic design errors; logic design
                 simulation; Logic design simulation; mainframes;
                 simulation; Simulation; software tool; Software tool;
                 storage controller; Storage controller; testing;
                 verification; Verification; virtual machines",
  thesaurus =    "Computer testing; Formal verification; IBM computers;
                 Logic testing; Mainframes; Virtual machines",
  treatment =    "P Practical",
}

@Article{Darcy:1992:USD,
  author =       "George A. {Darcy III} and Ronald F. Brender and
                 Stephen J. Morris and Michael V. Iles",
  title =        "Using Simulation to Develop and Port Software",
  journal =      j-DEC-TECH-J,
  volume =       "4",
  number =       "4",
  pages =        "181--192",
  month =        "Fall",
  year =         "1992",
  CODEN =        "DTJOEL",
  ISSN =         "0898-901X",
  bibdate =      "Thu Mar 20 18:15:43 MST 1997",
  URL =          "ftp://ftp.digital.com/pub/Digital/info/DTJ/v4n4/Using_Simulation_to_Develop_an_01apr1993DTJ812P8.ps;
                 http://www.digital.com:80/info/DTJ812/DTJ812SC.TXT",
  abstract =     "Among the tools developed to support Digital's Alpha
                 AXP program were four software simulators. The
                 Mannequin and ISP instruction set simulators were used
                 to port the OpenVMS and OSF/1 operating systems to the
                 Alpha AXP platform. The Alpha User-mode Debugging
                 Environment (AUD) allowed Alpha AXP user-mode code to
                 be debugged with support from the OpenVMS VAX run-time
                 environment on VAX hardware. AUD was built from a
                 combination of new and existing Digital software
                 components. The Alpha User-mode Debugging Environment
                 for Translated Images (AUDI) allowed translated images
                 to be debugged on a simulator running on a VAX
                 computer. With these debugging environments, user-mode
                 applications and code components could be tested before
                 Alpha AXP hardware and operating system software were
                 available.",
  acknowledgement = ack-nhfb,
  classcodes =   "C7430 (Computer engineering); C6150J (Operating
                 systems); C5440 (Multiprocessor systems and
                 techniques); C6150G (Diagnostic, testing, debugging and
                 evaluating systems)",
  classification = "C5440 (Multiprocessor systems and techniques);
                 C6150G (Diagnostic, testing, debugging and evaluating
                 systems); C6150J (Operating systems); C7430 (Computer
                 engineering)",
  keywords =     "(computers); Alpha; Alpha AXP platform; Alpha AXP
                 program; Alpha AXP user-mode code; Alpha User-Mode
                 Debugging Environment; AUDI; AXP platform; AXP
                 user-mode code; Code components; code components;
                 computer; debugged; Debugged; debugging environments;
                 Debugging environments; DEC computers; environment;
                 instruction set simulators; ISP; ISP instruction set
                 simulators; Mannequin; multiprocessing systems; OpenVMS
                 VAX run-time; OpenVMS VAX run-time environment;
                 operating systems; OSF/1 operating systems; program
                 debugging; software portability; Software simulators;
                 software simulators; translated images; Translated
                 images; VAX; VAX computer; VAX hardware; virtual
                 machines",
  thesaurus =    "DEC computers; Multiprocessing systems; Operating
                 systems [computers]; Program debugging; Software
                 portability; Virtual machines",
  treatment =    "P Practical",
}

@Article{Garzon:1992:DTG,
  author =       "Max H. Garzon and Stanley P. Franklin and William
                 Baggett and William S. {Boyd, Jr.} and Dinah
                 Dickerson",
  title =        "Design and Testing of a General-Purpose
                 Neurocomputer",
  journal =      j-J-PAR-DIST-COMP,
  volume =       "14",
  number =       "3",
  pages =        "203--220",
  month =        mar,
  year =         "1992",
  CODEN =        "JPDCER",
  ISSN =         "0743-7315",
  bibdate =      "Sat Apr 12 19:06:31 MDT 1997",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliation =  "Memphis State Univ",
  affiliationaddress = "Memphis, TN, USA",
  classification = "721; 722; 723; C5220P (Parallel architecture); C5290
                 (Neural computing techniques); C7430 (Computer
                 engineering)",
  corpsource =   "Inst. of Intelligent Syst., Memphis State Univ., TN,
                 USA",
  journalabr =   "J Parallel Distrib Comput",
  keywords =     "AMNIAC; amniac Neurocomputer; Computer Systems,
                 Digital --- Parallel Processing; Computers --- General
                 Purpose Application; Design; Logic Design --- Testing;
                 Logical Design; massively parallel; Massively Parallel
                 Simulations; MIMD; neural nets; Neural Networks; Neural
                 Networks --- Stability; neurocomputer; parallel
                 architectures; Programmable Neural Network;
                 programmable neural network; SIMD; Software Serial;
                 Stability Problem for Networks; virtual machines",
  treatment =    "P Practical",
}

@Article{Hamilton:1992:SHU,
  author =       "Jeffrey W. Hamilton and Eileen M. Ornsby",
  title =        "Simulating Hypercubes In {Unix}. Part {I}",
  journal =      j-DDJ,
  volume =       "17",
  number =       "12",
  pages =        "72, 74, 76, 108--110, 112--113",
  month =        dec,
  year =         "1992",
  CODEN =        "DDJOEB",
  ISSN =         "1044-789X",
  bibdate =      "Tue Sep 03 09:15:37 1996",
  bibsource =    "http://www.ddj.com/index/author/index.htm, UnCover
                 database",
  abstract =     "In this two-part article, our authors describe how you
                 can simulate the execution of a hypercube program on a
                 standard UNIX system. This month, they focus on
                 partitions, the basic building blocks of a hypercube
                 system. Next month, they present the source code for
                 the simulator and discuss how to use the system.",
  acknowledgement = ack-nhfb,
  classification = "C5220P (Parallel architecture); C7430 (Computer
                 engineering); C6110P (Parallel programming)",
  keywords =     "Hypercube program; Intel iPSC/2 hypercube; UNIX
                 system",
  thesaurus =    "C listings; Hypercube networks; Parallel programming;
                 Unix; Virtual machines",
}

@Article{Hirschsohn:1992:PSS,
  author =       "Ian Hirschsohn",
  title =        "Personal Supercomputing: Seamless Portability",
  journal =      j-DDJ,
  volume =       "17",
  number =       "7",
  pages =        "40, 42--44, 46, 48",
  month =        jul,
  year =         "1992",
  CODEN =        "DDJOEB",
  ISSN =         "1044-789X",
  bibdate =      "Tue Sep 10 10:06:23 MDT 1996",
  bibsource =    "http://www.ddj.com/index/author/index.htm",
  acknowledgement = ack-nhfb,
  classification = "C6110B (Software engineering techniques); C7430
                 (Computer engineering); C6115 (Programming support)",
  keywords =     "386SX; Code transfer; Hardware independent virtual
                 computer; Personal supercomputing; PORT software
                 environment; RISC; Seamless portability",
  thesaurus =    "Programming environments; Reduced instruction set
                 computing; Software portability; Virtual machines",
}

@Article{Jim-Min:1992:IES,
  author =       "Lin Jim-Min and Rong Tsai Shang and Tseng Li-Ming",
  title =        "Integrating Existing Software Packages Using the
                 Virtual Machine Technique",
  journal =      j-J-SYST-SOFTW,
  volume =       "18",
  number =       "3",
  pages =        "207--??",
  month =        jul,
  year =         "1992",
  CODEN =        "JSSODM",
  ISSN =         "0164-1212",
  bibdate =      "Wed Dec 16 08:24:49 MST 1998",
  acknowledgement = ack-nhfb,
  annote =       "incomplete",
}

@Article{Kutter:1992:STE,
  author =       "Michael Kutter",
  title =        "Simulation And Testboard For Embedded-System Design",
  journal =      j-DDJ,
  volume =       "17",
  number =       "12",
  pages =        "62, 66--68",
  month =        dec,
  year =         "1992",
  CODEN =        "DDJOEB",
  ISSN =         "1044-789X",
  bibdate =      "Tue Sep 03 09:15:37 1996",
  bibsource =    "http://www.ddj.com/index/author/index.htm, UnCover
                 database",
  abstract =     "With software simulation and hardware testboards, you
                 can debug and test code in parallel with hardware
                 development. Michael explains how these techniques were
                 applied to the software-development cycle of an
                 embedded controller.",
  acknowledgement = ack-nhfb,
  affiliation =  "Advanced NMR Systems Inc., Wilmington, MA, USA",
  classification = "C7430 (Computer engineering); C6110B (Software
                 engineering techniques)",
  keywords =     "Advanced NMR Systems; Embedded controller; Embedded
                 system design; Hardware-testboard techniques; Software
                 simulation; Software-development cycle",
  thesaurus =    "Development systems; Real-time systems; Software
                 engineering; Virtual machines",
}

@TechReport{Loyot:1992:VVM,
  author =       "Edmond C. {Loyot, Jr.}",
  title =        "{VMPP}: {A} Virtual Machine for Parallel Processing",
  number =       "CS-92-30",
  institution =  "Department of Computer Science, University of
                 Virginia",
  month =        sep # " 29",
  year =         "1992",
  note =         "Mon, 28 Aug 1995 21:06:39 GMT",
  URL =          "http://www.cs.virginia.edu/~techrep/CS-92-30.ps.Z",
}

@TechReport{LoyotJr:1992:VVM,
  author =       "Edmond C. {Loyot Jr.}",
  title =        "{VMPP}: {A} Virtual Machine for Parallel Processing",
  type =         "Technical Report",
  number =       "CS-92-30",
  institution =  "University of Virginia",
  month =        sep # " 29,",
  year =         "1992",
  bibdate =      "August 28, 1995",
  URL =          "ftp://ftp.cs.virginia.edu/pub/techreports/CS-92-30.ps.Z",
}

@Article{Majumdar:1992:PPC,
  author =       "A. Majumdar and W. R. Martin",
  title =        "Parallel preconditioned conjugate gradient algorithm
                 applied to neutron diffusion problem",
  journal =      j-TRANS-AM-NUCL-SOC,
  volume =       "65",
  pages =        "209--210",
  year =         "1992",
  CODEN =        "TANSAO",
  ISSN =         "0003-018X",
  bibdate =      "Sun Dec 22 10:17:16 MST 1996",
  acknowledgement = ack-nhfb,
  affiliation =  "Michigan Univ., Ann Arbor, MI, USA",
  classification = "A0260 (Numerical approximation and analysis); A2820H
                 (Neutron diffusion); A2841C (Computer codes); C4130
                 (Interpolation and function approximation); C4240P
                 (Parallel programming and algorithm theory); C7470
                 (Nuclear engineering)",
  keywords =     "BBN TC2000; Distributed workstation; IBM RS6000;
                 Iterative method; Linear system; Neutron diffusion;
                 Parallel PCG algorithm; Parallel virtual machine;
                 Parallelization software; Preconditioned conjugate
                 gradient; Shared memory machine",
  thesaurus =    "Iterative methods; Neutron diffusion; Nuclear
                 engineering computing; Parallel algorithms",
}

@Article{Mebane:1992:EFD,
  author =       "Alfred Holt {Mebane, IV} and James R. Schmedake and
                 Iue-Shuenn Chen and Anne P. Kadonaga",
  title =        "Electronic and firmware design of the {HP DesignJet}
                 drafting plotter",
  journal =      j-HEWLETT-PACKARD-J,
  volume =       "43",
  number =       "6",
  pages =        "16--23",
  month =        dec,
  year =         "1992",
  CODEN =        "HPJOAX",
  ISSN =         "0018-1153",
  bibdate =      "Tue Mar 25 14:12:15 MST 1997",
  abstract =     "High-performance vector-to-raster conversion and print
                 engine control are provided by a RISC processor, two
                 single-chip processors, and three custom integrated
                 circuits. Development of the electronics and firmware
                 made extensive use of emulation and simulation.",
  acknowledgement = ack-nhfb,
  affiliation =  "Hewlett Packard Co., Palo Alto, CA, USA",
  classcodes =   "C5550 (Printers, plotters and other hard-copy output
                 devices)C7430 (Computer engineering)",
  classification = "C5550 (Printers, plotters and other hard-copy output
                 devices); C7430 (Computer engineering)",
  corpsource =   "Hewlett Packard Co., Palo Alto, CA, USA",
  keywords =     "application specific integrated circuits; computing;
                 Custom integrated circuits; custom integrated circuits;
                 Emulation; emulation; firmware; Firmware design;
                 firmware design; Hewlett; HP DesignJet drafting
                 plotter; Packard computers; plotters; Print engine
                 control; print engine control; raster conversion;
                 reduced instruction set; RISC processor; Simulation;
                 simulation; Single-chip processors; single-chip
                 processors; vector-to-; Vector-to-raster conversion;
                 virtual machines",
  thesaurus =    "Application specific integrated circuits; Firmware;
                 Hewlett Packard computers; Plotters; Reduced
                 instruction set computing; Virtual machines",
  treatment =    "P Practical",
}

@Article{Muller:1992:ASP,
  author =       "Urs A. Muller and Bernhard Baumle and Peter Kohler and
                 Anton Gunzinger and Walter Guggenbuhl",
  title =        "Achieving Supercomputer Performance for Neural Net
                 Simulation with an Array of Digital Signal Processors",
  journal =      j-IEEE-MICRO,
  volume =       "12",
  number =       "5",
  pages =        "55--65",
  day =          "1",
  month =        oct,
  year =         "1992",
  CODEN =        "IEMIDZ",
  ISSN =         "0272-1732",
  bibdate =      "Thu Dec 14 06:08:58 MST 2000",
  bibsource =    "UnCover library database; Science Citation Index
                 database (1980--2000)",
  abstract =     "High-power computing for neural network simulation.",
  acknowledgement = ack-nhfb,
  classcodes =   "C5440 (Multiprocessor systems and techniques); C5220P
                 (Parallel architecture); C7430 (Computer engineering);
                 C6110P (Parallel programming); C5290 (Neural computing
                 techniques); C5135 (Digital signal processing chips)",
  corpsource =   "Electron. Lab., Swiss Federal Inst. of Technol.,
                 Zurich, Switzerland",
  keywords =     "2.7 GFLOPS; architecture; architectures;
                 backpropagation; digital signal processing chips;
                 digital signal processors array; interconnection
                 networks; multiprocessor; Music; neural net simulation;
                 neural nets; parallel; parallel distributed-memory;
                 parallel programming; programming; supercomputer
                 performance; virtual machines",
  treatment =    "P Practical",
}

@InProceedings{Nakanishi:1992:SSP,
  author =       "H. Nakanishi and V. Rego and V. Sunderam",
  title =        "Superconcurrent simulation of polymer chains on
                 heterogeneous networks",
  crossref =     "IEEE:1992:PSM",
  pages =        "561--569",
  year =         "1992",
  bibdate =      "Wed Apr 15 15:37:20 MDT 1998",
  acknowledgement = ack-nhfb,
  classification = "A6140K (Polymers, elastomers, and plastics); C1140Z
                 (Other and miscellaneous); C7320 (Physics and
                 Chemistry); C7430 (Computer engineering)",
  corpsource =   "Department of Phys. and CS, Purdue Univ., West
                 Lafayette, IN, USA",
  keywords =     "EcliPSe toolkit; heterogeneous computing nodes;
                 heterogeneous networks; massively parallel stochastic
                 simulation; physics computing; polymer chains; polymer
                 structure; price-performance ratios; scale-invariant
                 phenomena; stochastic processes; superconcurrent
                 simulation; toolkit-based parallelization; tree-
                 structure; tree-structured virtual machine; virtual
                 machines",
  sponsororg =   "IEEE; ACM",
  treatment =    "A Application; P Practical",
}

@Article{Nourse:1992:MWN,
  author =       "Andrew W. Nourse",
  title =        "{Microsoft Windows} Network Virtual Device Drivers in
                 {PATHWORKS} for {DOS}",
  journal =      j-DEC-TECH-J,
  volume =       "4",
  number =       "1",
  pages =        "47--55 (or 47--56??)",
  month =        "Winter",
  year =         "1992",
  CODEN =        "DTJOEL",
  ISSN =         "0898-901X",
  bibdate =      "Thu Mar 20 18:15:43 MST 1997",
  URL =          "ftp://ftp.digital.com/pub/Digital/info/DTJ/v4n1/Microsoft_Windows_Network_Virt_01oct1992DTJ506P8.ps;
                 http://www.digital.com:80/info/DTJ506/DTJ506SC.TXT",
  abstract =     "Digital's PATHWORKS for DOS version 4.1 personal
                 computer integration software includes two network
                 virtual device drivers for the Microsoft Windows
                 environment. These drivers allow Windows applications
                 operating in a protected processor mode and standard
                 DOS applications in a virtual machine to concurrently
                 access services designed to run in real mode under the
                 DOS operating system. The network virtual device
                 drivers, available only in Microsoft Windows enhanced
                 mode, manage DECnet and NetBIOS operations and permit
                 the full use of these interfaces.",
  acknowledgement = ack-nhfb,
  classcodes =   "C6150N (Distributed systems)",
  classification = "C6150N (Distributed systems)",
  keywords =     "DECnet; device drivers; graphical user interfaces;
                 Microsoft Windows; NetBIOS; network operating systems;
                 network virtual; Network virtual device drivers;
                 personal computer integration software; Personal
                 computer integration software",
  thesaurus =    "Graphical user interfaces; Network operating systems",
  treatment =    "P Practical",
}

@Article{Saeed:1992:ICM,
  author =       "Faisel Saeed and K. M. George and M. H. Samadzadeh",
  title =        "Implementation of classical mutual exclusion
                 algorithms in {Ada}",
  journal =      j-SIGADA-LETTERS,
  volume =       "12",
  number =       "1",
  pages =        "73--84",
  month =        jan # "\slash " # feb,
  year =         "1992",
  CODEN =        "AALEE5",
  ISSN =         "0736-721X",
  bibdate =      "Sat Aug 9 09:05:44 MDT 2003",
  bibsource =    "http://portal.acm.org/; Compendex database",
  abstract =     "This paper presents a scheme for defining a simulation
                 environment for n-process mutual exclusion algorithms
                 based on an Ada virtual machine. Several algorithms
                 have been implemented and tested in this simulation
                 environment.",
  acknowledgement = ack-nhfb,
  affiliation =  "Oklahoma State Univ",
  affiliationaddress = "Stillwater, OK, USA",
  classcodes =   "C6110P (Parallel programming); C6150J (Operating
                 systems); C6140D (High level languages); C7430
                 (Computer engineering); C6185 (Simulation techniques)",
  classification = "723",
  corpsource =   "Department of Comput. Sci., Oklahoma State Univ.,
                 Stillwater, OK, USA",
  journalabr =   "Ada Lett",
  keywords =     "Ada; Ada listings; Ada Virtual Machine; Ada virtual
                 machine; classical mutual; Computer Programming ---
                 Algorithms; Computer Programming Languages --- Ada;
                 Computer Simulation; concurrency control; DELAY
                 statements; digital simulation; exclusion algorithms;
                 implementation template; Mutual Exclusion Algorithms;
                 n-process mutual exclusion algorithms; parallel
                 programming; Simulation Environment; simulation
                 environment; virtual machines",
  treatment =    "P Practical",
}

@Article{Salter:1992:EHW,
  author =       "Brett Salter",
  title =        "An exception handler for {Windows} 3",
  journal =      j-DDJ,
  volume =       "17",
  number =       "9",
  pages =        "32, 34, 36, 102, 104--107",
  month =        sep,
  year =         "1992",
  CODEN =        "DDJOEB",
  ISSN =         "1044-789X",
  bibdate =      "Tue Sep 10 10:06:23 MDT 1996",
  bibsource =    "http://www.ddj.com/index/author/index.htm, UnCover
                 database",
  abstract =     "When writing Periscope/32 for Windows, a system-level
                 debugger for Windows 3, Brett needed to debug the
                 debugger so he developed WINX.386. This Windows
                 exception handler is implemented as an Enhanced Mode
                 Windows virtual device driver that oversees what's
                 happening with other VxDs, normal Windows applications
                 and drivers, and the DOS box --- including TSRs and DOS
                 device drivers.",
  acknowledgement = ack-nhfb,
  affiliation =  "The Periscope Co., Atlanta, GA, USA",
  classification = "C6150G (Diagnostic, testing, debugging and
                 evaluating systems); C6180G (Graphical user
                 interfaces); C6150N (Distributed systems)",
  keywords =     "DOS device drivers; Enhanced mode Windows virtual
                 device driver; Exception handler; Periscope/32;
                 System-level debugger; Windows 3; WINX.386",
  thesaurus =    "Assembly language listings; Error handling; Graphical
                 user interfaces; Input-output programs;
                 Multiprogramming; Program debugging; Virtual machines",
}

@TechReport{Simpkins:1992:AVP,
  author =       "N. K. Simpkins",
  title =        "{ALEP-0 Version 2.2: Prototype Virtual Machine}",
  institution =  "CEC",
  publisher =    "Commission of the European Communities",
  address =      "Luxembourg, Luxembourg",
  year =         "1992",
  note =         "(User guide for the Advanced Language Engineering
                 Platform). BIM",
}

@Article{Sterrett:1992:PMA,
  author =       "Anthony Sterrett and Marvin Minei",
  title =        "Performance measures of the {Ada Rendezvous}",
  journal =      j-SIGADA-LETTERS,
  volume =       "12",
  number =       "2",
  pages =        "97--101",
  month =        mar # "\slash " # apr,
  year =         "1992",
  CODEN =        "AALEE5",
  ISSN =         "0736-721X",
  bibdate =      "Sat Aug 9 09:05:44 MDT 2003",
  bibsource =    "http://portal.acm.org/; Compendex database",
  abstract =     "A discussion is presented of the average rendezvous
                 response time (RRT) for a transaction-based
                 two-processor system. RRT is discussed from the point
                 of view of a sensitivity study. Generalized performance
                 curves for the rendezvous are shown, along with
                 commentary on their performance elbows (bottlenecks).",
  acknowledgement = ack-nhfb,
  affiliation =  "Naval Ocean Systems Cent",
  affiliationaddress = "San Diego, CA, USA",
  classcodes =   "C6150N (Distributed systems); C6140D (High level
                 languages)",
  classification = "723",
  corpsource =   "Naval Ocean Systems Center, San Diego, CA, USA",
  journalabr =   "Ada Lett",
  keywords =     "Ada; Ada rendezvous; asynchronous tasks;
                 communication; Computer Programming Languages; computer
                 simulations; Computer Systems, Digital ---
                 Multiprocessing; Computer Systems, Digital ---
                 Performance; curves; multiprocessing programs;
                 performance; performance behavior; performance
                 evaluation; Rendezvous Response Time; rendezvous
                 response time; sensitivity studies; synchronized;
                 two-processor system; virtual machines",
  treatment =    "P Practical",
}

@Article{Tollenaere:1992:PIC,
  author =       "Tom Tollenaere and Marc M. {Van Hulle} and Guy A.
                 Orban",
  title =        "Parallel Implementation and Capabilities of
                 Entropy-Driven Artificial Neural Networks",
  journal =      j-J-PAR-DIST-COMP,
  volume =       "14",
  number =       "3",
  pages =        "286--305",
  month =        mar,
  year =         "1992",
  CODEN =        "JPDCER",
  ISSN =         "0743-7315",
  bibdate =      "Sat Apr 12 19:06:31 MDT 1997",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliation =  "Katholieke Universiteit te Leuven",
  affiliationaddress = "Leuven, Belgium",
  classification = "723; 741; C5290 (Neural computing techniques)",
  corpsource =   "Katholieke Univ., Leuven, Belgium",
  journalabr =   "J Parallel Distrib Comput",
  keywords =     "Applications; EDANN; Entropy Driven Artificial Neural
                 Networks (EDANN); entropy-driven artificial neural
                 networks; Local Line Detection Operators; Network
                 Topology; neural nets; Neural Networks; parallel;
                 parallel simulator; Parallel Transputer Array; Retinal
                 Image; simulation environment; transputer array;
                 virtual machines",
  treatment =    "P Practical",
}

@Article{Turega:1992:CAS,
  author =       "M. Turega",
  title =        "A Computer Architecture to Support Neural Net
                 Simulation",
  journal =      j-COMP-J,
  volume =       "35",
  number =       "4",
  pages =        "353--360",
  month =        aug,
  year =         "1992",
  CODEN =        "CMPJA6",
  ISSN =         "0010-4620",
  bibdate =      "Wed Jul 21 09:53:36 MDT 1999",
  bibsource =    "http://www3.oup.co.uk/computer_journal/Volume_35/Issue_04/Vol35_04.index.html",
  URL =          "http://www3.oup.co.uk/computer_journal/Volume_35/Issue_04/Vol35_04.body.html#AbstractTurega",
  acknowledgement = ack-nhfb,
  affiliation =  "Department of Comput., Univ. of Manchester Inst. of
                 Sci. Technol., UK",
  author-1-adr = "Department of Computation, University of Manchester
                 Institute Of Science and Technology, P.O. Box 88,
                 Manchester M60 IQD",
  classcodes =   "C7430 (Computer engineering); C5220P (Parallel
                 architecture); C5290 (Neural computing techniques);
                 C1230D (Neural nets)",
  classification = "C1230D (Neural nets); C5220P (Parallel
                 architecture); C5290 (Neural computing techniques);
                 C7430 (Computer engineering)",
  corpsource =   "Department of Comput., Univ. of Manchester Inst. of
                 Sci. Technol., UK",
  keywords =     "architecture; back propagation model; Back propagation
                 model; computer; Computer architecture; input response;
                 Input response; memory nodes; Memory nodes; neural net
                 simulation; Neural net simulation; neural nets;
                 parallel architectures; processor nodes; Processor
                 nodes; real-world problems; Real-world problems;
                 virtual machines; weight adjustment; Weight
                 adjustment",
  thesaurus =    "Neural nets; Parallel architectures; Virtual
                 machines",
  treatment =    "P Practical; T Theoretical or Mathematical",
}

@TechReport{Cahill:1993:ICV,
  author =       "Vinny Cahill and Paul Taylor and Gradimir Starovic and
                 Brendan Tangney and Darragh O'Grady and Rodger Lea and
                 Christian Jacquemot and Peter Strarup Jensen and Paulo
                 Amaral and Adam Mirowski and James Loveluck and Youcef
                 Laribi and Xavier Rousset de Pina and Pedro Sousa",
  title =        "Implementing the {Comandos} Virtual Machine",
  type =         "Technical Report",
  number =       "TCD-CS-93-32",
  institution =  "Trinity College; Chorus Systemes; OSF Grenoble
                 Research Institute; Unite mixte BULL-IMAG; INESC",
  address =      "Dublin, Ireland; Grenoble, France",
  pages =        "50",
  year =         "1993",
  bibdate =      "Mon Apr 10 08:38:58 2006",
  note =         "Also in Chapter 10 of The Comandos Distributed
                 Application Platform.Cahill, {V}., Balter, {R}.,
                 Harris, {N}., and Rousset dePina, {X}.
                 (Ed.s),Springer-Verlag, Berlin, 1993.",
  URL =          "ftp://ftp.cs.tcd.ie/pub/tcd/tech-reports/reports.93/TCD-CS-93-32.ps.gz;
                 ftp://ftp.dsg.cs.tcd.ie/pub/doc/TCD-CS-93-32.ps.gz",
  abstract =     "This report describes the different implementations of
                 the Comandos platform. This report is published as
                 Chapter 10 of The Comandos Distributed Application
                 Platform Cahill, V., Balter, R., Harris, N., and
                 Rousset de Pina, X. (Eds.), Springer-Verlag, Berlin,
                 1993",
  contact-1 =    "<Vinny.Cahill@cs.tcd.ie>",
  contact-2 =    "<ptaylor@iona.com>",
  contact-3 =    "<Gradimir.Starovic@cs.tcd.ie>",
  contact-4 =    "<tangney@cs.tcd.ie>",
  contact-5 =    "<pms@inesc.pt>",
  copyright =    "1993 TCD DSG",
  dsgref =       "comandos",
  retrieval =    "Hard copy available by writing to: Rachel Noctor,
                 Librarian, Department of Computer Science, Trinity
                 College, Dublin 2, Ireland",
  source =       "~publications/published/DeptTechReports/ComandosBookTRs/C10-vm_impl/",
  xxnote =       "Check last author: Sousa or Souza??",
}

@MastersThesis{Cavender:1993:APV,
  author =       "Mark Edward Cavender",
  title =        "Asynchronous parallel virtual machine",
  type =         "M.S. thesis",
  school =       "University of Texas at San Antonio. Division of
                 Mathematics and Computer Science and Statistics",
  address =      "San Antonio, TX, USA",
  pages =        "vi + 228",
  year =         "1993",
  bibdate =      "Mon Jan 15 18:16:25 1996",
  acknowledgement = ack-nhfb,
  keywords =     "Parallel processing (Electronic computers); Virtual
                 computer systems.",
}

@TechReport{Crowl:1993:CLI,
  author =       "Lawrence A. Crowl",
  title =        "A Common Library Interface to Shared-Memory
                 Multiprocessors",
  number =       "93-80-08",
  institution =  "Department of Computer Science, Oregon State
                 University",
  year =         "1993",
  note =         "Fri, 15 Dec 1995 03:17:47 GMT",
  URL =          "http://www.cs.orst.edu/techpub/reports/1993/1993R-ORSTCS-93-80-08/",
  abstract =     "Programmers using a wide variety of shared-memory
                 multiprocessors cannot yet rely on the availability of
                 programming tools other than K\&R C and Fortran 77. To
                 overcome the sequential nature of these languages,
                 vendors usually provide parallel programming primitives
                 via user-callable libraries. Unfortunately, the
                 vendor-provided libraries often differ substantially.
                 In addition to providing differing mechanisms to create
                 and synchronize processes; libraries often have
                 different models of how the processes share and
                 allocate memory within their address space. This paper
                 describes a common library interface to seven different
                 shared-memory multiprocessors. Surprisingly, this
                 library needs only two pages of implementation on each
                 of the multiprocessors. However, the effect on the
                 programming model is significant. Programmers must use
                 the library's virtual machine model to obtain efficient
                 programs on all the different physical machines.",
  keywords =     "multiprocessor shared-memory programming parallel
                 portable system operating multiprocessor",
}

@Article{Culler:1993:LTR,
  author =       "David E. Culler and Richard M. Karp and David A.
                 Patterson and Abhijit Sahay and Klaus E. Schauser and
                 Eunice Santos and Ramesh Subramonian and Thorsten von
                 Eicken",
  title =        "{LogP}: towards a realistic model of parallel
                 computation",
  journal =      j-SIGPLAN,
  volume =       "28",
  number =       "7",
  pages =        "1--12",
  month =        jul,
  year =         "1993",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:16:39 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  affiliation =  "Div. of Comput. Sci., California Univ., Berkeley, CA,
                 USA",
  classification = "C5440 (Multiprocessor systems and techniques);
                 C6110P (Parallel programming); C7430 (Computer
                 engineering)",
  confdate =     "19-22 May 1993",
  conflocation = "San Diego, CA, USA",
  confsponsor =  "ACM",
  keywords =     "CM-5; Communication bandwidth; Communication delay;
                 Computing bandwidth; LogP; Machine configuration;
                 Machine designers; Parallel computers; Parallel machine
                 model; Portable parallel algorithms",
  thesaurus =    "Parallel algorithms; Parallel machines; Parallel
                 programming; Virtual machines",
}

@InProceedings{Despons:1993:CCP,
  author =       "R. Despons and T. Muntean",
  title =        "Constructing correct protocols for a diffusion virtual
                 machine in message passing parallel architectures",
  crossref =     "Grebe:1993:TAS",
  pages =        "465--480",
  year =         "1993",
  bibdate =      "Wed Apr 16 06:39:19 MDT 1997",
  acknowledgement = ack-nhfb,
  classification = "C5220P (Parallel architecture); C5440
                 (Multiprocessor systems and techniques); C5640
                 (Protocols); C6150N (Distributed systems); C7430
                 (Computer engineering)",
  corpsource =   "IMAG-LGI Lab., Grenoble Univ., France",
  keywords =     "architectures; communication protocols; diffusion
                 protocols; diffusion virtual machine; machines;
                 massively parallel architectures; message passing;
                 parallel; parallel algorithms; parallel applications;
                 parallel architectures; parallel machines; programming
                 environments; protocols; virtual machines",
  pubcountry =   "Netherlands",
  treatment =    "P Practical",
}

@InProceedings{Drapeau:1993:SLT,
  author =       "Ann L. Drapeau and Randy H. Katz",
  title =        "Striping in Large Tape Libraries",
  crossref =     "IEEE:1993:PSP",
  pages =        "378--387",
  year =         "1993",
  bibdate =      "Wed Apr 15 12:04:03 MDT 1998",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliation =  "Univ of California",
  affiliationaddress = "Berkeley, CA, USA",
  classification = "723; C5320C (Storage on moving magnetic media);
                 C5470 (Performance evaluation and testing); C7430
                 (Computer engineering)",
  corpsource =   "Comput. Sci. Div., California Univ., Berkeley, CA,
                 USA",
  keywords =     "data striping concepts; Database systems; discrete
                 event simulation; event-driven simulator; Event-driven
                 simulator; EXB120 tape robot; large tape libraries;
                 Large tape libraries; magnetic tape storage; Massive
                 tertiary storage systems; multimedia databases;
                 Non-striping system; online libraries; performance
                 evaluation; random workload; randomly distributed
                 access; records management; robot arms; Scientific data
                 collection; software libraries; Storage allocation
                 (computer); Striping concepts; tertiary storage
                 databases; virtual machines",
  sponsororg =   "IEEE; ACM SIGARCH",
  treatment =    "P Practical",
}

@InProceedings{Golub:1993:MER,
  author =       "D. B. Golub and R. Manikundalam and F. L. Rawson",
  title =        "{MVM}---an environment for running multiple {DOS},
                 {Windows} and {DPMI} programs on the microkernel",
  crossref =     "USENIX:1993:PUM",
  pages =        "173--190",
  year =         "1993",
  bibdate =      "Sat Sep 28 18:52:45 MDT 1996",
  acknowledgement = ack-nhfb,
  affiliation =  "Sch. of Comput. Sci., Carnegie Mellon Univ.,
                 Pittsburgh, PA, USA",
  classification = "C5440 (Multiprocessor systems and techniques);
                 C6150J (Operating systems); C6150N (Distributed
                 systems)",
  keywords =     "Access sharing; Client/server emulation cradle; DOS
                 Protected Mode Interface; DPMI programs; Industry
                 standard; Legacy software; Mach based systems;
                 Microkernel; Multiple applications; Multiple DOS
                 programs; Multiple Virtual Machines; MVM; PC DOS
                 system; Personal computer; Protected mode DOS
                 extenders; Virtual machine environment; Windows",
  thesaurus =    "IBM computers; Input-output programs; Microcomputer
                 applications; Multiprocessing programs; Operating
                 systems [computers]; Virtual machines",
}

@Article{Grimshaw:1993:DOP,
  author =       "Andrew S. Grimshaw and W. Timothy Strayer and P.
                 Narayan",
  title =        "Dynamic, object-oriented parallel processing",
  journal =      j-IEEE-PAR-DIST-TECH,
  volume =       "1",
  number =       "2",
  pages =        "33--47",
  month =        may,
  year =         "1993",
  CODEN =        "IPDTEX",
  ISSN =         "1063-6552",
  bibdate =      "Fri Apr 11 07:24:28 MDT 1997",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliation =  "Univ of Virginia",
  classification = "721.1; 722.4; 723.1; C5440 (Multiprocessor systems
                 and techniques); C6110B (Software engineering
                 techniques); C6110J (Object-oriented programming);
                 C6115 (Programming support)",
  corpsource =   "Department of Comput. Sci., Virginia Univ.,
                 Charlottesville, VA, USA",
  journalabr =   "IEEE Parallel Distrib Technol",
  keywords =     "32-node Intel iPSC/2; based distributed-memory
                 systems; comparison; compiler-; Computer programming;
                 Concurrent programs; Distributed computer systems; DNA;
                 dynamic parallel processing; easy; Gaussian
                 elimination; hand-coded implementations; high
                 performance; hypercube; image convolution; medium-grain
                 parallel; Mentat; Multiprocessing systems; Object
                 oriented programming; object-; object-oriented
                 programming; oriented parallel processing; Parallel
                 processing; parallel processing; Parallel processing
                 systems; Parallel programming; parallelism; partial;
                 performance evaluation; pivoting; portable software;
                 protein sequence; software; software portability;
                 software tools; sparse matrix-vector multiplication;
                 Sun IPC Sparcstations; virtual-machine model",
  treatment =    "P Practical",
}

@TechReport{Herbordt:1993:EEA,
  author =       "Martin C. Herbordt and Charles C. Weems",
  title =        "An Environment for Evaluating Architectures for
                 Spatially Mapped Computatio: System Architecture and
                 Preliminary Results",
  type =         "Technical Report",
  number =       "UM-CS-1993-070",
  institution =  "University of Massachusetts, Amherst, Computer
                 Science",
  month =        sep,
  year =         "1993",
  bibdate =      "Mon Apr 10 11:35:35 2006",
  URL =          "ftp://ftp.cs.umass.edu/pub/techrept/1993/UM-CS-1993-070.ps",
  abstract =     "An environment which addresses several problems in
                 evaluating massively parallel array architectures is
                 described. A realistic workload including a series of
                 applications currently being used as building blocks in
                 vision research has been constructed. Both flexibility
                 in architectural parameter selection and simulation
                 efficiency are maintained by combining virtual machine
                 emulation with trace driven simulation. The trade-off
                 between fairness to diverse target architectures and
                 programmability of the test programs is addressed
                 through the use of operator and application libraries.
                 Initial results are presented indicating the
                 appropriate balance between register file and cache to
                 optimize performance under varying levels of processor
                 element virtualization.",
  keywords =     "massively parallel array architectures; ENPASSANT;
                 virtual; machine emulation; trace driven simulation",
  language =     "English",
  notes =        "93-70 {"}An Environment for Evaluating Architectures
                 for Spatially Mapped Computation: System Architecture
                 and Preliminary Results{"} Martic C. Herbordt, Charles
                 C. Weems Computer Science Department Box 34610 Lederle
                 Graduate Research Center University of Massachusetts
                 Amherst, MA 01003-4610 September 1993",
  revision =     "April 3, 1996",
}

@Article{Inouchi:1993:PTI,
  author =       "H. Inouchi and N. McLoughlin",
  editor =       "H. Sorensen",
  title =        "Parallel techniques for image processing and
                 artificial neural network simulation",
  journal =      "Ai and Cognitive Science '91",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  pages =        "177--89",
  year =         "1993",
  abstract =     "The emergence of systems composed of multiple
                 processing elements and memory units, and their
                 associated models of computation promise to alleviate
                 many of the limitations of conventional Von Neumann
                 architectures. The implication of this to the field of
                 artificial intelligence is twofold, parallel systems
                 offer both a significant increase in computing
                 power/speed available, and a more natural physical
                 architecture for implementing parallel solutions to AI
                 problems. We discuss general parallel programming
                 techniques, their real applications to image processing
                 and neural network simulation, parallel implementation
                 of neural network models, and finally we finish with
                 our conclusions derived from this work.",
  keywords =     "image processing; artificial neural network
                 simulation; parallel techniques; memory units; Von
                 Neumann architectures; parallel systems; AI problems;
                 multiple processing elements; computation models;
                 artificial intelligence; parallel programming; neural
                 network models IMAGE PROCESSING; NEURAL NETS; PARALLEL
                 ALGORITHMS; PARALLEL PROGRAMMING; VIRTUAL MACHINES",
}

@PhdThesis{Knaggs:1993:PTA,
  author =       "Peter J. Knaggs",
  title =        "Practical and Theoretical Aspects of {F}orth Software
                 Development",
  school =       "School of Computing and Mathematics",
  address =      "University of Teesside, Middlesbrough, Cleveland. UK",
  month =        mar,
  year =         "1993",
  URL =          "ftp://cis.paisley.ac.uk/forth/thesis",
  abstract =     "This is an investigation into the use of the Forth
                 programming environment. The main areas of enquiry
                 were: interfacing Forth to other languages; interfacing
                 Forth and local area networks; and the use of RISC
                 processors with stack based architecture such as the
                 NC4000 and Harris RTX series.\par

                 We describe how to interface Forth and C. We also
                 provide a system with a multi-tasking interrupt driven
                 interface to the IBM NetBIOS networking software and a
                 simple, generic, method of task activation through
                 message passing.\par

                 Many aspects of the investigation proved to be
                 dependent on a more thorough theoretical underpinning
                 for the Forth language. The use of a typeless parameter
                 stack means that a programmer must concern himself with
                 the intellectual burden of managing the parameter
                 stack. The mismatching of stack elements can be the
                 cause of subtle logic errors. We therefore investigated
                 the possibility of developing a ``type algebra'' that
                 would allow us to develop a typed version of Forth.
                 This thesis includes a theory for a ``type signature
                 algebra'' for the stack based argument passing method
                 used by Forth.\par

                 To support the use of multi-tasking we provide a
                 simple, but formal, theory of concurrent tasks based on
                 state machines that synchronise on events. This has a
                 graphical notation for people who are not familiar with
                 formal notations.\par

                 We also looked at how formalisms might be used to
                 define a semantic model for the Forth language and how
                 formalisms can help to define the relationship between
                 Forth's stack based virtual machine and register based
                 target processors.",
}

@Article{Kumar:1993:FHS,
  author =       "Sanjaya Kumar and James H. Aylor and Barry W. Johnson
                 and Wm. A. Wulf",
  title =        "A Framework for Hardware\slash Software Codesign",
  journal =      j-COMPUTER,
  volume =       "26",
  number =       "12",
  pages =        "39--45",
  month =        dec,
  year =         "1993",
  CODEN =        "CPTRB4",
  ISSN =         "0018-9162",
  bibdate =      "Mon Feb 3 07:28:57 MST 1997",
  bibsource =    "Compendex database",
  abstract =     "This article presents several codesign concepts,
                 including a. model for evaluating hardware/software
                 alternatives and an integrated hardware/software model
                 that supports representations at different levels of
                 detail.",
  acknowledgement = ack-nhfb,
  affiliation =  "Virginia Univ., Charlottesville, VA, USA",
  classification = "722; 723; C5210 (Logic design methods); C6110B
                 (Software engineering techniques); C7430 (Computer
                 engineering)",
  journalabr =   "Computer",
  keywords =     "Codesign exploration; Codesign methodology; Common
                 simulation environment; Computer hardware; Computer
                 software; Computers; Design; Hardware design; Hardware
                 software codesign; Hardware/software codesign;
                 Hardware/software tradeoffs; Interface modification;
                 Model continuity; Software design",
  thesaurus =    "Discrete event simulation; Logic design; Software
                 engineering; Virtual machines",
}

@InProceedings{Loyot:1993:VVM,
  author =       "E. C. {Loyot, Jr.} and A. S. Grimshaw",
  title =        "{VMPP}: a virtual machine for parallel processing",
  crossref =     "IEEE:1993:PSI",
  pages =        "735--740",
  year =         "1993",
  bibdate =      "Wed Apr 16 06:39:19 MDT 1997",
  acknowledgement = ack-nhfb,
  classification = "C6110P (Parallel programming); C6150C (Compilers,
                 interpreters and other processors); C7430 (Computer
                 engineering)",
  corpsource =   "Department of Comput. Sci., Virginia Univ.,
                 Charlottesville, VA, USA",
  keywords =     "front-end translators; parallel languages; parallel
                 processing; parallel source languages; portability;
                 program interpreters; software; virtual machine;
                 virtual machines; VMPP",
  sponsororg =   "IEEE Comput. Soc.; ACM Sigarch",
  treatment =    "P Practical",
}

@Article{Manning:1993:AAE,
  author =       "Serge M. Manning and David G. Meyer",
  title =        "Analysis of Asynchronous Execution Streams with
                 {I}-Caching in Massively Parallel Systems",
  journal =      j-J-PAR-DIST-COMP,
  volume =       "19",
  number =       "3",
  pages =        "279--291",
  month =        nov,
  year =         "1993",
  CODEN =        "JPDCER",
  DOI =          "http://dx.doi.org/10.1006/jpdc.1993.1112",
  ISSN =         "0743-7315",
  bibdate =      "Thu Mar 9 09:18:53 MST 2000",
  bibsource =    "http://www.idealibrary.com/servlet/useragent?func=showAllIssues&curIssueID=jpdc",
  URL =          "http://www.idealibrary.com/links/doi/10.1006/jpdc.1993.1112/production;
                 http://www.idealibrary.com/links/doi/10.1006/jpdc.1993.1112/production/pdf",
  acknowledgement = ack-nhfb,
  classification = "C5220P (Parallel architecture); C7430 (Computer
                 engineering)",
  corpsource =   "Sch. of Electr. Eng., Purdue Univ., West Lafayette,
                 IN, USA",
  keywords =     "asynchronous execution streams; buffer storage;
                 I-caching; instruction caching system; massively; mode;
                 multiprocessor simulation; parallel architectures;
                 parallel program execution; parallel systems; SIMD;
                 SPMD; virtual machines",
  treatment =    "P Practical; T Theoretical or Mathematical",
}

@TechReport{McHugh:1993:ILC,
  author =       "C. (Colm) McHugh and V. (Vinny) Cahill",
  title =        "Interfacing a language to the Commandos [ie. Comandos]
                 virtual machine",
  volume =       "TCD-CS-93-33",
  type =         "External technical reports",
  institution =  "Department of Computer Science, Trinity College",
  address =      "Dublin, Ireland",
  pages =        "23",
  year =         "1993",
  LCCN =         "95.B02502",
  bibdate =      "Mon Apr 10 10:43:15 MDT 2006",
  bibsource =    "library.ox.ac.uk:210/ADVANCE",
  acknowledgement = ack-nhfb,
  subject =      "Eiffel (Computer program language); Electronic data
                 processing; Distributed processing; Object-oriented
                 programming (Computer science)",
}

@InProceedings{Mzaik:1993:SPA,
  author =       "T. Mzaik and J. Jagadeesh",
  booktitle =    "National Aerospace and Electronics Conference. NAECON
                 1993",
  title =        "Simulation of pyramid architecture on the connection
                 machine and implementation of algorithms",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "838--44",
  year =         "1993",
  abstract =     "Many parallel architectures have been proposed to meet
                 the high computational requirement of image processing
                 and computer vision . SIMD pyramid architectures have
                 been proposed to efficiently implement several classes
                 of vision tasks such as multiresolution and
                 top-down/bottom up algorithms. In this paper, a pyramid
                 simulation environment implemented on the Connection
                 Machine (CM) is presented. Discussion of the mapping
                 scheme and the basic features of the simulator along
                 with implementation of several pyramid algorithms using
                 the simulator is presented.",
  keywords =     "pyramid architecture; connection machine; parallel
                 architectures; image processing; computer vision; SIMD;
                 multiresolution algorithm; top-down/bottom up
                 algorithms; pyramid simulation environment; mapping;
                 pyramid algorithms; Gaussian pyramid; Laplacian
                 pyramid; subband pyramid; pyramid search; segmentation
                 COMPUTER VISION; IMAGE SEGMENTATION; NEURAL NETS;
                 PARALLEL ALGORITHMS; PARALLEL ARCHITECTURES;
                 PROGRAMMING ENVIRONMENTS; VIRTUAL MACHINES",
}

@InProceedings{Poulsen:1993:ETP,
  author =       "David K. Poulsen and Pen-Chung Yew",
  title =        "Execution-Driven Tools for Parallel Simulation of
                 Parallel Architectures and Applications",
  crossref =     "IEEE:1993:PSP",
  pages =        "860--869",
  year =         "1993",
  bibdate =      "Wed Apr 15 12:04:03 MDT 1998",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliation =  "Univ of Illinois at Urbana-Champaign",
  affiliationaddress = "Urbana, IL, USA",
  classification = "723; 921.5; C5220P (Parallel architecture); C6150C
                 (Compilers, interpreters and other processors); C6150G
                 (Diagnostic, testing, debugging and evaluating
                 systems); C7430 (Computer engineering)",
  corpsource =   "Center for Supercomput. Res. and Dev., Illinois Univ.,
                 Urbana, IL, USA",
  keywords =     "Critical path simulation (CPS); EPG-sim;
                 execution-driven critical path simulation;
                 execution-driven simulations; Execution-driven tools;
                 intelligent source-level instrumentation; Intelligent
                 source-level instrumentation; optimistically
                 parallelized codes; Optimization; parallel application
                 codes; parallel applications; parallel architectures;
                 Parallel processing systems; parallelising compilers;
                 Parallelizing compilers; parallelizing compilers;
                 Program compilers; program compilers; software tools;
                 Source-level instrumentation; source-level
                 instrumentation; trace generation; virtual machines",
  sponsororg =   "IEEE; ACM SIGARCH",
  treatment =    "P Practical",
}

@TechReport{Ramsdell:1993:RVP,
  author =       "John D. Ramsdell",
  title =        "The Revised {VLISP} PreScheme Front End",
  institution =  "MITRE",
  pages =        "91",
  year =         "1993",
  URL =          "ftp://cs.indiana.edu/pub/scheme-repository/txt/vlisp/preschemerevised.dvi.Z",
  abstract =     "Verified programming Languaeg Implementation Project
                 developed a formally verified implementation of the
                 Scheme programming language. It used a systems
                 programming dialect of Scheme, called VLISP PreScheme
                 to program the VLISP Virtual Machine, a byte-code
                 interpreter. The original compiler only accepted
                 programs that specify iterative processes. This
                 document describes a revision of the language and its
                 compiler. The most important change is the compiler
                 provides a stack to save control information for
                 procedure calls so programs that specify recursive
                 processes are accepted. the revision expands the
                 systems programming tasks for which VLISP PreScheme can
                 be used and simplifies the task of matching an
                 algorithm with its code.",
  checked =      "19940101",
  email =        "ramsdell@mitre.org",
  source =       "URL",
}

@Article{Rong:1993:LMM,
  author =       "Tsai Shang Rong and Lian-Jou Tsai",
  title =        "A Logical Machine Monitor Supporting an Environment
                 for Development and Execution of Operating Systems",
  journal =      j-J-SYST-SOFTW,
  volume =       "21",
  number =       "1",
  pages =        "27--39",
  month =        apr,
  year =         "1993",
  CODEN =        "JSSODM",
  ISSN =         "0164-1212",
  bibdate =      "Wed Dec 16 08:24:49 MST 1998",
  abstract =     "The logical machine is an approach for designing and
                 developing operating systems. It partitions
                 conventional operating systems into two parts, the
                 logical machine operating system and the logical
                 machine monitor, which are responsible for user
                 services and system resource management, respectively.
                 The logical machine monitor provides a logical machine
                 interface for the logical machine operating system to
                 get the resources it needs. A logical machine monitor,
                 LMM386, has been successfully implemented to provide an
                 environment for the development and execution of a
                 logical machine operating systems (LMOS). Also, the
                 LMM386 introduces a tool for developing LMM386 itself
                 and the LMOS. This article discusses how to develop a
                 logical machine system on 80386 machines. An LMOS
                 derived from MINIX, executed in this environment, was
                 built to demonstrate the feasibility and merits of the
                 logical machine concept. By this approach, one can
                 easily monitor the behaviour of the LMOS. Furthermore,
                 by applying the concept in a distributed environment,
                 one can enhance the system capabilities, such as remote
                 disk mapping, disk replication and fault tolerance,
                 without changing the internal logic of the LMOS.",
  acknowledgement = ack-nhfb,
  affiliation =  "Department of Electr. Eng., Nat. Cheng-Kung Univ.,
                 Tainan, Taiwan",
  classification = "C6150J (Operating systems); C7430 (Computer
                 engineering)",
  keywords =     "80386 Machines; Disk replication; Distributed
                 environment; Fault tolerance; LMM386; Logical machine
                 monitor; Logical machine operating system; MINIX;
                 Remote disk mapping; System development; System
                 resource management; User services; Virtual machine",
  thesaurus =    "Operating systems [computers]; Virtual machines",
  xxauthor =     "Shang Rong Tsai and Lian-Jou Tsai",
}

@InProceedings{Sebes:1993:MAL,
  author =       "E. J. Sebes and T. C. Vickers-Benzel",
  title =        "Modularity of Assembly-Language Implementations of
                 Trusted Systems",
  crossref =     "Anonymous:1993:NCS",
  pages =        "173--184",
  year =         "1993",
  abstract =     "This paper presents an approach to assessing the
                 modularity of trusted systems that are implemented in
                 low-level languages. The approach presented is based on
                 experience gained from in-depth analyses of the
                 security features of such systems. The methods
                 described here are centered around defining analogs of
                 high-level language (HLL) constructs in low-level
                 language (LLL) implementations, so that similar
                 modularity interpretations can be applied. This paper
                 can serve to extend the findings of the NSA System
                 Architecture Working Group (SAWG) to the critical class
                 of complex trusted systems which require the use of
                 lower level implementation languages. Such LLL
                 modularity interpretations are essential to the
                 application of evaluation criteria to a broad range of
                 systems, including trusted systems for use in embedded
                 or real-time military applications, and mainframe
                 trusted system products such as OSs or Virtual Machine
                 Monitors. Many such systems must use a carefully
                 balanced approach to meeting requirements such as
                 reconfigurability, fault tolerance, and isolation-based
                 access control, while still satisfying modularity
                 requirements.",
  keywords =     "Trusted Systems, Evaluation Criteria, Modularity,
                 Assembly-Language, Software Analysis Techniques,
                 Software Development Techniques",
}

@TechReport{Simpkins:1993:AVM,
  author =       "N. K. Simpkins and G. Cruickshank and {P. E
                 International}",
  title =        "{ALEP-0 Virtual Machine extensions}",
  institution =  "CEC",
  year =         "1993",
}

@Article{Tsai:1993:LMM,
  author =       "Shang Rong Tsai and Lian-Jou Tsai",
  title =        "A logical machine monitor supporting an environment
                 for development and execution of operating systems",
  journal =      j-J-SYST-SOFTW,
  volume =       "21",
  number =       "1",
  pages =        "27--39",
  month =        apr,
  year =         "1993",
  CODEN =        "JSSODM",
  ISSN =         "0164-1212",
  bibdate =      "Mon Sep 30 17:00:16 MDT 1996",
  abstract =     "The logical machine is an approach for designing and
                 developing operating systems. It partitions
                 conventional operating systems into two parts, the
                 logical machine operating system and the logical
                 machine monitor, which are responsible for user
                 services and system resource management, respectively.
                 The logical machine monitor provides a logical machine
                 interface for the logical machine operating system to
                 get the resources it needs. A logical machine monitor,
                 LMM386, has been successfully implemented to provide an
                 environment for the development and execution of a
                 logical machine operating systems (LMOS). Also, the
                 LMM386 introduces a tool for developing LMM386 itself
                 and the LMOS. This article discusses how to develop a
                 logical machine system on 80386 machines. An LMOS
                 derived from MINIX, executed in this environment, was
                 built to demonstrate the feasibility and merits of the
                 logical machine concept. By this approach, one can
                 easily monitor the behaviour of the LMOS. Furthermore,
                 by applying the concept in a distributed environment,
                 one can enhance the system capabilities, such as remote
                 disk mapping, disk replication and fault tolerance,
                 without changing the internal logic of the LMOS.",
  acknowledgement = ack-nhfb,
  affiliation =  "Department of Electr. Eng., Nat. Cheng-Kung Univ.,
                 Tainan, Taiwan",
  classification = "C6150J (Operating systems); C7430 (Computer
                 engineering)",
  keywords =     "80386 Machines; Disk replication; Distributed
                 environment; Fault tolerance; LMM386; Logical machine
                 monitor; Logical machine operating system; MINIX;
                 Remote disk mapping; System development; System
                 resource management; User services; Virtual machine",
  thesaurus =    "Operating systems [computers]; Virtual machines",
}

@TechReport{Anonymous:1994:SAS,
  author =       "Anonymous",
  title =        "Software architecture standard for simulation virtual
                 machine: version 2.0",
  number =       "NASA CR-188291",
  institution =  "National Aeronautics and Space Administration",
  address =      "Washington, DC, USA",
  pages =        "????",
  year =         "1994",
  LCCN =         "NAS 1.26:188291",
  bibdate =      "Mon Apr 10 10:43:28 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  series =       "NASA contractor report",
  acknowledgement = ack-nhfb,
  remark =       "Shipping list number 94-0856-M.",
  subject =      "ADA (programming language).; Computer programming.;
                 Computerized simulation.; Maintenance.; Real time
                 operation.; Software engineering.; Standards",
}

@Article{Argade:1994:TMR,
  author =       "Pramod V. Argade and David K. Charles and Craig
                 Taylor",
  title =        "A technique for monitoring run-time dynamics of an
                 operating system and a microprocessor executing user
                 applications",
  journal =      j-SIGPLAN,
  volume =       "29",
  number =       "11",
  pages =        "122--131",
  month =        nov,
  year =         "1994",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:16:57 MST 2003",
  bibsource =    "http://www.acm.org/pubs/toc/; http://portal.acm.org/;
                 http://www.acm.org/pubs/toc/",
  URL =          "http://www.acm.org:80/pubs/citations/proceedings/asplos/195473/p122-argade/",
  abstract =     "In this paper, we present a non-invasive and efficient
                 technique for simulating applications complete with
                 their operating system interaction. The technique
                 involves booting and initiating an application on a
                 hardware development system, capturing the entire state
                 of the application and the microprocessor at a well
                 defined point in execution and then simulating the
                 application on microprocessor simulators. Extensive
                 statistics generated from the simulators on run-time
                 dynamics of the application, the operating system as
                 well as the microprocessor enabled us to tune the
                 operating system and the microprocessor architecture
                 and implementation. The results also enabled us to
                 optimize system level design choices by
                 anticipating/predicting the performance of the target
                 system. Lastly, the results were used to adjust and
                 refocus the evolution of the architecture of both the
                 operating system and the microprocessor.",
  acknowledgement = ack-nhfb,
  classification = "C5430 (Microcomputers); C5470 (Performance
                 evaluation and testing); C6150G (Diagnostic, testing,
                 debugging and evaluating systems); C6150J (Operating
                 systems)",
  conflocation = "San Jose, CA, USA; 4--7 Oct. 1994",
  conftitle =    "Sixth International Conference on Architectural
                 Support for Programming Languages and Operating Systems
                 (ASPLOS-VI)",
  corpsource =   "AT and T Bell Labs., Allentown, PA, USA",
  keywords =     "application simulation; computer architecture; design;
                 hardware development system; measurement;
                 microcomputers; microprocessor; microprocessor
                 architecture; microprocessor simulators; operating
                 system; operating system interaction; operating systems
                 (computers); performance; performance evaluation;
                 reliability; run-time dynamics; run-time dynamics
                 monitoring; statistics; system level design; system
                 monitoring; theory; user applications; virtual machines
                 virtual machines",
  sponsororg =   "ACM; IEEE Comput. Soc",
  subject =      "{\bf D.4.8} Software, OPERATING SYSTEMS, Performance,
                 Monitors. {\bf D.4.8} Software, OPERATING SYSTEMS,
                 Performance, Modeling and prediction. {\bf C.0}
                 Computer Systems Organization, GENERAL, Instruction set
                 design. {\bf C.4} Computer Systems Organization,
                 PERFORMANCE OF SYSTEMS.",
  treatment =    "P Practical",
}

@InProceedings{Beletsky:1994:OPV,
  author =       "V. Beletsky and T. Popova and A. Chemeris",
  title =        "Organization of a parallel virtual machine",
  crossref =     "Horiguchi:1994:ISP",
  pages =        "421--426",
  year =         "1994",
  bibdate =      "Wed Apr 16 06:39:19 MDT 1997",
  acknowledgement = ack-nhfb,
  classification = "C5220P (Parallel architecture); C5440
                 (Multiprocessing systems); C6150N (Distributed systems
                 software); C7430 (Computer engineering)",
  corpsource =   "Lab. of Parallel Comput., Acad. of Sci., Kiev,
                 Ukraine",
  keywords =     "compilers; dependence graph building; loop
                 parallelization; parallel architectures; parallel
                 machines; parallel virtual machine organization;
                 processor; program compilers; scheduling; scheduling
                 job programs; simulating programs; simulation; virtual
                 machines",
  sponsororg =   "Japan Advanced Inst. Sci. and Technol.; IEEE Comput.
                 Soc.; IEEE Comput. Soc. Tech. Committee on Comput.
                 Archit.; IEEE Comput. Soc. Tech. Committee on Parallel
                 Process.; IPSJ Tech. Committee on Algorithms; IPSJ
                 Tech. Committee on Comput. Archit.; IEICE Tech.
                 Committee on Comput. Syst",
  treatment =    "P Practical",
}

@Article{Bershad:1994:ACM,
  author =       "Brian N. Bershad and Dennis Lee and Theodore H. Romer
                 and J. Bradley Chen",
  title =        "Avoiding conflict misses dynamically in large
                 direct-mapped caches",
  journal =      j-SIGPLAN,
  volume =       "29",
  number =       "11",
  pages =        "158--170",
  month =        nov,
  year =         "1994",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:16:57 MST 2003",
  bibsource =    "http://www.acm.org/pubs/toc/; http://portal.acm.org/;
                 http://www.acm.org/pubs/toc/",
  URL =          "http://www.acm.org:80/pubs/citations/proceedings/asplos/195473/p158-bershad/",
  abstract =     "This paper describes a method for improving the
                 performance of a large direct-mapped cache by reducing
                 the number of conflict misses. Our solution consists of
                 two components: an inexpensive hardware device called a
                 Cache Miss Lookaside (CML) buffer that detects
                 conflicts by recording and summarizing a history of
                 cache misses, and a software policy within the
                 operating system's virtual memory system that removes
                 conflicts by dynamically remapping pages whenever large
                 numbers of conflict misses are detected. Using
                 trace-driven simulation of applications and the
                 operating system, we show that a CML buffer enables a
                 large direct-mapped cache to perform nearly as well as
                 a two-way set associative cache of equivalent size and
                 speed, although with lower hardware cost and
                 complexity.",
  acknowledgement = ack-nhfb,
  classification = "C5320G (Semiconductor storage); C5470 (Performance
                 evaluation and testing); C6120 (File organisation);
                 C6150J (Operating systems)",
  conflocation = "San Jose, CA, USA; 4--7 Oct. 1994",
  conftitle =    "Sixth International Conference on Architectural
                 Support for Programming Languages and Operating Systems
                 (ASPLOS-VI)",
  corpsource =   "Department of Comput. Sci. and Eng., Washington Univ.,
                 Seattle, WA, USA",
  keywords =     "associative cache; Cache Miss Lookaside buffer; cache
                 performance; cache storage; CML buffer; complexity;
                 conflict detection; conflict misses; design; hardware
                 cost; hardware device; large direct-mapped cache; large
                 direct-mapped caches; measurement; operating system;
                 operating systems (computers); performance; performance
                 evaluation; software policy; theory; trace-driven
                 simulation; virtual machines; virtual memory system;
                 virtual storage",
  sponsororg =   "ACM; IEEE Comput. Soc",
  subject =      "{\bf B.3.2} Hardware, MEMORY STRUCTURES, Design
                 Styles, Cache memories. {\bf D.4.2} Software, OPERATING
                 SYSTEMS, Storage Management. {\bf D.4.4} Software,
                 OPERATING SYSTEMS, Communications Management,
                 Buffering.",
  treatment =    "P Practical",
}

@MastersThesis{Biradar:1994:ADL,
  author =       "Umesh V. Biradar",
  title =        "Adaptive distributed load balancing model for parallel
                 virtual machine",
  type =         "Master of Science in Computer Science",
  school =       "Department of Computer Science, College of
                 Engineering, Lamar University",
  address =      "Beaumont, TX, USA",
  pages =        "viii + 44",
  year =         "1994",
  bibdate =      "Mon Jan 15 18:16:39 1996",
  acknowledgement = ack-nhfb,
  keywords =     "Distributed operating systems (Computers); Electronic
                 data processing --- Distributed processing.;
                 Multiprocessors; Parallel processing (Electronic
                 computers)",
}

@Article{Butt:1994:RDS,
  author =       "Farooq Butt",
  title =        "Rapid development of a source-level debugger for
                 {PowerPC} microprocessors",
  journal =      j-SIGPLAN,
  volume =       "29",
  number =       "12",
  pages =        "73--77",
  month =        dec,
  year =         "1994",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Sun Dec 14 09:16:58 MST 2003",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  classification = "C5130 (Microprocessor chips); C6115 (Programming
                 support); C6140B (Machine-oriented languages); C6150C
                 (Compilers, interpreters and other processors); C6150G
                 (Diagnostic, testing, debugging and evaluating
                 systems)",
  corpsource =   "Compiler and Tools Group, RISC Software Group, Austin,
                 TX, USA",
  keywords =     "compile-edit-debug environment; design cycle times;
                 emergent microprocessors; gdb; instruction sets;
                 microprocessor chips; Motorola PowerPC 601
                 microprocessor; Motorola PowerPC 603 microprocessor;
                 PowerPC instruction set; PowerPC microprocessors;
                 program compilers; program debugging; rapid
                 development; software microprocessor simulator;
                 software tools; software-development environment;
                 source-level debugger; virtual machines",
  treatment =    "P Practical",
}

@InProceedings{Damodaran-Kamal:1994:TRP,
  author =       "S. K. Damodaran-Kamal and J. M. Francioni",
  title =        "Testing races in parallel programs with an {OtOt}
                 strategy",
  crossref =     "Ostrand:1994:PIS",
  journal =      j-ACM-SIGSOFT,
  year =         "1994",
  CODEN =        "SFENDP",
  ISSN =         "0163-5948",
  bibdate =      "Sun Dec 22 10:18:08 MST 1996",
  acknowledgement = ack-nhfb,
  affiliation =  "Department of Comput. Sci., Southwestern Louisiana
                 Univ., Lafayette, LA, USA",
  classification = "C4240P (Parallel programming and algorithm theory);
                 C6110P (Parallel programming); C6150G (Diagnostic,
                 testing, debugging and evaluating systems); C7430
                 (Computer engineering)",
  issue =        "spec. issue. p. 216-27",
  keywords =     "Concurrent programs; Controlled execution; Debugging
                 tool; Exponential complexity; General-purpose run-time
                 testing technique; Mdb; Nondeterminism;
                 One-thread-at-one-time strategy; OtOt strategy;
                 Parallel Virtual Machine; Polynomial time complexity;
                 Race conditions specification; Race detection; Race
                 expressions; Race testing; Unrestricted message passing
                 parallel programs",
  thesaurus =    "Computational complexity; Hazards and race conditions;
                 Message passing; Parallel programming; Program
                 debugging; Program testing; Virtual machines",
}

@Article{Dean:1994:CPV,
  author =       "C. E. Dean and R. C. Denny and P. C. Stephenson and G.
                 J. Milne and E. Pantos",
  title =        "Computing with parallel virtual machines",
  journal =      j-J-PHYS-IV-COLLOQUE,
  volume =       "4",
  number =       "C9",
  pages =        "C9/445--448",
  month =        nov,
  year =         "1994",
  CODEN =        "JPICEI",
  ISSN =         "1155-4339",
  bibdate =      "Sun Dec 22 10:20:45 MST 1996",
  acknowledgement = ack-nhfb,
  affiliation =  "SERC Daresbury Lab., Warrington, UK",
  classification = "C4240P (Parallel programming and algorithm theory);
                 C6110P (Parallel programming); C7320 (Physics and
                 chemistry computing)",
  keywords =     "64-Node Intel iPSC/860 hypercube; Computing elements;
                 CPU performance; DALAI; LSQINT; Parallel execution;
                 Parallel virtual machines; PATTERN; Processing time;
                 PROJECT; Single program multiple data; Synchrotron
                 radiation",
  thesaurus =    "Parallel programming; Physics computing; Synchrotron
                 radiation",
}

@Article{Erenyi:1994:IPA,
  author =       "I. Erenyi and Z. Fazekas",
  title =        "Image processing applications and their parallel
                 aspects",
  journal =      "Computing \& Control Engineering Journal",
  volume =       "5",
  number =       "2",
  pages =        "71--4",
  year =         "1994",
  abstract =     "Image processing activities at KFKI Research Institute
                 for Measurement and Computing Techniques are
                 summarised. First, KFKI's contribution to the VEGA
                 project is described. Then two HW/SW platforms are
                 mentioned (together with applications in intelligent
                 microscopy, industrial quality control). Finally, the
                 analysis/simulation of promising parallel
                 architectures-to achieve considerable speed-up for
                 image processing primitives-is outlined. This
                 inevitably involves the modification/parallelisation of
                 algorithms to exploit parallel capabilities of the
                 architectures.",
  keywords =     "image processing applications; parallel aspects; VEGA
                 project; HW/SW platforms; intelligent microscopy;
                 industrial quality control; analysis/simulation;
                 parallel architectures IMAGE PROCESSING; PARALLEL
                 ALGORITHMS; PARALLEL ARCHITECTURES; RESEARCH
                 INITIATIVES; VIRTUAL MACHINES",
}

@Manual{IBM:1994:CGN,
  author =       "{IBM}",
  title =        "Conversion guide and notebook for {VM\slash XA SP} and
                 {VM\slash ESA}, release 2.2: virtual machine",
  organization = "International Business Machines Corporation",
  address =      "1701 North St., Endicott 13760-5553 NY, USA",
  edition =      "Fifth",
  pages =        "1061",
  year =         "1994",
  LCCN =         "QA76.9.C68 C67 1994",
  bibdate =      "Mon Apr 10 10:43:48 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  note =         "Publication number SC24-5525-04.",
  acknowledgement = ack-nhfb,
  subject =      "Computer system conversion; Virtual computer systems;
                 Computer architecture",
}

@Article{Kelsey:1994:TSI,
  author =       "Richard A. Kelsey and Jonathan A. Rees",
  title =        "A Tractable {Scheme} Implementation",
  journal =      j-LISP-SYMB-COMPUT,
  volume =       "7",
  number =       "4",
  pages =        "315--335",
  month =        "????",
  year =         "1994",
  CODEN =        "LSCOEX",
  ISSN =         "0892-4635",
  bibdate =      "Fri Feb 12 08:11:22 MST 1999",
  bibsource =    "Compendex database",
  acknowledgement = ack-nhfb,
  affiliation =  "NEC Research Inst",
  classification = "721.1; 723.1; 723.1.1",
  journalabr =   "LISP Symb Comput",
  keywords =     "Byte code interpreters; Codes (symbols); Computational
                 complexity; Computer programming; Layered design; lisp
                 (programming language); Modularity; Partial evaluation;
                 Program compilers; Program interpreters; Scheme
                 programming language; Virtual machines; Virtual
                 reality",
}

@InProceedings{Muntean:1994:PGM,
  author =       "T. Muntean and A. Melo",
  title =        "{PAROS}: {A} Generic Multi Virtual Machines Parallel
                 Operating System",
  crossref =     "Joubert:1994:PCT",
  pages =        "319--328",
  year =         "1994",
}

@Manual{Sun:1995:JVMa,
  title =        "The {Java} Virtual Machine Specification",
  organization = "Sun Microsystems",
  edition =      "1.0 Beta",
  month =        aug,
  year =         "1995",
  URL =          "http://java.sun.com/doc/vmspec/VMSpec.ps",
  added-by =     "sti",
  annote =       "a virtual machine similar to UCSD p-code or smalltalk.
                 stack-machine. dynamic loading. direct support for
                 object orientation (e.g. virtual method calls)",
  keywords =     "java, virtual machine, bytecode",
}

@Manual{Sun:1995:JVMb,
  author =       "{Sun Microsystems}",
  key =          "JVMPI",
  title =        "{Java Virtual Machine Profiling Interface (JVMPI)}",
  organization = "Sun Microsystems",
  year =         "1995",
  note =         "http://java.sun.com/j2se/1.3/docs/guide/jvmpi/",
  URL =          "http://java.sun.com/j2se/1.3/docs/guide/jvmpi/",
  comment =      "Profiling interface for {J}ava",
}

@Article{Burnet:1996:PCP,
  author =       "Maxwell M. Burnet and Robert M. Supnik",
  title =        "Preserving computing's past: restoration and
                 simulation",
  journal =      j-DEC-TECH-J,
  volume =       "8",
  number =       "3",
  pages =        "23--38",
  month =        dec,
  year =         "1996",
  CODEN =        "DTJOEL",
  ISSN =         "0898-901X",
  bibdate =      "Sat Jul 16 18:53:33 2005",
  URL =          "ftp://ftp.digital.com/pub/Digital/info/DTJ/v8n3/Preserving_Computings_Past_R_07jan1997DTJN02P8.ps;
                 http://www.digital.com:80/info/DTJN02/DTJN02AH.HTM;
                 http://www.digital.com:80/info/DTJN02/DTJN02HM.HTM;
                 http://www.digital.com:80/info/DTJN02/DTJN02SC.TXT;
                 http://www.digital.com:80/info/DTJN02/DTJN02P8.PS;
                 http://www.digital.com:80/info/DTJN02/DTJN02PF.PDF;
                 http://artematrix.org/archive/computer/restoration.simulation.htm;
                 http://simh.trailing-edge.com/docs/dtjn02pf.pdf",
  abstract =     "Restoration and simulation are two techniques for
                 preserving computing systems of historical interest. In
                 computer restoration, historical systems are returned
                 to working condition through repair of broken
                 electrical and mechanical subsystems, if necessary
                 substituting current parts for the original ones. In
                 computer simulation, historical systems are re-created
                 as software programs on current computer systems. In
                 each case, the operating environment of the original
                 system is presented to a modern user for inspection or
                 analysis. This differs with computer conservation,
                 which preserves historical systems in their current
                 state, usually one of disrepair. The authors argue that
                 an understanding of computing's past is vital to
                 understanding its future, and thus that restoration,
                 rather than just conservation, of historic systems is
                 an important activity for computer technologists.",
  acknowledgement = ack-nhfb,
  classcodes =   "C0200 (General computer topics); C7430 (Computer
                 engineering)",
  keywords =     "computer restoration; computer simulation; computing's
                 past; digital computers; historical interest; history;
                 machines; maintenance engineering; virtual; working
                 condition; SIMH (virtual machine)",
  treatment =    "P Practical",
}

@Article{Ford:1996:MMR,
  author =       "Bryan Ford and Mike Hibler and Jay Lepreau and Patrick
                 Tullmann and Godmar Back and Stephen Clawson",
  title =        "Microkernels meet recursive virtual machines",
  journal =      j-OPER-SYS-REV,
  volume =       "30",
  number =       "SI",
  pages =        "137--151",
  month =        oct,
  year =         "1996",
  CODEN =        "OSRED8",
  ISSN =         "0163-5980",
  bibdate =      "Sat Aug 26 08:55:58 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Manual{IBM:1996:CAM,
  author =       "{IBM}",
  title =        "{CMS} application multitasking, version 2, release
                 2.0: virtual machine",
  organization = "International Business Machines Corporation",
  address =      "1701 North St., Enicott 13760-5553, NY, USA",
  edition =      "Second",
  pages =        "xiv + 380",
  year =         "1996",
  LCCN =         "QA76.58 .C59 1996",
  bibdate =      "Mon Apr 10 10:43:48 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  note =         "Publication number SC24-5766-01.",
  acknowledgement = ack-nhfb,
  subject =      "Parallel processing (Electronic computers);
                 Multitasking (Computer science); CMS (Computer file)",
}

@Book{Anonymous:1997:JVM,
  author =       "Anonymous",
  title =        "{Java Virtual Machine} unleashed",
  publisher =    pub-SAMS,
  address =      pub-SAMS:adr,
  pages =        "????",
  year =         "1997",
  ISBN =         "1-57521-247-1 (paperback)",
  ISBN-13 =      "978-1-57521-247-0 (paperback)",
  LCCN =         "9710 BOOK NOT YET IN LC",
  bibdate =      "Mon Apr 10 10:43:48 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
}

@MastersThesis{Cladingboel:1997:RJV,
  author =       "Christopher Cladingboel",
  title =        "Real {Java Virtual Machines}: Hardware Compilation and
                 the {Java Virtual Machine}",
  type =         "Thesis ({M.Sc.})",
  school =       "Board of the Faculty of Mathematical Sciences, Oxford
                 University",
  address =      "Oxford, UK",
  pages =        "107",
  year =         "1997",
  bibdate =      "Mon Apr 10 11:07:23 2006",
  acknowledgement = ack-nhfb,
}

@Book{Lindholm:1997:JVM,
  author =       "Tim Lindholm and Frank Yellin",
  title =        "The {Java} Virtual Machine Specification",
  publisher =    pub-AW,
  address =      pub-AW:adr,
  pages =        "xvi + 475",
  year =         "1997",
  ISBN =         "0-201-63452-X",
  ISBN-13 =      "978-0-201-63452-5",
  LCCN =         "QA76.73.J38L56 1997",
  bibdate =      "Tue Mar 04 15:04:45 1997",
  price =        "US\$36.53",
  series =       "The Java Series",
  URL =          "http://www.aw.com/cp/javaseries.html",
  acknowledgement = ack-nhfb,
  keywords =     "Internet (Computer network); Java (Computer program
                 language); Java (computer program language);
                 programming languages (electronic computers); systems;
                 virtual computer; Virtual computer systems",
  lccnalt =      "96-015897",
  tableofcontents = "1. Introduction\\
                 2. Java Concepts\\
                 3. Structure of the Java Virtual Machine\\
                 4. The class File Format\\
                 5. Constant Pool Resolution\\
                 6. Java Virtual Machine Instruction Set\\
                 7. Compiling for the Java Virtual Machine\\
                 8. Threads and Locks\\
                 9. An Optimization \\
                 10. Opcode Mnemonics by Opcode",
}

@Manual{Lucent:1997:LPL,
  title =        "The {L}imbo Programming Language",
  organization = "Lucent Technologies Inc",
  year =         "1997",
  URL =          "http://inferno.lucent.com/inferno/",
  abstract =     "Limbo is a programming language intended for
                 applications running distributed systems on small
                 computers. It supports modular programming, strong type
                 checking at compile- and run-time, interprocess
                 communication over typed channels, automatic garbage
                 collection, and simple abstract data types. It is
                 designed for safe execution even on small machines
                 without hardware memory protection. In its initial
                 implementation for the Inferno operating system, object
                 programs generated by the Limbo compiler run using an
                 interpreter for a fixed virtual machine. Inferno and
                 its accompanying virtual machine run either stand-alone
                 on bare hardware or as an application under
                 conventional operating systems like Unix, Windows 95,
                 Windows NT, and Plan 9. For several architectures,
                 including Intel x86 and MIPS, Limbo object programs are
                 transformed on-the-fly into instructions for the
                 underlying hardware.",
}

@Book{Meyer:1997:JVM,
  author =       "Jon Meyer and Troy Downing",
  title =        "{Java} Virtual Machine",
  publisher =    pub-ORA,
  address =      pub-ORA:adr,
  pages =        "xxiv + 426",
  month =        feb,
  year =         "1997",
  ISBN =         "1-56592-194-1",
  ISBN-13 =      "978-1-56592-194-8",
  LCCN =         "QA76.73.J38 M49 1997",
  bibdate =      "Mon Apr 18 14:52:22 MDT 2005",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  price =        "US\$32.95",
  series =       "The Java series",
  URL =          "http://www.oreilly.com/catalog/javavm;
                 http://www.ora.com/www/item/javavm.html",
  acknowledgement = ack-nhfb,
  keywords =     "computer systems; Java (computer program language);
                 technology -- computers and computer technology;
                 virtual",
  subject =      "Java (Computer program language); Java virtual
                 machine",
}

@Manual{Sun:1997:JCL,
  title =        "{Java Card 2.0} Language Subset and Virtual Machine
                 Specification",
  organization = "{SUN} Microsystems, Inc.",
  address =      "Palo Alto/CA",
  edition =      "Revision 1.0 Final",
  day =          "13",
  month =        oct,
  year =         "1997",
  URL =          "ftp://ftp.javasoft.com/docs/javacard/JC20-Language.pdf",
  added-at =     "Mon Oct 12 17:29:42 1998",
  added-by =     "gka",
}

@Book{Venners:1997:IJV,
  author =       "Bill Venners",
  title =        "Inside the {Java} Virtual Machine",
  publisher =    pub-MCGRAW-HILL,
  address =      pub-MCGRAW-HILL:adr,
  pages =        "384",
  month =        nov,
  year =         "1997",
  ISBN =         "0-07-913248-0",
  ISBN-13 =      "978-0-07-913248-2",
  LCCN =         "QA76.73.J38 V46 1998",
  bibdate =      "Wed Jun 17 22:05:06 MDT 1998",
  bibsource =    "http://www.javaworld.com/javaworld/books/jw-books-alphabytitle.html;
                 http://www.mcgraw-hill.com/",
  price =        "US\$39.95",
  URL =          "http://mcgraw-hill.inforonics.com/cgi/getarec?mgh31406%comp",
  acknowledgement = ack-nhfb,
}

@Article{McGhan:1998:CPP,
  author =       "Harlan McGhan and Mike O'Connor",
  title =        "Computing Practices: {PicoJava}: {A} Direct Execution
                 Engine For {Java} Bytecode",
  journal =      j-COMPUTER,
  volume =       "31",
  number =       "10",
  pages =        "22--30",
  month =        oct,
  year =         "1998",
  CODEN =        "CPTRB4",
  ISSN =         "0018-9162",
  bibdate =      "Tue Oct 6 18:50:08 MDT 1998",
  URL =          "http://www.computer.org/computer/co1998/rx022abs.htm;
                 http://dlib.computer.org/co/books/co1998/pdf/rx022.pdf",
  acknowledgement = ack-nhfb,
}

@Book{Miller:1998:VMB,
  author =       "Gregory R. Miller and Stephen C. Cooper",
  title =        "Visual mechanics: beams and stress states",
  publisher =    "PWS Publishing Company",
  address =      "Boston, MA, USA",
  pages =        "x + 149",
  year =         "1998",
  ISBN =         "0-534-95587-8",
  ISBN-13 =      "978-0-534-95587-8",
  LCCN =         "TA660.B4 M55 1998",
  bibdate =      "Mon Apr 10 10:43:48 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  subject =      "Girders; Mathematical models; Data processing;
                 Structural analysis (Engineering); Strains and
                 stresses; Java virtual machine",
}

@TechReport{Taivalsaari:1998:IJV,
  author =       "Antero Taivalsaari",
  title =        "Implementing a {Java Virtual Machine} in the {Java}
                 programming language",
  volume =       "98-64",
  institution =  "Sun Microsystems",
  address =      "Palo Alto, CA, USA",
  pages =        "23",
  month =        mar,
  year =         "1998",
  LCCN =         "QA76.8.S86.S65",
  bibdate =      "Mon Apr 10 10:43:19 MDT 2006",
  bibsource =    "library.mit.edu:9909/mit01",
  series =       "SMLI TR",
  abstract =     "JavaInJava is a Java virtual machine written in the
                 Java programming language. The system was built at Sun
                 Microsystems Laboratories in order to examine the
                 feasibility of constructing high-quality virtual
                 machines using the Java programming language and to
                 experiment with new virtual machine implementation
                 techniques. In this paper we describe the overall
                 architecture of JavaInJava and summarize a number of
                 interesting technical issues that were encountered
                 during its implementation.",
  acknowledgement = ack-nhfb,
  subject =      "Java (Computer program language); Virtual computer
                 systems",
}

@Article{Westley:1998:WJA,
  author =       "Terry J. Westley",
  title =        "Writing {Java} applets in {Ada}: {A} beginner's
                 guide",
  journal =      j-ADA-USER-J,
  volume =       "19",
  number =       "1",
  pages =        "57--82",
  month =        apr,
  year =         "1998",
  CODEN =        "AUJOET",
  ISSN =         "0268-652X",
  bibdate =      "Sat Oct 10 15:17:00 MDT 1998",
  bibsource =    "Compendex database;
                 http://www.adauk.org.uk/pubs/jvol19_1.htm",
  acknowledgement = ack-nhfb,
  classification = "722.4; 723.1; 723.1.1; 723.5",
  journalabr =   "Ada User J",
  keywords =     "Ada (programming language); C (programming language);
                 Computer simulation; Computer systems programming; Java
                 virtual machine (jvm); Object oriented programming;
                 Response time (computer systems)",
}

@MastersThesis{Coffing:1999:XPM,
  author =       "Charles L. Coffing",
  title =        "An x86 protected mode virtual machine monitor for the
                 {MIT} exokernel",
  type =         "Thesis ({S.B. and M.Eng.})",
  school =       "Department of Electrical Engineering and Computer
                 Science, Massachusetts Institute of Technology",
  address =      "Cambridge, MA, USA",
  pages =        "109",
  year =         "1999",
  LCCN =         "Thesis",
  bibdate =      "Mon Apr 10 10:43:19 MDT 2006",
  bibsource =    "library.mit.edu:9909/mit01",
  note =         "Supervised by M. Frans Kaashoek.",
  acknowledgement = ack-nhfb,
}

@Book{Engel:1999:PJV,
  author =       "Joshua Engel",
  title =        "Programming for the {Java Virtual Machine}",
  publisher =    pub-AW,
  address =      pub-AW:adr,
  pages =        "xix + 488",
  year =         "1999",
  ISBN =         "0-201-30972-6 , 0-201-61654-8 (CD-ROM)",
  ISBN-13 =      "978-0-201-30972-0, 978-0-201-61654-5 (CD-ROM)",
  LCCN =         "QA76.73.J38E543 1999",
  bibdate =      "Tue May 11 08:13:32 1999",
  price =        "US\$39.95",
  acknowledgement = ack-nhfb,
  subject =      "Java (Computer program language); Java Virtual
                 Machine",
}

@TechReport{Lewis:1999:EBP,
  author =       "Brian T. Lewis and Bernd Mathiske",
  title =        "Efficient barriers for persistent object caching in a
                 high-performance Java virtual machine",
  volume =       "99-81",
  institution =  "Sun Microsystems",
  address =      "Palo Alto, CA, USA",
  pages =        "9",
  month =        dec,
  year =         "1999",
  LCCN =         "QA76.8.S86.S65",
  bibdate =      "Mon Apr 10 10:43:19 MDT 2006",
  bibsource =    "library.mit.edu:9909/mit01",
  series =       "SMLI TR",
  abstract =     "We implemented orthogonal persistence for the Java
                 platform by adding persistent object caching to a
                 high-performance virtual machine that uses exact
                 garbage collection, the Sun Microsystems Laboratories
                 Virtual Machine for Research (`ResearchVM'). This paper
                 gives an overview of our design for the read and write
                 barriers needed to support persistence. The key design
                 decision we made was the choice of a pointer swizzling
                 strategy. Pointer swizzling speeds up programs by
                 translating persistent addresses (references to
                 persistent objects on disk) into normal virtual memory
                 addresses in the object cache. The swizzling technique
                 we chose is simple (requires few source changes to the
                 ResearchVM) and performs well (adds acceptably low CPU
                 overhead to the ResearchVM). Our integration of the new
                 barriers was considerably simplified by an internal
                 memory interface that the ResearchVM consistently uses,
                 except in its Just-In-Time (JIT) compiler, to access
                 program runtime values. Our new persistent version of
                 the ResearchVM, the PEVM, requires just 30\% of the
                 changes necessary in our previous persistent virtual
                 machine implementations. It executes programs with only
                 modest runtime overhead (typically 10--20\%) compared
                 to an unchanged ResearchVM.",
  acknowledgement = ack-nhfb,
  subject =      "Java (Computer program language); Virtual computer
                 systems; Object-oriented databases",
}

@Book{Lindholm:1999:JVM,
  author =       "Tim Lindholm and Frank Yellin",
  title =        "The {Java Virtual Machine} Specification",
  publisher =    pub-AW,
  address =      pub-AW:adr,
  edition =      "Second",
  pages =        "xv + 473",
  year =         "1999",
  ISBN =         "0-201-43294-3",
  ISBN-13 =      "978-0-201-43294-7",
  LCCN =         "QA76.73.J38L56 1999",
  bibdate =      "Tue May 11 07:30:11 1999",
  price =        "US\$42.95",
  acknowledgement = ack-nhfb,
}

@Article{Sirer:1999:DID,
  author =       "Emin G{\"u}n Sirer and Robert Grimm and Arthur J.
                 Gregory and Brian N. Bershad",
  title =        "Design and implementation of a distributed virtual
                 machine for networked computers",
  journal =      j-OPER-SYS-REV,
  volume =       "33",
  number =       "5",
  pages =        "202--216",
  month =        dec,
  year =         "1999",
  CODEN =        "OSRED8",
  ISSN =         "0163-5980",
  bibdate =      "Sat Aug 26 08:55:55 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Manual{Sun:1999:JCV,
  key =          "JCVM",
  title =        "{Java Card} 2.1 Virtual Machine Specification",
  organization = "{SUN} Microsystems, Inc.",
  day =          "3",
  month =        mar,
  year =         "1999",
  note =         "Final Revision 1.0",
  added-at =     "Fri Jan 15 10:34:37 1999",
  added-by =     "gka",
}

@Manual{Sun:1999:JPD,
  author =       "{Sun Microsystems}",
  key =          "JPDA",
  title =        "{Java Platform Debugger Architecture (JPDA)}",
  organization = "Sun Microsystems",
  address =      "Mountain View, CA, USA",
  year =         "1999",
  URL =          "http://java.sun.com/j2se/1.3/docs/guide/jpda/",
  comment =      "Debugger architecture for {J}ava. Includes: Java
                 Virtual Machine Debugger Interface (JVMDI) which
                 defines the services a VM must provide for debugging;
                 Java Debug Wire Protocol (JDWP) which defines the
                 format of information and requests transferred between
                 the process being debugged and the debugger front end
                 that implements the Java Debug Interface (JDI) which
                 defines information and requests at the user code
                 level",
}

@Book{Venners:1999:IJV,
  author =       "Bill Venners",
  title =        "Inside the {Java Virtual Machine}",
  publisher =    pub-MCGRAW-HILL,
  address =      pub-MCGRAW-HILL:adr,
  edition =      "Second",
  pages =        "xxxi + 703",
  year =         "1999",
  ISBN =         "0-07-135093-4",
  ISBN-13 =      "978-0-07-135093-8",
  LCCN =         "QA76.73.J38 V46 1999",
  bibdate =      "Thu Mar 23 07:01:27 MST 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/description/mh024/00269375.html",
  acknowledgement = ack-nhfb,
  subject =      "Java (Computer program language); Java Virtual
                 Machine",
}

@InProceedings{Waldron:1999:AVM,
  author =       "John Waldron and Owen Harrison",
  title =        "Analysis of Virtual Machine Stack Frame Usage by
                 {Java} Methods",
  crossref =     "Anonymous:1999:PII",
  pages =        "271--274",
  year =         "1999",
  bibdate =      "Tue Oct 24 10:29:21 2006",
  acknowledgement = ack-nhfb,
}

@Article{Walters:1999:VVP,
  author =       "Brian Walters",
  title =        "{VMware} Virtual Platform",
  journal =      j-LINUX-J,
  volume =       "63",
  pages =        "??--??",
  month =        jul,
  year =         "1999",
  CODEN =        "LIJOFX",
  ISSN =         "1075-3583",
  bibdate =      "Thu Sep 21 07:44:10 MDT 2000",
  bibsource =    "http://noframes.linuxjournal.com/lj-issues/issue63/index.html",
  URL =          "http://noframes.linuxjournal.com/lj-issues/3458.html",
  acknowledgement = ack-nhfb,
}

@TechReport{Wolczko:1999:UTJ,
  author =       "M. Wolczko",
  title =        "Using a {Tracing Java Virtual Machine} to gather data
                 on the behavior of {Java} programs",
  institution =  "Sun Microsystems, Inc.",
  address =      "Menlo Park, CA, USA",
  pages =        "????",
  year =         "1999",
  bibdate =      "Tue Oct 24 10:30:38 2006",
  URL =          "http://research.sun.com/people/mario/tracing-jvm/",
  acknowledgement = ack-nhfb,
}

@Article{Anonymous:2000:AJV,
  author =       "Anonymous",
  title =        "Announcement: {{\em Java Virtual Machine Research and
                 Technology Symposium (JVM '01)}}",
  journal =      j-LOGIN,
  volume =       "25",
  number =       "3",
  pages =        "??--??",
  month =        jun,
  year =         "2000",
  CODEN =        "LOGNEM",
  ISSN =         "1044-6397",
  bibdate =      "Tue Apr 11 06:42:33 MDT 2006",
  bibsource =    "http://www.usenix.org/publications/login/2000-6/index.html",
  URL =          "http://www.usenix.org/events/jvm01",
  acknowledgement = ack-nhfb,
}

@MastersThesis{Caamano:2000:PJS,
  author =       "Paul Caamano",
  title =        "Porting a {Java Virtual Machine} to an embedded
                 system",
  type =         "Thesis (M.S.)",
  school =       "Department of Computer Science, University of
                 California, Santa Cruz",
  address =      "Santa Cruz, CA, USA",
  pages =        "viii + 56",
  year =         "2000",
  LCCN =         "QA76.73.J38 C33 2000",
  bibdate =      "Mon Apr 10 11:18:00 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  acknowledgement = ack-nhfb,
  subject =      "Java (Computer program language); Virtual computer
                 systems; Embedded computer systems",
}

@Book{Compton:2000:VLB,
  author =       "Jason Compton",
  title =        "{VMware 2} for {Linux}: [a better way to run multiple
                 operating systems on {Linux}]",
  publisher =    "Prima Tech",
  address =      "Rocklin, CA, USA",
  pages =        "xxii + 406",
  year =         "2000",
  ISBN =         "0-7615-2764-8",
  ISBN-13 =      "978-0-7615-2764-0",
  LCCN =         "QA76.76.O63 C656 2000",
  bibdate =      "Sun Apr 9 15:43:22 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  subject =      "Linux; Operating systems (Computers); Virtual computer
                 systems",
}

@TechReport{Crookston:2000:VCM,
  author =       "Newell W. Crookston and Brian Whipple and William J.
                 Grenney",
  title =        "Virtual {C} machine and integrated development
                 environment for {ATMS} controllers",
  number =       "00-109",
  institution =  "Utah Department of Transportation",
  address =      "Salt Lake City, UT, USA",
  pages =        "23",
  month =        apr,
  year =         "2000",
  LCCN =         "QA76.9.V5 .C76 2000",
  bibdate =      "Mon Apr 10 10:43:28 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  series =       "MPC report",
  acknowledgement = ack-nhfb,
  remark =       "Performed for the Mountain Plains Consortium..
                 Sponsored by U.S. Department of Transportation
                 University Transportation Centers Program",
  subject =      "Virtual computer systems; Utah; Digital control
                 systems; Intelligent Vehicle Highway Systems; Traffic
                 engineering; advanced traffic management systems",
}

@Book{Klappheck:2000:BLE,
  author =       "G{\"u}nther Klappheck and Peter Glinsky and Frank
                 Gehrke",
  title =        "{Das Buch --- LINUX Edition 2000: [jetzt zur S.u.S.E.
                 6.4, Installation und Bedienung von LINUX und seinen
                 Werkzeugen, LINUX im Netzwerk und Internet, LINUX und
                 ISDN, der Desktop KDE 1.x, VMware unter LINUX]}",
  publisher =    "Sybex",
  address =      "D{\"u}sseldorf, Germany",
  pages =        "xxviii + 906",
  year =         "2000",
  ISBN =         "3-8155-0175-X",
  ISBN-13 =      "978-3-8155-0175-7",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 17:21:53 MDT 2006",
  bibsource =    "z3950.gbv.de:20011/gvk",
  price =        "DM 69.95",
  acknowledgement = ack-nhfb,
  language =     "German",
  remark =       "CD 1 enth.: S.u.S.E. 6.4 Evaluation version; CD 2
                 enth.: Linux-Tools. $5 GBV.. Nebent.: Linux - Das Buch,
                 Edition 2000 $5 GBV.",
  subject =      "SuSE LINUX 6.4",
}

@TechReport{Lewis:2000:APH,
  author =       "Brian T. Lewis and Bernd Mathiske and Neal M. Gafter",
  title =        "Architecture of the {PEVM}: a high-performance
                 orthogonally persistent {Java Virtual Machine}",
  number =       "2000-93",
  institution =  "Sun Microsystems",
  address =      "Palo Alto, CA, USA",
  pages =        "19",
  month =        oct,
  year =         "2000",
  LCCN =         "QA76.8.S86.S65",
  bibdate =      "Mon Apr 10 10:43:19 MDT 2006",
  bibsource =    "library.mit.edu:9909/mit01",
  series =       "SMLI TR",
  abstract =     "This paper describes the design and implementation of
                 the PEVM, a new scalable, high-performance
                 implementation of orthogonal persistence for the Java
                 platform (OPJ). The PEVM is based on the Sun
                 Microsystems Laboratories Virtual Machine for Research
                 (ResearchVM), which features an optimizing Just-In-Time
                 compiler, exact generational garbage collection, and
                 fast thread synchronization. It also uses a new,
                 scalable persistent object store designed to manage
                 more than 80GB of objects. The PEVM is approximately
                 ten times faster than previous OPJ implementations and
                 can run significantly larger programs. It is faster
                 than or comparable in performance to several commercial
                 persistence solutions for the Java platform. Despite
                 the PEVM's speed and scalability, its implementation is
                 simpler than our previous OPJ implementation (e.g.,
                 just 43\% of the VM source patches needed by our
                 previous OPJ implementation). Its speed and simplicity
                 are largely due to our pointer swizzling strategy, the
                 ResearchVM's exact memory management, and a few simple
                 but effective mechanisms. For example, we implement
                 some key data structures in the Java programming
                 language since this automatically makes them
                 persistent.",
  acknowledgement = ack-nhfb,
  subject =      "Operating systems (Computers); Java (Computer program
                 language); Computer architecture",
}

@InProceedings{Li:2000:UCS,
  author =       "Tao Li and Lizy Kurian John and Vijaykrishnan
                 Narayanan and Anand Sivasubramaniam and Jyotsna
                 Sabarinathan and Anupama Murthy",
  title =        "Using complete system simulation to characterize
                 {SPECjvm98} benchmarks",
  crossref =     "ACM:2000:CPI",
  pages =        "22--33",
  year =         "2000",
  DOI =          "http://doi.acm.org/10.1145/335231.335234",
  bibdate =      "Tue Oct 24 10:02:36 2006",
  abstract =     "Complete system simulation to understand the influence
                 of architecture and operating systems on application
                 execution has been identified to be crucial for systems
                 design. While there have been previous attempts at
                 understanding the architectural impact of Java
                 programs, there has been no prior work investigating
                 the operating system (kernel) activity during their
                 executions. This problem is particularly interesting in
                 the context of Java since it is not only the
                 application that can invoke kernel services, but so
                 does the underlying Java Virtual Machine (JVM)
                 implementation which runs these programs. Further, the
                 JVM style (JIT compiler or interpreter) and the manner
                 in which the different JVM components (such as the
                 garbage collector and class loader) are exercised, can
                 have a significant impact on the kernel activities.To
                 investigate these issues, this research uses complete
                 system simulation of the SPECjvm98 benchmarks on the
                 SimOS simulation platform. The execution of these
                 benchmarks on both JIT compilers and interpreters is
                 profiled in detail, to identify and quantify where time
                 is spent in each component. The kernel activity of
                 SPECjvm98 applications constitutes up to 17\% of the
                 execution time in the large dataset and up to 31\% in
                 the small dataset. The average kernel activity in the
                 large dataset is approximately 10\%, in comparison to
                 around 2\% in four SPECInt benchmarks studied. Of the
                 kernel services, TLB miss handling is the most dominant
                 in all applications. The TLB miss rates in the JIT
                 compiler, dynamic class loader and garbage collector
                 portions of the JVM are individually analyzed. In
                 addition to such execution profiles, the ILP in the
                 user and kernel mode are also quantified. The Java code
                 is seen to limit exploitable parallelism and aggressive
                 instruction issue is seen to be less efficient for
                 SPECjvm98 benchmarks in comparison to SPEC95 programs.
                 Also, the kernel mode of execution does not exhibit as
                 much ILP as the user mode.",
  acknowledgement = ack-nhfb,
}

@TechReport{Mathiske:2000:APM,
  author =       "Bernd Mathiske and Daniel Schneider",
  title =        "Automatic persistent memory management for the
                 {Spotless} virtual machine on the {Palm} connected
                 organizer",
  type =         "SMLI TR",
  number =       "2000-89",
  institution =  "Sun Microsystems",
  address =      "Palo Alto, CA, USA",
  pages =        "18",
  month =        jun,
  year =         "2000",
  LCCN =         "QA76.8.S86.S65",
  bibdate =      "Mon Apr 10 10:43:19 MDT 2006",
  bibsource =    "library.mit.edu:9909/mit01",
  abstract =     "Palm organizers are widely used in a multi-tasking
                 fashion. Users switch from one application to another
                 without losing the context established in either of
                 them. Despite its obvious usefulness, there is no
                 automatic support for this convenience in the
                 organizer's operating system, PalmOS. Programmers must
                 implement event callbacks that have to operate on a
                 PalmOS database API to save and reload specific
                 application state. In this report, we describe how this
                 burden can be eliminated. We enhanced the Spotless Java
                 virtual machine for the Palm organizer with transparent
                 multi-tasking support that automates persistence. As a
                 consequence, running Java programs can be beamed
                 between the infra-red links of two Palm organizers. A
                 beamed program will resume on the receiving organizer
                 in the exact same state as on the sending device. A
                 HotSync operation effectively establishes a checkpoint
                 for each involved Java program. The original Spotless
                 JVM's address range for running programs is limited to
                 a few tens of KB in the dynamic RAM area. By directly
                 addressing the much larger static RAM area, our
                 modified VM supports address ranges of several MB. We
                 provide an easy-to-use protocol that leverages
                 persistent threads for automatic life cycle control of
                 external resources (e.g., windows, forms and
                 databases). When applied at the library level, this
                 protocol maintains complete persistence transparency
                 for the application programmer.",
  acknowledgement = ack-nhfb,
  subject =      "Palm (Computer); Multitasking (Computer science)",
}

@Article{Nieh:2000:EV,
  author =       "Jason Nieh and Ozgur Can Leonard",
  title =        "Examining {VMware}",
  journal =      j-DDJ,
  volume =       "25",
  number =       "8",
  pages =        "70, 72--74, 76",
  month =        aug,
  year =         "2000",
  CODEN =        "DDJOEB",
  ISSN =         "1044-789X",
  bibdate =      "Thu Nov 9 08:25:16 MST 2000",
  bibsource =    "http://www.ddj.com/",
  abstract =     "VMware is a virtual machine platform that provides an
                 abstraction of x86 PC hardware so that multiple
                 operating systems can run unmodified at the same time
                 on a standard PC. Among other things, this means you
                 can run Windows applications with Linux.",
  acknowledgement = ack-nhfb,
}

@Article{Sirer:2000:DID,
  author =       "Emin G{\"u}n Sirer and Robert Grimm and Arthur J.
                 Gregory and Brian N. Bershad",
  title =        "Design and implementation of a distributed virtual
                 machine for networked computers",
  journal =      j-OPER-SYS-REV,
  volume =       "34",
  number =       "2",
  pages =        "23--23",
  month =        apr,
  year =         "2000",
  CODEN =        "OSRED8",
  ISSN =         "0163-5980",
  bibdate =      "Sat Aug 26 08:55:42 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Article{Anonymous:2001:CRJ,
  author =       "Anonymous",
  title =        "Conference Report: {{\em 1st Java VM Virtual Machine
                 Research and Technology Symposium (JVM '01)}}",
  journal =      j-LOGIN,
  volume =       "26",
  number =       "5",
  pages =        "??--??",
  month =        aug,
  year =         "2001",
  CODEN =        "LOGNEM",
  ISSN =         "1044-6397",
  bibdate =      "Tue Apr 11 06:42:33 MDT 2006",
  bibsource =    "http://www.usenix.org/publications/login/2001-08/index.html",
  acknowledgement = ack-nhfb,
}

@Book{Born:2001:VWP,
  author =       "G{\"u}nter Born",
  title =        "{VMware Workstation Praxisf{\"u}hrer: Installation,
                 Konfiguration, Anwendung unter Windows und Linux}",
  publisher =    "SuSE-PRESS",
  address =      "N{\"u}rnberg, Germany",
  pages =        "xxii + 372",
  year =         "2001",
  ISBN =         "3-934678-81-5",
  ISBN-13 =      "978-3-934678-81-1",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 17:21:53 MDT 2006",
  bibsource =    "z3950.gbv.de:20011/gvk",
  price =        "DM 79.00, EUR 40.00",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "VMware Workstation",
}

@Article{Denning:2001:OVM,
  author =       "Peter J. Denning",
  title =        "Origin of Virtual Machines and Other Virtualities",
  journal =      j-IEEE-ANN-HIST-COMPUT,
  volume =       "23",
  number =       "3",
  pages =        "73--73",
  month =        jul,
  year =         "2001",
  CODEN =        "IAHCEX",
  ISSN =         "1058-6180",
  bibdate =      "Fri Feb 22 12:42:03 MST 2002",
  bibsource =    "http://www.computer.org/annals/an2001/",
  URL =          "http://computer.org/annals/an2001/a3073abs.htm;
                 http://dlib.computer.org/an/books/an2001/pdf/a3073.pdf",
  acknowledgement = ack-nhfb,
}

@Book{ECMA-335-1,
  author =       "{ECMA}",
  title =        "{ECMA-335}: {Common Language Infrastructure (CLI)}",
  publisher =    pub-ECMA,
  address =      pub-ECMA:adr,
  pages =        "xiii + 479",
  month =        dec,
  year =         "2001",
  bibdate =      "Sat May 08 07:36:41 2010",
  bibsource =    "http://www.ecma-international.org/publications/standards/Standard.htm",
  URL =          "http://www.ecma.ch/ecma1/STAND/ecma-335.htm",
  acknowledgement = ack-nhfb,
  ECMAnumber =   "ECMA-335",
  remark =       "Also ISO/IEC 23271.",
}

@Book{Hsu:2001:CAS,
  author =       "John Y. Hsu",
  title =        "Computer Architecture: Software Aspects, Coding,
                 Hardware",
  publisher =    pub-CRC,
  address =      pub-CRC:adr,
  pages =        "427",
  year =         "2001",
  ISBN =         "0-8493-1026-1",
  ISBN-13 =      "978-0-8493-1026-3",
  LCCN =         "A76.9.A73 H758 2001",
  bibdate =      "Fri Jan 19 15:47:59 2001",
  price =        "US\$89.95, UK\pounds 59.99",
  acknowledgement = ack-nhfb,
  keywords =     "Compaq/DEC Alpha; floating-point arithmetic; Intel
                 x86; Java Virtual Machine; multimedia instructions;
                 Pentium",
  libnote =      "Not yet in my library.",
}

@Article{Ng:2001:VEWa,
  author =       "Choong Ng",
  title =        "{VMware Express 2.0} and {Win4Lin 2.0}: {A} Comparison
                 Review",
  journal =      j-LINUX-J,
  volume =       "85",
  pages =        "??--??",
  month =        may,
  year =         "2001",
  CODEN =        "LIJOFX",
  ISSN =         "1075-3583",
  bibdate =      "Wed May 23 15:20:33 MDT 2001",
  bibsource =    "http://noframes.linuxjournal.com/lj-issues/issue85/index.html",
  note =         "Not in journal issue: {Web} only.",
  URL =          "http://www.linuxjournal.com/articles/linux_review/0036.html",
  acknowledgement = ack-nhfb,
}

@Article{Ng:2001:VEWb,
  author =       "Choong Ng",
  title =        "{VMware} Express 2.0 and Win4Lin 2.0: {A} Comparison
                 Review",
  journal =      j-LINUX-J,
  volume =       "86",
  pages =        "??--??",
  month =        jun,
  year =         "2001",
  CODEN =        "LIJOFX",
  ISSN =         "1075-3583",
  bibdate =      "Wed May 23 15:20:33 MDT 2001",
  bibsource =    "http://noframes.linuxjournal.com/lj-issues/issue86/index.html",
  note =         "Not in journal issue: {Web} only.",
  URL =          "http://www.linuxjournal.com/articles/linux_review/0036.html",
  acknowledgement = ack-nhfb,
}

@Article{Radhakrishnan:2001:JRS,
  author =       "R. Radhakrishnan and N. Vijaykrishnan and L. K. John
                 and A. Sivasubramaniam and J. Rubio and J.
                 Sabarinathan",
  title =        "{Java} runtime systems: characterization and
                 architectural implications",
  journal =      j-IEEE-TRANS-COMPUT,
  volume =       "50",
  number =       "2",
  pages =        "131--146",
  month =        feb,
  year =         "2001",
  CODEN =        "ITCOB4",
  ISSN =         "0018-9340",
  bibdate =      "Tue Oct 24 10:08:12 2006",
  abstract =     "The Java Virtual Machine (JVM) is the cornerstone of
                 Java technology and its efficiency in executing the
                 portable Java bytecodes is crucial for the success of
                 this technology. Interpretation, Just-in-Time (JIT)
                 compilation, and hardware realization are well-known
                 solutions for a JVM and previous research has proposed
                 optimizations for each of these techniques. However,
                 each technique has its pros and cons and may not be
                 uniformly attractive for all hardware platforms.
                 Instead, an understanding of the architectural
                 implications of JVM implementations with real
                 applications can be crucial to the development of
                 enabling technologies for efficient Java runtime system
                 development on a wide range of platforms. Toward this
                 goal, this paper examines architectural issues from
                 both the hardware and JVM implementation perspectives.
                 The paper starts by identifying the important execution
                 characteristics of Java applications from a bytecode
                 perspective. It then explores the potential of a smart
                 JIT compiler strategy that can dynamically interpret or
                 compile based on associated costs and investigates the
                 CPU and cache architectural support that would benefit
                 JVM implementations. We also study the available
                 parallelism during the different execution modes using
                 applications from the SPECjvm98 benchmarks. At the
                 bytecode level, it is observed that less than 5 out of
                 the 256 bytecodes constitute 90 percent of the dynamic
                 bytecode stream. Method sizes fall into a trinodal
                 distribution with peak of 1, 9, and 26 bytecodes across
                 all benchmarks. The architectural issues explored in
                 this study show that, when Java applications are
                 executed with a JIT compiler, selective translation
                 using good heuristics can improve performance, but the
                 saving is only 10-15 percent at best. The instruction
                 and data cache performance of Java applications are
                 seen to be better than that of C/C++ applications
                 except in the case of data cache performance in the JIT
                 mode. Write misses resulting from installation of JIT
                 compiler output dominate the misses and deteriorate the
                 data cache performance in JIT mode. A study on the
                 available parallelism shows that Java programs executed
                 using JIT compilers have parallelism comparable to
                 C/C++ programs for small window sizes, but falls behind
                 when the window size is increased. Java programs
                 executed using the interpreter have very little
                 parallelism due to the stack nature of the SVM
                 instruction set, which is dominant in the interpreted
                 execution mode. In addition, this work gives revealing
                 insights and architectural proposals for designing an
                 efficient Java runtime system.",
  acknowledgement = ack-nhfb,
}

@Book{Stark:2001:JJV,
  author =       "Robert F. St{\"a}rk and Joachim Schmid and Egon
                 B{\"o}rger",
  title =        "{Java} and the {Java Virtual Machine}: definition,
                 verification, validation",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  pages =        "x + 381",
  year =         "2001",
  ISBN =         "3-540-42088-6",
  ISBN-13 =      "978-3-540-42088-0",
  LCCN =         "QA76.73.J38 S785 2001",
  bibdate =      "Mon May 6 06:26:30 MDT 2002",
  note =         "Includes CD-ROM with the entire text of the book and
                 numerous examples and exercises.",
  price =        "US\$49.95",
  acknowledgement = ack-nhfb,
  keywords =     "Java (computer program language); virtual computer
                 systems",
}

@Article{Anonymous:2002:CRJ,
  author =       "Anonymous",
  title =        "Conference Report: {{\em 2nd Java Virtual Machine
                 Research and Technology Symposium}}",
  journal =      j-LOGIN,
  volume =       "27",
  number =       "5",
  pages =        "??--??",
  month =        oct,
  year =         "2002",
  CODEN =        "LOGNEM",
  ISSN =         "1044-6397",
  bibdate =      "Tue Apr 11 10:52:12 MDT 2006",
  bibsource =    "http://www.usenix.org/publications/login/2002-10/index.html",
  URL =          "http://www.usenix.org/publications/library/proceedings/javavm02/JavaVM2002.pdf",
  acknowledgement = ack-nhfb,
}

@MastersThesis{Arvizo:2002:VMT,
  author =       "Teodoro Arvizo",
  title =        "A virtual machine for a type-$\omega$ denotational
                 proof language",
  type =         "Thesis ({M.Eng.} and {S.B.})",
  school =       "Department of Electrical Engineering and Computer
                 Science, Massachusetts Institute of Technology",
  address =      "Cambridge, MA, USA",
  pages =        "123",
  year =         "2002",
  bibdate =      "Mon Apr 10 11:22:36 2006",
  bibsource =    "library.mit.edu:9909/mit01",
  note =         "Supervised by Howard E. Shrobe.",
  acknowledgement = ack-nhfb,
}

@Book{Blunden:2002:VMD,
  author =       "Bill Blunden",
  title =        "Virtual machine design and implementation in {C/C++}",
  publisher =    "Wordware Publishing",
  address =      "Plano, TX, USA",
  pages =        "xvii + 668",
  year =         "2002",
  ISBN =         "1-55622-903-8 (paperback)",
  ISBN-13 =      "978-1-55622-903-9 (paperback)",
  LCCN =         "QA76.9.V5 B59 2002",
  bibdate =      "Thu Jul 14 12:01:14 MDT 2005",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  libnote =      "Not in my library.",
  subject =      "Virtual computer systems; C++ (Computer program
                 language)",
}

@Book{ECMA-335-2,
  author =       "{ECMA}",
  title =        "{ECMA-335}: {Common Language Infrastructure (CLI)}",
  publisher =    pub-ECMA,
  address =      pub-ECMA:adr,
  edition =      "Second",
  pages =        "iv + 99 (Part I), vii + 164 (Part II), iv + 124 (Part
                 III), i + 16 (Part IV), ii + 78 (Part V)",
  month =        dec,
  year =         "2002",
  bibdate =      "Mon May 16 06:24:46 2005",
  bibsource =    "http://www.ecma-international.org/publications/standards/Standard.htm",
  URL =          "http://www.ecma.ch/ecma1/STAND/ecma-335.htm;
                 http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-335.pdf;
                 http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-335-xml.zip",
  acknowledgement = ack-nhfb,
  ECMAnumber =   "ECMA-335",
  remark =       "Also ISO/IEC 23271.",
}

@Article{Levis:2002:MTV,
  author =       "Philip Levis and David Culler",
  title =        "{Mat{\'e}}: a tiny virtual machine for sensor
                 networks",
  journal =      j-COMP-ARCH-NEWS,
  volume =       "30",
  number =       "5",
  pages =        "85--95",
  month =        dec,
  year =         "2002",
  CODEN =        "CANED2",
  ISSN =         "0163-5964",
  bibdate =      "Fri May 12 09:41:23 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Article{Magnusson:2002:SFS,
  author =       "Peter S. Magnusson and Magnus Christensson and Jesper
                 Eskilson and Daniel Forsgren and Gustav H{\aa}llberg
                 and Johan H{\"o}gberg and Fredrik Larsson and Andreas
                 Moestedt and Bengt Werner",
  title =        "{Simics}: {A} Full System Simulation Platform",
  journal =      j-COMPUTER,
  volume =       "35",
  number =       "2",
  pages =        "50--58",
  month =        feb,
  year =         "2002",
  CODEN =        "CPTRB4",
  ISSN =         "0018-9162",
  bibdate =      "Fri Feb 8 07:11:47 MST 2002",
  URL =          "http://www.computer.org/computer/co2002/r2050abs.htm;
                 http://dlib.computer.org/co/books/co2002/pdf/r2050.pdf",
  acknowledgement = ack-nhfb,
}

@InProceedings{Rajan:2002:CPJ,
  author =       "A. S. Rajan and Shiwen Hu and J. Rubio",
  title =        "Cache performance in {Java} virtual machines: a study
                 of constituent phases",
  crossref =     "IEEE:2002:WII",
  pages =        "81--90",
  year =         "2002",
  bibdate =      "Tue Oct 24 10:13:38 2006",
  abstract =     "This paper studies the level 1 cache performance of
                 Java programs by analyzing memory reference traces of
                 the SPECjvm98 applications executed by the Latte Java
                 virtual machine. We study in detail Java programs'
                 cache performance of different access types in three
                 JVM phases, under two execution modes, using three
                 cache configurations and two application data sets. We
                 observe that the poor data cache performance in the JIT
                 execution mode is caused by code installation, when the
                 data write miss rate in the execution engine can be as
                 high as 70\%. In addition, code installation also
                 deteriorates instruction cache performance during
                 execution of translated code. High cache miss rate in
                 garbage collection is mainly caused by large working
                 set and pointer chasing of the garbage collector. A
                 larger data cache works better on eliminating data
                 cache read misses than write misses, and is more
                 efficient on improving cache performance in the
                 execution engine than in the garbage collection. As
                 application data set increases in the JIT execution
                 mode, instruction cache and data cache write miss rates
                 of the execution engine decrease, while data cache read
                 miss rate of the execution engine increases. On the
                 other hand, impact of varying data set on cache
                 performance is not as pronounced in the interpreted
                 mode as in the JIT mode.",
  acknowledgement = ack-nhfb,
}

@Book{Russell:2002:SCI,
  editor =       "Steve Russell and others",
  title =        "Server consolidation with the {IBM eServer xSeries
                 440} and {VMware ESX Server}",
  publisher =    "IBM, International Technical Support Organization",
  address =      "????",
  pages =        "xiv + 222",
  month =        NOV,
  year =         "2002",
  ISBN =         "0-7384-2684-9",
  ISBN-13 =      "978-0-7384-2684-6",
  LCCN =         "QA76.9.C55 S378 2002",
  bibdate =      "Sun Apr 9 15:43:22 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  note =         "Publication number SG24-6852-00.",
  series =       "IBM redbooks",
  acknowledgement = ack-nhfb,
  subject =      "Client/server computing; Management; Web servers; IBM
                 computers",
}

@Book{Ward:2002:BVC,
  author =       "Brian Ward",
  title =        "The book of {VMware}: the complete guide to {VMware}
                 workstation",
  publisher =    pub-NO-STARCH,
  address =      pub-NO-STARCH:adr,
  pages =        "xv + 249",
  year =         "2002",
  ISBN =         "1-886411-72-7",
  ISBN-13 =      "978-1-886411-72-2",
  LCCN =         "QA76.76.O63 W3653 2002",
  bibdate =      "Sat Dec 06 08:24:50 2003",
  price =        "US\$39.95",
  acknowledgement = ack-nhfb,
}

@InProceedings{Ahmad:2003:ADP,
  author =       "I. Ahmad and J. M. Anderson and A. M. Holler and R.
                 Kambo and V. Makhija",
  title =        "An analysis of disk performance in {VMware ESX Server}
                 virtual machines",
  crossref =     "IEEE:2003:IIW",
  pages =        "65--76",
  year =         "2003",
  DOI =          "http://dx.doi.org/10.1109/WWC.2003.1249058",
  bibdate =      "Sat Oct 14 17:02:30 2006",
  abstract =     "VMware ESX Server is a software platform that
                 efficiently multiplexes the hardware resources of a
                 server among virtual machines. This paper studies the
                 performance of a key component of the ESX Server
                 architecture: its storage subsystem. We characterize
                 the performance of native systems and virtual machines
                 using a series of disk microbenchmarks on several
                 different storage systems. We show that the virtual
                 machines perform well compared to native, and that the
                 I/O behavior of virtual machines closely matches that
                 of the native server. We then discuss how the
                 microbenchmarks can be used to estimate virtual machine
                 performance for disk-intensive applications by studying
                 two workloads: a simple file server and a commercial
                 mail server.",
  acknowledgement = ack-nhfb,
}

@InProceedings{Barham:2003:VMM,
  author =       "Paul Barham and Boris Dragovic and Keir Fraser and
                 Steven Hand and Tim Harris and Alex Ho and Rolf
                 Neugebauer and Ian Pratt and Andrew Warfield",
  title =        "Virtual machine monitors: {Xen} and the art of
                 virtualization",
  crossref =     "ACM:2003:SPA",
  pages =        "164--177",
  year =         "2003",
  bibdate =      "Sat Oct 14 13:33:07 2006",
  URL =          "http://doi.acm.org/10.1145/945445.945462",
  abstract =     "Numerous systems have been designed which use
                 virtualization to subdivide the ample resources of a
                 modern computer. Some require specialized hardware, or
                 cannot support commodity operating systems. Some target
                 100\% binary compatibility at the expense of
                 performance. Others sacrifice security or functionality
                 for speed. Few offer resource isolation or performance
                 guarantees; most provide only best-effort provisioning,
                 risking denial of service.This paper presents Xen, an
                 x86 virtual machine monitor which allows multiple
                 commodity operating systems to share conventional
                 hardware in a safe and resource managed fashion, but
                 without sacrificing either performance or
                 functionality. This is achieved by providing an
                 idealized virtual machine abstraction to which
                 operating systems such as Linux, BSD and Windows XP,
                 can be ported with minimal effort.Our design is
                 targeted at hosting up to 100 virtual machine instances
                 simultaneously on a modern server. The virtualization
                 approach taken by Xen is extremely efficient: we allow
                 operating systems such as Linux and Windows XP to be
                 hosted simultaneously for a negligible performance
                 overhead --- at most a few percent compared with the
                 unvirtualized case. We considerably outperform
                 competing commercial and freely available solutions in
                 a range of microbenchmarks and system-wide tests.",
  acknowledgement = ack-nhfb,
}

@Book{Compton:2003:VL,
  author =       "Jason Compton",
  title =        "{VMware 2} for {Linux}",
  publisher =    "Premier Press",
  address =      "Rocklin, CA, USA",
  pages =        "xxii + 406",
  year =         "2003",
  ISBN =         "0-7615-2764-8",
  ISBN-13 =      "978-0-7615-2764-0",
  LCCN =         "QA76.76.O63 C656 2000",
  bibdate =      "Sat Dec 06 08:42:35 2003",
  note =         "Includes CD-ROM.",
  price =        "US\$39.99",
  acknowledgement = ack-nhfb,
}

@PhdThesis{Ive:2003:TER,
  author =       "Anders Ive",
  title =        "Towards an embedded real-time {Java Virtual Machine}",
  volume =       "20",
  type =         "Thesis (fil.dr.)",
  school =       "Lund University, Department of Computer Science",
  address =      "Lund, Sweden",
  pages =        "viii + 139",
  year =         "2003",
  LCCN =         "????",
  bibdate =      "Mon Apr 10 10:43:56 MDT 2006",
  bibsource =    "z3950.bibsys.no:2100/BIBSYS",
  series =       "Dissertation / Department of Computer Science, Lund
                 University",
  acknowledgement = ack-nhfb,
  subject =      "JVM; microsystems",
}

@InProceedings{McAuley:2003:CVC,
  author =       "Derek McAuley and Rolf Neugebauer",
  title =        "A case for virtual channel processors",
  crossref =     "ACM:2003:ATA",
  pages =        "237--242",
  year =         "2003",
  DOI =          "http://doi.acm.org/10.1145/944747.944758",
  bibdate =      "Sat Oct 14 14:03:33 2006",
  abstract =     "Modern desktop and server computer systems use
                 multiple processors: general purpose CPU(s), graphic
                 processor (GPU), network processors (NP) on Network
                 Interface Cards (NICs), RAID controllers, and signal
                 processors on sound cards and modems. Some of these
                 processors traditionally have been special purpose
                 processors but there is a trend towards replacing some
                 of these with embedded general purpose processors. At
                 the same time main CPUs become more powerful; desktop
                 CPUs start featuring Simultaneous Multi-Threading
                 (SMT); and Symmetric Multi-Processing (SMP) systems are
                 widely used in server systems. However, the structure
                 of operating systems has not really changed to reflect
                 these trends --- different types of processors evolve
                 at different time scales (largely driven by market
                 forces) requiring significant changes to operating
                 systems kernels to reflect the appropriate tradeoffs.In
                 this position paper we propose to re-vitalise the old
                 idea of channel processors by encapsulating operating
                 system I/O subsystems in Virtual Channel Processors
                 (VCPs). VCPs perform I/O operations on behalf of an OS.
                 They provide similar development, performance, and
                 fault isolation as dedicated (embedded) I/O processors
                 do while offering the flexibility to split
                 functionality between the main processor(s) and
                 dedicated processors without affecting the rest of the
                 OS. If part of a VCP is executed on the main processor,
                 we propose to make use of virtual machine technology
                 and SMT/SMP features to isolate its performance from
                 that of the rest of the system and to protect the
                 system from faults within the VCP.",
  acknowledgement = ack-nhfb,
}

@MastersThesis{Panesar-Walawege:2003:VHM,
  author =       "Rajwinder Kaur Panesar-Walawege",
  title =        "{Views}: a platform-independent {GUI} toolkit for the
                 shared-source {Common Language Infrastructure}",
  type =         "Thesis ({M. Sc.})",
  publisher =    "National Library of Canada = Biblioth\`eque nationale
                 du Canada",
  school =       "University of Victoria",
  address =      "Victoria, BC, Canada",
  year =         "2003",
  ISBN =         "0-612-85233-4",
  ISBN-13 =      "978-0-612-85233-4",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:04:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Canadian theses = Th\`eses canadiennes.",
  acknowledgement = ack-nhfb,
}

@Book{Ragsdale:2003:CLI,
  author =       "Susann Ragsdale and David Sussman and Mark Fussell",
  title =        "The {Common Language Infrastructure} Annotated
                 Standard",
  publisher =    pub-AW,
  address =      pub-AW:adr,
  pages =        "826",
  year =         "2003",
  ISBN =         "0-321-15493-2",
  ISBN-13 =      "978-0-321-15493-4",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:04:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Microsoft.NET development series",
  acknowledgement = ack-nhfb,
  subject =      "object-oriented methods (computer science);
                 Microsoft.NET Framework",
}

@Book{Stutz:2003:SSC,
  author =       "David Stutz and Ted Neward and Geoff Shilling",
  title =        "Shared Source {CLI} Essentials",
  publisher =    pub-ORA,
  address =      pub-ORA:adr,
  pages =        "xviii + 357",
  year =         "2003",
  ISBN =         "0-596-00351-X",
  ISBN-13 =      "978-0-596-00351-7",
  LCCN =         "QA76.625 .S76 2003",
  bibdate =      "Mon Apr 18 15:05:28 MDT 2005",
  bibsource =    "http://www.oreilly.com/catalog/prdindex.html;
                 z3950.loc.gov:7090/Voyager",
  price =        "US\$34.95",
  URL =          "http://www.oreilly.com/catalog/9780596003517;
                 http://www.oreilly.com/catalog/sscliess",
  acknowledgement = ack-nhfb,
  publishersummary = "This concise and insightful guide provides a
                 roadmap for anyone trying to navigate or manipulate the
                 Shared Source CLI code (codenamed ``Rotor''). With as
                 many as 1.3 million lines of code in 14,000 files, this
                 book is absolutely necessary for anyone who wants to
                 jump into the complex nucleus of Microsoft's .NET
                 Platform. The book includes a CD-ROM that contains all
                 the source code and files.",
  subject =      "Internet programming; Microsoft .NET Framework;
                 Virtual computer systems",
}

@Book{Ward:2003:VWH,
  author =       "Brian Ward and Gerhard Franken",
  title =        "{VMware Workstation: [das Handbuch; Installation,
                 Konfiguration, Anwendung und Troubleshooting;
                 Gast-Systeme: Windows, Linux, BSD, Novell NetWare,
                 Solaris, FreeDOS und Oberon; virtuelle Netzwerke,
                 Netzwerkkonfiguration und -dienste]}",
  publisher =    "mitp-Verl.",
  address =      "Landsberg, Germany",
  pages =        "336",
  year =         "2003",
  ISBN =         "3-8266-0964-6",
  ISBN-13 =      "978-3-8266-0964-0",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 17:21:53 MDT 2006",
  bibsource =    "z3950.gbv.de:20011/gvk",
  price =        "EUR 32.00 (DE)",
  URL =          "http://www.gbv.de/du/services/agi/FCC0A57071BE8695C125704A0029797F/FLMA122525",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "VMware Workstation",
}

@Book{Adra:2004:APV,
  editor =       "Bill Adra and others",
  title =        "Advanced {POWER} virtualization on {IBM e-server p5}
                 servers. Introduction and basic configuration",
  publisher =    pub-IBM,
  address =      pub-IBM:adr,
  pages =        "xviii + 268",
  year =         "2004",
  ISBN =         "0-7384-9081-4",
  ISBN-13 =      "978-0-7384-9081-6",
  LCCN =         "QA76.9.V5 A378 2004",
  bibdate =      "Thu Jan 21 14:10:00 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "IBM redbooks",
  URL =          "http://www.loc.gov/catdir/toc/fy0608/2005274479.html",
  acknowledgement = ack-nhfb,
  subject =      "Virtual computer systems",
}

@Article{Anonymous:2004:CRV,
  author =       "Anonymous",
  title =        "Conference Report: {{\em 3rd Virtual Machine Research
                 and Technology Symposium (VM '04)}}",
  journal =      j-LOGIN,
  volume =       "29",
  number =       "4",
  pages =        "??--??",
  month =        aug,
  year =         "2004",
  CODEN =        "LOGNEM",
  ISSN =         "1044-6397",
  bibdate =      "Tue Apr 11 10:52:40 MDT 2006",
  bibsource =    "http://www.usenix.org/publications/login/2004-08/index.html",
  URL =          "http://www.usenix.org/publications/login/2004-08/openpdfs/vm04reports.pdf",
  acknowledgement = ack-nhfb,
}

@Book{Bastiaansen:2004:RGU,
  author =       "Rob Bastiaansen",
  title =        "{Rob}'s Guide to Using {VMWARE}",
  publisher =    "Books4Brains",
  address =      "????",
  pages =        "268 (est.)",
  year =         "2004",
  ISBN =         "90-808934-1-2",
  ISBN-13 =      "978-90-808934-1-2",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 17:57:33 2006",
  bibsource =    "http://www.comcol.nl/detail/55734.htm",
  acknowledgement = ack-nhfb,
}

@Book{Dufrasne:2004:IVE,
  editor =       "Bertrand Dufrasne and others",
  title =        "Implementing {VMware ESX Server} with {IBM
                 TotalStorage FAStT}",
  publisher =    "IBM, International Support Organization",
  address =      "????",
  pages =        "xvi + 246",
  month =        sep,
  year =         "2004",
  ISBN =         "0-7384-9134-9",
  ISBN-13 =      "978-0-7384-9134-9",
  LCCN =         "TK5105.86 I475 2004",
  bibdate =      "Sun Apr 9 15:43:22 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  note =         "Publication number SG24-6434-00.",
  series =       "IBM redbooks",
  acknowledgement = ack-nhfb,
  subject =      "Storage area networks (Computer networks); Web
                 servers; IBM computers",
}

@InProceedings{Ho:2004:PPD,
  author =       "Alex Ho and Steven Hand and Tim Harris",
  title =        "{PDB}: Pervasive Debugging With Xen",
  crossref =     "IEEE:2004:FIA",
  pages =        "260--265",
  year =         "2004",
  DOI =          "http://dx.doi.org/10.1109/GRID.2004.49",
  bibdate =      "Sat Oct 14 14:20:54 2006",
  abstract =     "Building distributed grid applications is notoriously
                 difficult: the complex interactions between
                 concurrently running processes, middleware, operating
                 systems, underlying devices, and interconnecting
                 networks can lead to unpredictable and difficult to
                 analyze errors. Yet debugging support for such systems
                 is woefully inadequate; typically a central user
                 interface coordinates a set of conventional debuggers.
                 This structure leads to synchronization problems and is
                 limited to debugging user-mode applications. In this
                 paper we present the design and implementation of PDB,
                 a pervasive debugger which executes in a virtualization
                 layer underneath the entire distributed system. By
                 running each node of a distributed application in a
                 separate virtual environment atop the debugger, PDB can
                 exercise full control over the entire execution
                 environment.",
  acknowledgement = ack-nhfb,
}

@InProceedings{Hohmuth:2004:RTS,
  author =       "Michael Hohmuth and Michael Peter and Hermann
                 H{\"a}rtig and Jonathan S. Shapiro",
  title =        "Reducing {TCB} size by using untrusted components:
                 small kernels versus virtual-machine monitors",
  crossref =     "ACM:2004:PWA",
  pages =        "??--??",
  year =         "2004",
  DOI =          "http://doi.acm.org/10.1145/1133572.1133615",
  bibdate =      "Sat Oct 14 14:28:03 2006",
  abstract =     "Secure systems are best built on top of a small
                 trusted operating system: The smaller the operating
                 system, the easier it can be assured or verified for
                 correctness.In this paper, we oppose the view that
                 virtual-machine monitors (VMMs) are the smallest
                 systems that provide secure isolation because they have
                 been specifically designed to provide little more than
                 this property. The problem with this assertion is that
                 VMMs typically do not support interprocess
                 communication, complicating the use of untrusted
                 components inside a secure systems.We propose extending
                 traditional VMMs with features for secure message
                 passing and memory sharing to enable the use of
                 untrusted components in secure systems. We argue that
                 moving system components out of the TCB into the
                 untrusted part of the system and communicating with
                 them using IPC reduces the overall size of the TCB.We
                 argue that many secure applications can make use of
                 untrusted components through trusted wrappers without
                 risking security properties such as confidentiality and
                 integrity.",
  acknowledgement = ack-nhfb,
  articlenumber = "22",
}

@InProceedings{Krsul:2004:VPM,
  author =       "Ivan Krsul and Arijit Ganguly and Jian Zhang and Jose
                 A. B. Fortes and Renato J. Figueiredo",
  title =        "{VMPlants}: Providing and Managing Virtual Machine
                 Execution Environments for {Grid} Computing",
  crossref =     "ACM:2004:SHP",
  pages =        "7--??",
  year =         "2004",
  DOI =          "http://dx.doi.org/10.1109/SC.2004.67",
  bibdate =      "Sat Oct 14 14:33:45 2006",
  abstract =     "Virtual machines provide flexible, powerful execution
                 environments for Grid computing, offering isolation and
                 security mechanisms complementary to operating systems,
                 customization and encapsulation of entire application
                 environments, and support for legacy applications. This
                 paper describes a Grid service, VMPlant, that provides
                 for automated configuration and creation of flexible
                 VMs that, once configured to meet application needs,
                 can then subsequently be copied (``cloned'') and
                 dynamically instantiated to provide homogeneous
                 execution environments across distributed Grid
                 resources. In combination with complementary middleware
                 for user, data and resource management, the
                 functionality enabled by VMPlant allows for
                 problem-solving environments to deliver Grid
                 applications to users with unprecedented flexibility.
                 VMPlant supports a graph-based model for the definition
                 of customized VM configuration actions; partial graph
                 matching, VM state storage and ``cloning'' for
                 efficient creation. This paper presents the VMPlant
                 architecture, describes a prototype implementation of
                 the service, and presents an analysis of its
                 performance.",
  acknowledgement = ack-nhfb,
}

@InProceedings{LeVasseur:2004:SAR,
  author =       "Joshua LeVasseur and Volkmar Uhlig",
  title =        "A sledgehammer approach to reuse of legacy device
                 drivers",
  crossref =     "ACM:2004:PWA",
  pages =        "??--??",
  year =         "2004",
  DOI =          "http://doi.acm.org/10.1145/1133572.1133617",
  bibdate =      "Sat Oct 14 15:41:52 2006",
  abstract =     "Device drivers account for the majority of an
                 operating system's code base, and reuse of the existing
                 driver infrastructure is a pragmatic requirement of any
                 new OS project. New operating systems should benefit
                 from the existing device driver code base without
                 demanding legacy support from the kernel.Instead of
                 trying to directly integrate existing device drivers we
                 propose a more radical approach. We run the unmodified
                 device driver, with its complete original OS, isolated
                 in a virtual machine. Our flexible approach, requiring
                 only minimal support infrastructure, allows us to run
                 any existing device driver, independently of the OS or
                 driver vendor.",
  acknowledgement = ack-nhfb,
  articlenumber = "24",
}

@Article{Lowell:2004:DVM,
  author =       "David E. Lowell and Yasushi Saito and Eileen J.
                 Samberg",
  title =        "Devirtualizable virtual machines enabling general,
                 single-node, online maintenance",
  journal =      j-COMP-ARCH-NEWS,
  volume =       "32",
  number =       "5",
  pages =        "211--223",
  month =        dec,
  year =         "2004",
  CODEN =        "CANED2",
  ISSN =         "0163-5964",
  bibdate =      "Fri May 12 09:41:24 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Book{Miller:2004:CLI,
  author =       "James S. Miller and Susann Ragsdale",
  title =        "The {Common Language Infrastructure} Annotated
                 Standard",
  publisher =    pub-AW,
  address =      pub-AW:adr,
  pages =        "xxxii + 891",
  year =         "2004",
  ISBN =         "0-321-15493-2",
  ISBN-13 =      "978-0-321-15493-4",
  LCCN =         "QA76.7 .M52 2003",
  bibdate =      "Wed Mar 15 08:58:53 MST 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  subject =      "Programming languages (Electronic computers);
                 Microsoft .NET Framework",
}

@Article{Rosenblum:2004:RVM,
  author =       "Mendel Rosenblum",
  title =        "The Reincarnation of Virtual Machines",
  journal =      j-QUEUE,
  volume =       "2",
  number =       "5",
  pages =        "34--40",
  month =        jul,
  year =         "2004",
  CODEN =        "AQCUAE",
  DOI =          "http://doi.acm.org/10.1145/1016998.1017000",
  ISSN =         "1542-7730",
  bibdate =      "Sat Nov 6 17:44:33 MST 2004",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Article{Supnik:2004:SVM,
  author =       "Bob Supnik",
  title =        "Simulators: Virtual Machines of the Past (and
                 Future)",
  journal =      j-QUEUE,
  volume =       "2",
  number =       "5",
  pages =        "52--58",
  month =        jul,
  year =         "2004",
  CODEN =        "AQCUAE",
  DOI =          "http://doi.acm.org/10.1145/1016998.1017002",
  ISSN =         "1542-7730",
  bibdate =      "Sat Nov 6 17:44:33 MST 2004",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@InProceedings{Alpern:2005:PVE,
  author =       "Bowen Alpern and Joshua Auerbach and Vasanth Bala and
                 Thomas Frauenhofer and Todd Mummert and Michael
                 Pigott",
  title =        "{PDS}: a virtual execution environment for software
                 deployment",
  crossref =     "ACM:2005:PFA",
  pages =        "175--185",
  year =         "2005",
  DOI =          "http://doi.acm.org/10.1145/1064979.1065004",
  bibdate =      "Sat Oct 14 16:55:50 2006",
  abstract =     "The Progressive Deployment System (PDS) is a virtual
                 execution environment and infrastructure designed
                 specifically for deploying software, or ``assets'', on
                 demand while enabling management from a central
                 location. PDS intercepts a select subset of system
                 calls on the target machine to provide a partial
                 virtualization at the operating system level. This
                 enables an asset's install-time environment to be
                 reproduced virtually while otherwise not isolating the
                 asset from peer applications on the target machine.
                 Asset components, or ``shards'', are fetched as they
                 are needed (or they may be pre-fetched), enabling the
                 asset to be progressively deployed by overlapping
                 deployment with execution. Cryptographic digests are
                 used to eliminate redundant shards within and among
                 assets, which enables more efficient deployment. A
                 framework is provided for intercepting interfaces above
                 the operating system (e.g., Java class loading),
                 enabling optimizations requiring semantic awareness not
                 present at the OS level. The paper presents the design
                 of PDS, motivates its ``porous isolation model'' with
                 respect to the challenges of software deployment, and
                 presents measurements of PDS's execution
                 characteristics.",
  acknowledgement = ack-nhfb,
}

@Article{Anonymous:2005:NPV,
  author =       "Anonymous",
  title =        "New Products: Virtual Iron ({VF}e)",
  journal =      j-LINUX-J,
  volume =       "139",
  pages =        "18--18",
  month =        dec,
  year =         "2005",
  CODEN =        "LIJOFX",
  ISSN =         "1075-3583",
  bibdate =      "Sat Oct 14 15:24:05 2006",
  acknowledgement = ack-nhfb,
  keywords =     "Virtual Iron; Xen",
  remark =       "VFe allows up to ten operating systems to run
                 concurrently on a physical processor, a single
                 operating system to span 16 processors or any
                 combination in between, all sharing the same physical
                 resources.",
}

@Article{Bauer:2005:PPF,
  author =       "Mick Bauer",
  title =        "Paranoid penguin: The future of {Linux} security",
  journal =      j-LINUX-J,
  volume =       "2005",
  number =       "136",
  pages =        "10--10",
  month =        aug,
  year =         "2005",
  bibdate =      "Sat Dec 24 17:46:10 MST 2005",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  keywords =     "Hypervisors and Virtual Machines",
}

@Book{Blank:2005:APV,
  editor =       "Annika Blank and others",
  title =        "Advanced {POWER} virtualization on {IBM System p5}",
  publisher =    pub-IBM,
  address =      pub-IBM:adr,
  edition =      "Second",
  pages =        "xxii + 424",
  year =         "2005",
  ISBN =         "0-7384-9404-6",
  ISBN-13 =      "978-0-7384-9404-3",
  LCCN =         "QA76.9.V5 A38 2005",
  bibdate =      "Thu Jan 21 14:08:50 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "IBM redbooks",
  URL =          "http://www.loc.gov/catdir/toc/fy0608/2006273965.html",
  acknowledgement = ack-nhfb,
  remark =       "This edition applies to IBM AIX 5L version 5.3, HMC
                 version 5 release 1.0, Virtual IO server version 1.2
                 running on IBM system p5 and IBM eserver p5 systems.",
  subject =      "Virtual computer systems",
}

@InProceedings{Calder:2005:EVM,
  author =       "Brad Calder and Andrew A. Chien and Ju Wang and Don
                 Yang",
  title =        "The {Entropia Virtual Machine} for desktop grids",
  crossref =     "ACM:2005:PFA",
  pages =        "186--185",
  year =         "2005",
  DOI =          "http://doi.acm.org/10.1145/1064979.1065005",
  bibdate =      "Sat Oct 14 15:31:19 2006",
  abstract =     "Desktop distributed computing allows companies to
                 exploit the idle cycles on pervasive desktop PC systems
                 to increase the available computing power by orders of
                 magnitude (10x--1000x). Applications are submitted,
                 distributed, and run on a grid of desktop PCs. Since
                 the applications may be malformed, or malicious, the
                 key challenges for a desktop grid are how to (1)
                 prevent the distributed computing application from
                 unwarranted access or modification of data and files on
                 the desktop PC, (2) control the distributed computing
                 application's resource usage and behavior as it runs on
                 the desktop PC, and (3) provide protection for the
                 distributed application's program and its data. In this
                 paper we describe the Entropia Virtual Machine, and the
                 solutions it embodies for each of these challenges.",
  acknowledgement = ack-nhfb,
}

@InProceedings{Childs:2005:SCG,
  author =       "Stephen Childs and Brian Coghlan and David O'Callaghan
                 and Geoff Quigley and John Walsh",
  title =        "A Single-Computer {Grid} Gateway Using Virtual
                 Machines",
  crossref =     "Shih:2005:ICA",
  pages =        "310--315",
  year =         "2005",
  DOI =          "http://dx.doi.org/10.1109/AINA.2005.65",
  bibdate =      "Sat Oct 14 15:27:50 2006",
  abstract =     "Grid middleware is enabling resource sharing between
                 computing centres across the world and sites with
                 existing clusters are eager to connect to the Grid
                 using middleware such as that developed by the LHC
                 Computing Grid (LCG) project. However; the hardware
                 requirements for access to the Grid remain high: a
                 standard LCG Grid gateway requires four separate
                 servers. We propose the use of Virtual Machine (VM)
                 technology to run multiple OS instances, allowing a
                 full Grid gateway to be hosted on a single computer.
                 This would significantly reduce the hardware,
                 installation and management commitments required of a
                 site that wants to connect to the Grid. In this paper,
                 we outline the architecture of a single-computer Grid
                 gateway. We evaluate implementations of this
                 architecture using two popular open-source VMs: Xen and
                 User-Mode Linux (UML). Our results show that Xen
                 outperforms UML for installation tasks and standard
                 gateway operations. Configuration is similar to that of
                 sites running multi-computer gateways, making it easy
                 to keep site installation profiles Synchronised. Our VM
                 gateway architecture provides a low-cost entry path to
                 the Grid and will be of interest to many institutions
                 wishing to connect their existing facilities.",
  acknowledgement = ack-nhfb,
}

@Book{Clark:2005:SVT,
  author =       "Tom Clark",
  title =        "Storage virtualization: technologies for simplifying
                 data storage and management",
  publisher =    pub-AW,
  address =      pub-AW:adr,
  pages =        "xvii + 234",
  year =         "2005",
  ISBN =         "0-321-26251-4",
  ISBN-13 =      "978-0-321-26251-6",
  LCCN =         "QA76.9.V5 C55 2005",
  bibdate =      "Thu Jan 21 14:10:53 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  subject =      "Virtual storage (Computer science); Information
                 storage and retrieval systems; Database management",
}

@Book{Craig:2005:VM,
  author =       "Iain D. Craig",
  title =        "Virtual machines",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  pages =        "xv + 269",
  year =         "2005",
  ISBN =         "1-85233-969-1",
  ISBN-13 =      "978-1-85233-969-2",
  LCCN =         "QA76.9 CRA",
  bibdate =      "Thu Jul 14 12:01:15 MDT 2005",
  bibsource =    "library.ox.ac.uk:210/ADVANCE;
                 z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  libnote =      "Not in my library.",
  subject =      "Virtual computer systems; Parallel processing",
}

@Book{ECMA-335-3,
  author =       "{ECMA}",
  title =        "{ECMA-335}: {Common Language Infrastructure (CLI)}",
  publisher =    pub-ECMA,
  address =      pub-ECMA:adr,
  edition =      "Third",
  pages =        "viii + 104 (Part I), viii + 192 (Part II), iv + 138
                 (Part III), ii + 20 (Part IV), i + 4 (Part V), ii + 60
                 (Part VI)",
  month =        jun,
  year =         "2005",
  bibdate =      "Thu Apr 20 10:08:14 2006",
  bibsource =    "http://www.ecma-international.org/publications/standards/Standard.htm",
  URL =          "http://www.ecma.ch/ecma1/STAND/ecma-335.htm;
                 http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-335.pdf;
                 http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-335-xml.zip",
  acknowledgement = ack-nhfb,
  ECMAnumber =   "ECMA-335",
  remark =       "Also ISO/IEC 23271.",
}

@MastersThesis{Fredriksen:2005:UUV,
  author =       "Kai Fredriksen",
  title =        "{UMLexe} --- {UML} virtual machine: a framework for
                 model execution",
  type =         "Masteroppgave i informatikk",
  school =       "Universitetet i Oslo",
  address =      "Oslo, Norway",
  pages =        "122",
  year =         "2005",
  bibdate =      "Mon Apr 10 11:25:42 2006",
  acknowledgement = ack-nhfb,
}

@Book{Gibbs:2005:APV,
  editor =       "G. Benton Gibbs and others",
  title =        "Advanced {POWER} virtualization on {IBM eserver p5}
                 servers. Architecture and performance considerations",
  publisher =    pub-IBM,
  address =      pub-IBM:adr,
  edition =      "Second",
  pages =        "xvi + 412",
  year =         "2005",
  ISBN =         "0-7384-9238-8 (paperback)",
  ISBN-13 =      "978-0-7384-9238-4 (paperback)",
  LCCN =         "QA76.9.V5 A377 2005",
  bibdate =      "Thu Jan 21 14:08:33 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "IBM redbooks",
  URL =          "http://www.loc.gov/catdir/toc/fy0608/2006275016.html",
  acknowledgement = ack-nhfb,
  remark =       "This edition applies to IBM eserver p5 servers that
                 include the POWER5 microprocessor architecture and the
                 IBM AIX 5L version 5.3 operating system.",
  subject =      "Virtual computer systems",
}

@MastersThesis{Hinkelmann:2008:EKM,
  author =       "Matthias Hinkelmann",
  title =        "{Evaluation von KVM als m{\"o}glichen Ersatz f{\"u}r
                 XEN (MI08)}",
  type =         "{Bachelor} Thesis",
  school =       "Hochschule",
  address =      "Stuttgart, Germany",
  pages =        "85",
  year =         "2008",
  bibdate =      "Mon Sep 13 11:51:28 2010",
  acknowledgement = ack-nhfb,
}

@InProceedings{Ho:2005:DPD,
  author =       "Alex Ho and Steven Hand",
  title =        "On the design of a pervasive debugger",
  crossref =     "ACM:2005:APS",
  pages =        "117--122",
  year =         "2005",
  DOI =          "http://doi.acm.org/10.1145/1085130.1085146",
  bibdate =      "Sat Oct 14 15:23:00 2006",
  abstract =     "Increased reuse of software components has led to a
                 software mishmash as existing packages are used as
                 building blocks for new systems. Current debuggers
                 cannot cope with the intricate interactions between
                 components written in different languages and spread
                 over multiple hosts. This paper explores the design of
                 a pervasive debugger for concurrent and distributed
                 applications. By executing the target in a virtualized
                 environment, the debugger can atomically control the
                 entire application, stopping and examining each
                 component in a consistent state. Developers can
                 simultaneously control multiple heterogeneous targets
                 located anywhere in the software hierarchy.",
  acknowledgement = ack-nhfb,
}

@Book{ISO:2005:IIIa,
  author =       "{International Organization for Standardization}",
  title =        "{ISO\slash IEC 23271:2003}: Information technology ---
                 Common Language Infrastructure",
  publisher =    pub-ISO,
  address =      pub-ISO:adr,
  pages =        "xi + 99 (Part. I), ix + 164 (Part. II), vi + 125
                 (Part. III), iii + 16 (Part. IV), iv + 79 (Part. V)",
  year =         "2005",
  ISBN =         "????",
  ISBN-13 =      "????",
  LCCN =         "????",
  bibdate =      "Mon Mar 13 18:31:49 2006",
  price =        "328 Sfr (print)",
  URL =          "http://www.iso.org/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER=36769;
                 http://standards.iso.org/ittf/PubliclyAvailableStandards/c036769_ISO_IEC_23271_2003(E).zip",
  acknowledgement = ack-nhfb,
}

@Book{ISO:2005:IIIb,
  author =       "{International Organization for Standardization}",
  title =        "{ISO\slash IEC TR 23272}: Information technology ---
                 Common Language Infrastructure --- Profiles and
                 Libraries",
  publisher =    pub-ISO,
  address =      pub-ISO:adr,
  pages =        "6",
  year =         "2005",
  ISBN =         "????",
  ISBN-13 =      "????",
  LCCN =         "????",
  bibdate =      "Mon Mar 13 18:31:49 2006",
  price =        "328 Sfr (print)",
  URL =          "http://www.iso.org/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER=36770;
                 http://standards.iso.org/ittf/PubliclyAvailableStandards/c036770_ISO_IEC_TR_23272_2003(E).zip",
  acknowledgement = ack-nhfb,
}

@Book{Jacob:2005:DOE,
  editor =       "Bart Jacob and others",
  title =        "On demand Operating Environment: managing the
                 infrastructure (virtualization engine update)",
  publisher =    pub-IBM,
  address =      pub-IBM:adr,
  edition =      "Second",
  pages =        "xxiv + 364",
  year =         "2005",
  ISBN =         "0-7384-9124-1 (paperback)",
  ISBN-13 =      "978-0-7384-9124-0 (paperback)",
  LCCN =         "QA76.754 .O5 2005",
  bibdate =      "Thu Jan 21 14:09:26 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "IBM redbooks",
  acknowledgement = ack-nhfb,
  remark =       "June 2005.",
  subject =      "Computer software; Management; Business; Computer
                 programs; Electronic commerce",
}

@Article{Joshi:2005:DPP,
  author =       "Ashlesha Joshi and Samuel T. King and George W. Dunlap
                 and Peter M. Chen",
  title =        "Detecting past and present intrusions through
                 vulnerability-specific predicates",
  journal =      j-OPER-SYS-REV,
  volume =       "39",
  number =       "5",
  pages =        "91--104",
  month =        dec,
  year =         "2005",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1095810.1095820",
  ISSN =         "0163-5980",
  bibdate =      "Sat Aug 26 08:55:58 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Most systems contain software with
                 yet-to-be-discovered security vulnerabilities. When a
                 vulnerability is disclosed, administrators face the
                 grim reality that they have been running software which
                 was open to attack. Sites that value availability may
                 be forced to continue running this vulnerable software
                 until the accompanying patch has been tested. Our goal
                 is to improve security by detecting intrusions that
                 occurred before the vulnerability was disclosed and by
                 detecting and responding to intrusions that are
                 attempted after the vulnerability is disclosed. We
                 detect when a vulnerability is triggered by executing
                 vulnerability-specific predicates as the system runs or
                 replays. This paper describes the design,
                 implementation and evaluation of a system that supports
                 the construction and execution of these
                 vulnerability-specific predicates. Our system, called
                 IntroVirt, uses virtual-machine introspection to
                 monitor the execution of application and operating
                 system software. IntroVirt executes predicates over
                 past execution periods by combining virtual-machine
                 introspection with virtual-machine replay. IntroVirt
                 eases the construction of powerful predicates by
                 allowing predicates to run existing target code in the
                 context of the target system, and it uses checkpoints
                 so that predicates can execute target code without
                 perturbing the state of the target system. IntroVirt
                 allows predicates to refresh themselves automatically
                 so they work in the presence of preemptions. We show
                 that vulnerability-specific predicates can be written
                 easily for a wide variety of real vulnerabilities, can
                 detect and respond to intrusions over both the past and
                 present time intervals, and add little overhead for
                 most vulnerabilities.",
  acknowledgement = ack-nhfb,
}

@InProceedings{Kaneda:2005:VMM,
  author =       "Kenji Kaneda and Yoshihiro Oyama and Akinori
                 Yonezawa",
  title =        "A virtual machine monitor for utilizing non-dedicated
                 clusters",
  crossref =     "Vrable:2005:SPA",
  pages =        "1--11",
  year =         "2005",
  DOI =          "http://doi.acm.org/10.1145/1095810.1118618",
  bibdate =      "Sat Oct 14 16:49:46 2006",
  abstract =     "We have designed and implemented a virtual machine
                 monitor (VMM) for utilizing non-dedicated clusters. The
                 VMM virtualizes a shared-memory multi-processor machine
                 on a commodity cluster. In addition, it hides dynamic
                 changes of physical hardware configurations. The
                 experimental result demonstrates the feasibility of our
                 approach.",
  acknowledgement = ack-nhfb,
}

@InProceedings{LeVasseur:2005:PVU,
  author =       "Joshua LeVasseur and Volkmar Uhlig and Ben Leslie and
                 Matthew Chapman and Gernot Heiser",
  title =        "Pre-virtualization: uniting two worlds",
  crossref =     "Vrable:2005:SPA",
  pages =        "1--2",
  year =         "2005",
  DOI =          "http://doi.acm.org/10.1145/1095810.1118604",
  bibdate =      "Sat Oct 14 14:47:51 2006",
  abstract =     "Virtual machines are used in an increasingly varied
                 set of application scenarios that favor different
                 trade-offs. The virtual machine (VM) is an attractive
                 solution, since it enables the use of the same
                 operating systems across the scenarios, while
                 permitting substitution of different hypervisors
                 appropriate for the trade-offs. One of these scenarios
                 is server consolidation, where a number of machines are
                 replaced by VMs running on a single physical machine,
                 increasing resource utilization. Another attractive
                 scenario is the use of a VM to add features to an OS
                 that contradict the design of the OS, such as enabling
                 secure computing platforms with strictly controlled
                 information flow. These two scenarios have dramatically
                 different performance versus security trade offs,
                 easily addressed by using different hypervisors.",
  acknowledgement = ack-nhfb,
}

@PhdThesis{Liang:2005:DLM,
  author =       "Jiangang Liang",
  title =        "Development of logical models for {CNC} machine tool
                 motion control system with application to virtual
                 machine tool design",
  type =         "Dissertations (Ph.D.)",
  school =       "University of California, Davis",
  address =      "Davis, CA, USA",
  month =        mar,
  year =         "2005",
  bibdate =      "Mon Apr 10 11:29:09 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  URL =          "http://uclibs.org/PID/11984",
  acknowledgement = ack-nhfb,
}

@InProceedings{Lin:2005:VMB,
  author =       "Bin Lin and Peter A. Dinda",
  title =        "{VSched}: Mixing Batch And Interactive Virtual
                 Machines Using Periodic Real-time Scheduling",
  crossref =     "ACM:2005:PAI",
  pages =        "8--??",
  year =         "2005",
  DOI =          "http://dx.doi.org/10.1109/SC.2005.80",
  bibdate =      "Sat Oct 14 15:09:27 2006",
  abstract =     "We are developing Virtuoso, a system for distributed
                 computing using virtual machines (VMs). Virtuoso must
                 be able to mix batch und interactive VMs on the same
                 physical hardware, while satisfying constraint on
                 responsiveness and compute rates for each workload.
                 VSched is the component of Virtuoso that provides this
                 capability. VSched is an entirely user-level tool that
                 interacts with the stock Linux kernel running below any
                 type-11 virtual machine monitor to schedule VMs
                 (indeed, any process) using a periodic real-time
                 scheduling model. This abstraction allows compute rate
                 and responsiveness constraints to be straightforwardly
                 described using a period und a slice within the period,
                 and it allows,for just and simple admission control.
                 This paper makes the case,for periodic real-time
                 scheduling for VM-based computing environments, and
                 then describes and evaluate.s VSched. It also applies
                 VSched to scheduling parallel workloads, showing that
                 it can help a BSP application maintain a fixed stable
                 performance despite externally caused loud imbalance.",
  acknowledgement = ack-nhfb,
}

@InProceedings{Lucchetti:2005:EDR,
  author =       "Dominic Lucchetti and Steven K. Reinhardt and Peter M.
                 Chen",
  title =        "{ExtraVirt}: detecting and recovering from transient
                 processor faults",
  crossref =     "Vrable:2005:SPA",
  pages =        "1--8",
  year =         "2005",
  DOI =          "http://doi.acm.org/10.1145/1095810.1118621",
  bibdate =      "Sat Oct 14 15:20:04 2006",
  abstract =     "Reliability is becoming an increasingly important
                 issue in modern processor design. Smaller feature sizes
                 and more numerous transistors are projected to increase
                 the frequency of transient faults [4, 5]. Our project,
                 ExtraVirt, leverages the trend toward multi-core and
                 multi-processor systems to survive these transient
                 faults. Our goals are (1) to add fault tolerance
                 without modifying existing operating systems,
                 applications or hardware, (2) to minimize the time
                 spent executing software that cannot tolerate faults,
                 and (3) to minimize the time and space overhead needed
                 to detect and recover from faults. We accomplish these
                 goals by leveraging virtual-machine technology and by
                 sharing memory and I/O devices across replicas.
                 ExtraVirt extends prior work on VM-level fault
                 tolerance[2] by detecting and recovering from
                 non-fail-stop faults and by running multiple replicas
                 efficiently on a single machine.",
  acknowledgement = ack-nhfb,
}

@Book{Matthys:2005:IVE,
  author =       "Christian Matthys and Hiroshi Ito and Bill Souhrada
                 and Lynn Winkelbauer and Holger M Wittmann and others",
  title =        "{IBM} virtualization engine, version 1: planning and
                 installation guide",
  publisher =    pub-IBM,
  address =      pub-IBM:adr,
  pages =        "xvi + 398",
  year =         "2005",
  ISBN =         "0-7384-9277-9",
  ISBN-13 =      "978-0-7384-9277-3",
  LCCN =         "MLCM 2006/42092 (Q)",
  bibdate =      "Thu Jan 21 14:08:41 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "IBM redbooks",
  acknowledgement = ack-nhfb,
}

@InProceedings{Menon:2005:DPO,
  author =       "Aravind Menon and Jose Renato Santos and Yoshio Turner
                 and G. (John) Janakiraman and Willy Zwaenepoel",
  title =        "Diagnosing performance overheads in the xen virtual
                 machine environment",
  crossref =     "ACM:2005:PFA",
  pages =        "13--23",
  year =         "2005",
  DOI =          "http://doi.acm.org/10.1145/1064979.1064984",
  bibdate =      "Sat Oct 14 13:39:15 2006",
  abstract =     "Virtual Machine (VM) environments (e.g., VMware and
                 Xen) are experiencing a resurgence of interest for
                 diverse uses including server consolidation and shared
                 hosting. An application's performance in a virtual
                 machine environment can differ markedly from its
                 performance in a non-virtualized environment because of
                 interactions with the underlying virtual machine
                 monitor and other virtual machines. However, few tools
                 are currently available to help debug performance
                 problems in virtual machine environments.In this paper,
                 we present Xenoprof, a system-wide statistical
                 profiling toolkit implemented for the Xen virtual
                 machine environment. The toolkit enables coordinated
                 profiling of multiple VMs in a system to obtain the
                 distribution of hardware events such as clock cycles
                 and cache and TLB misses. The toolkit will facilitate a
                 better understanding of performance characteristics of
                 Xen's mechanisms allowing the community to optimize the
                 Xen implementation.We use our toolkit to analyze
                 performance overheads incurred by networking
                 applications running in Xen VMs. We focus on networking
                 applications since virtualizing network I/O devices is
                 relatively expensive. Our experimental results quantify
                 Xen's performance overheads for network I/O device
                 virtualization in uni- and multi-processor systems.
                 With certain Xen configurations, networking workloads
                 in the Xen environment can suffer significant
                 performance degradation. Our results identify the main
                 sources of this overhead which should be the focus of
                 Xen optimization efforts. We also show how our
                 profiling toolkit was used to uncover and resolve
                 performance bugs that we encountered in our experiments
                 which caused unexpected application behavior.",
  acknowledgement = ack-nhfb,
}

@Book{Muller:2005:VVE,
  editor =       "Al Muller and Seburn Wilson and Don Happe and Gary J.
                 Humphrey",
  title =        "Virtualization with {VMware ESX Server}",
  publisher =    pub-SYNGRESS,
  address =      pub-SYNGRESS:adr,
  pages =        "xxiii + 463",
  year =         "2005",
  ISBN =         "1-59749-019-9",
  ISBN-13 =      "978-1-59749-019-1",
  LCCN =         "QA76.76.O63 V465 2005; QA76.9.V5 V57 2005eb",
  bibdate =      "Sat Oct 14 17:21:38 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  URL =          "http://site.ebrary.com/lib/ucsc/Doc?id=10110269",
  acknowledgement = ack-nhfb,
  subject =      "VMware; Virtual computer systems",
}

@Book{Oglesby:2005:VES,
  author =       "Ron Oglesby and Scott Herold",
  title =        "{VMware ESX Server}: Advanced Technical Design Guide",
  publisher =    "Brian Madden Publishing",
  address =      "Silver Spring, MD, USA",
  pages =        "444",
  year =         "2005",
  ISBN =         "0-9711510-6-7",
  ISBN-13 =      "978-0-9711510-6-2",
  LCCN =         "QA76.9.V5 O35 2005eb; **See",
  bibdate =      "Sun Apr 9 15:35:45 MDT 2006",
  bibsource =    "library.mit.edu:9909/mit01",
  URL =          "http://library.books24x7.com/library.asp?B&bookid=12048",
  acknowledgement = ack-nhfb,
  subject =      "WMware; Virtual computer systems; Web servers",
}

@InProceedings{Sailer:2005:BMB,
  author =       "Reiner Sailer and Trent Jaeger and Enriquillo Valdez
                 and Ramon Caceres and Ronald Perez and Stefan Berger
                 and John Linwood Griffin and Leendert van Doorn",
  title =        "Building a {MAC}-Based Security Architecture for the
                 {Xen} Open-Source Hypervisor",
  crossref =     "IEEE:2005:PAC",
  pages =        "276--285",
  year =         "2005",
  DOI =          "http://dx.doi.org/10.1109/CSAC.2005.13",
  bibdate =      "Sat Oct 14 14:12:24 2006",
  abstract =     "We present the sHype hypervisor security architecture
                 and examine in detail its mandatory access control
                 facilities. While existing hypervisor security
                 approaches aiming at high assurance have been proven
                 useful for high-security environments that prioritize
                 security over performance and code reuse, our approach
                 aims at commercial security where near-zero performance
                 overhead, non-intrusive implementation, and usability
                 are of paramount importance. sHype enforces strong
                 isolation at the granularity of a virtual machine, thus
                 providing a robust foundation on which higher software
                 layers can enact finer-grained controls. We provide the
                 rationale behind the sHype design and describe and
                 evaluate our implementation for the Xen open-source
                 hypervisor.",
  acknowledgement = ack-nhfb,
}

@Book{Smith:2005:VMV,
  author =       "James E. (James Edward) Smith and Ravi Nair",
  title =        "Virtual machines: versatile platforms for systems and
                 processes",
  publisher =    pub-MORGAN-KAUFMANN,
  address =      pub-MORGAN-KAUFMANN:adrsf,
  pages =        "xxii + 638",
  year =         "2005",
  ISBN =         "1-55860-910-5",
  ISBN-13 =      "978-1-55860-910-5",
  LCCN =         "QA76.9.V5 S54 2005",
  bibdate =      "Thu Jul 21 08:04:00 2005",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://books.elsevier.com/us/bookscat/search/details.asp?country=United+States&community=mk&imprint=Morgan+Kaufmann&isbn=1558609105",
  acknowledgement = ack-nhfb,
  subject =      "Virtual computer systems; Computer architecture;
                 System design",
}

@Article{Treese:2005:VVE,
  author =       "Win Treese",
  title =        "Virtualization virtually everywhere",
  journal =      "{netWorker}",
  volume =       "9",
  number =       "2",
  address =      "I'm writing this column in April. Like many people,
                 I'm using Intuit's TurboTax to prepare my income-tax
                 forms. But I'm using TurboTax in a somewhat unusual
                 way: running it on a virtual machine. TurboTax normally
                 runs on Microsoft Windows, but the computer I want to
                 use runs Linux. To make this all work, I'm using a
                 program called VMware that provides the illusion of an
                 entire separate computer on which Windows can run. From
                 the point of view of the Linux system, VMware is just
                 another application with just another window on the
                 screen. The Windows software sees a full computer, and
                 it can't really tell the difference between the virtual
                 environment and the real one.",
  pages =        "13--15",
  month =        jun,
  year =         "2005",
  DOI =          "http://doi.acm.org/10.1145/1065368.1065378",
  bibdate =      "Sat Oct 14 16:58:00 2006",
  acknowledgement = ack-nhfb,
}

@Book{Warren:2005:VWH,
  author =       "Steven S. Warren",
  title =        "The {VMWare Workstation 5} Handbook",
  publisher =    "Charles River Media",
  address =      "Hingham, MA, USA",
  pages =        "xvii + 334",
  year =         "2005",
  ISBN =         "1-58450-393-9",
  ISBN-13 =      "978-1-58450-393-4",
  LCCN =         "QA76.76.O63 W3665 2005",
  bibdate =      "Sun Apr 09 15:40:54 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/toc/ecip0510/2005010053.html",
  acknowledgement = ack-nhfb,
  subject =      "VMware; operating systems (computers); virtual
                 computer systems",
}

@Book{Wolf:2005:VDE,
  author =       "Chris Wolf and Erick M. Halter",
  title =        "Virtualization: from the desktop to the enterprise",
  publisher =    pub-APRESS,
  address =      pub-APRESS:adr,
  pages =        "xxxiv + 559",
  year =         "2005",
  ISBN =         "1-59059-495-9",
  ISBN-13 =      "978-1-59059-495-7",
  LCCN =         "QA76.76.O63 W614 2005",
  bibdate =      "Sat Oct 14 17:21:39 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "The expert's voice in networking",
  URL =          "http://www.loc.gov/catdir/enhancements/fy0663/2006296449-d.html",
  acknowledgement = ack-nhfb,
  remark =       "Learn to deploy and manage virtual machines, clusters,
                 distributed file systems, and virtual storage in the
                 first book to cover the entire realm of virtualization.
                 Includes Windows and Linux VMware workstation
                 evaluation software.",
  subject =      "Operating systems (Computers); VMware; Computer
                 networks",
}

@InProceedings{Zhang:2005:FVM,
  author =       "Yuting Zhang and Azer Bestavros and Mina Guirguis and
                 Ibrahim Matta and Richard West",
  title =        "Friendly virtual machines: leveraging a
                 feedback-control model for application adaptation",
  crossref =     "ACM:2005:PFA",
  pages =        "2--12",
  year =         "2005",
  DOI =          "http://doi.acm.org/10.1145/1064979.1064983",
  bibdate =      "Sat Oct 14 14:53:52 2006",
  abstract =     "With the increased use of ``Virtual Machines'' (VMs)
                 as vehicles that isolate applications running on the
                 same host, it is necessary to devise techniques that
                 enable multiple VMs to share underlying resources both
                 fairly and efficiently. To that end, one common
                 approach is to deploy complex resource management
                 techniques in the hosting infrastructure. Alternately,
                 in this paper, we advocate the use of self-adaptation
                 in the VMs themselves based on feedback about resource
                 usage and availability. Consequently, we define
                 ``Friendly'' VM (FVM) to be a virtual machine that
                 adjusts its demand for system resources, so that they
                 are both efficiently and fairly allocated to competing
                 FVMs. Such properties are ensured using one of many
                 provably convergent control rules, such as
                 Additive-Increase/Multiplicative-Decrease (AIMD). By
                 adopting this distributed application-based approach to
                 resource management, it is not necessary to make
                 assumptions about the underlying resources nor about
                 the requirements of FVMs competing for these resources.
                 To demonstrate the elegance and simplicity of our
                 approach, we present a prototype implementation of our
                 FVM framework in User-Mode Linux (UML)---an
                 implementation that consists of less than 500 lines of
                 code changes to UML. We present an analytic,
                 control-theoretic model of FVM adaptation, which
                 establishes convergence and fairness properties. These
                 properties are also backed up with experimental results
                 using our prototype FVM implementation.",
  acknowledgement = ack-nhfb,
}

@InProceedings{Zhao:2005:SSV,
  author =       "Xin Zhao and Kevin Borders and Atul Prakash",
  title =        "{SVGrid}: a secure virtual environment for untrusted
                 grid applications",
  crossref =     "ACM:2005:MPI",
  pages =        "1--6",
  year =         "2005",
  DOI =          "http://doi.acm.org/10.1145/1101499.1101515",
  bibdate =      "Sat Oct 14 13:51:00 2006",
  abstract =     "Most grid security researches focus on user
                 authentication and secure communication, the protection
                 of grid computers is left to the underlying operating
                 system. Unfortunately, most OS level protection
                 mechanisms can be turned off after an attacker manages
                 to exploit a vulnerability to gain privileged
                 access.This paper proposes SVGrid, a Secure Virtual
                 Grid computing environment, to protect grid computers'
                 filesystem and network from malicious grid
                 applications. SVGrid works by isolating grid
                 applications in one or more grid virtual machines whose
                 filesystem and network service are moved into a
                 dedicated monitor virtual machine. All file and network
                 access requests are then forced to go through the
                 monitor virtual machine, where security policies can be
                 enforced. The resource compartment guarantees that
                 appropriate security policy enforcement cannot be
                 bypassed or disabled, even if a grid virtual machine is
                 compromised. We tested SVGrid against attacks on grid
                 virtual machine using rootkit and Internet worm, SVGrid
                 was able to prevent both of them from maliciously
                 accessing filesystem and network. We also evaluated the
                 performance of SVGrid system and only found that
                 performance cost was reasonable considering the
                 security benefits of SVGrid.",
  acknowledgement = ack-nhfb,
}

@Book{Zimmer:2005:VMV,
  author =       "Dennis Zimmer",
  title =        "{VMware and Microsoft Virtual Server: virtuelle Server
                 im professionellen Einsatz; [VMware GSX, ESX und
                 Microsoft Virtual Server; Virtualisierungssoftware im
                 Vergleich; Planung, Installation und Verwaltung]}",
  publisher =    "Galileo Press",
  address =      "Bonn, Germany",
  pages =        "612",
  year =         "2005",
  ISBN =         "3-89842-701-3",
  ISBN-13 =      "978-3-89842-701-2",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 17:21:53 MDT 2006",
  bibsource =    "z3950.gbv.de:20011/gvk",
  price =        "EUR 49.90",
  series =       "Galileo Computing",
  URL =          "http://www.galileocomputing.de",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Microsoft Virtual Server; VMware GSX Server; VMware
                 ESX Server; Virtuelle Maschine; Unternehmen;
                 Virtualisierung; Softwareprodukt",
}

@Article{Abramson:2006:IVT,
  author =       "Darren Abramson and Jeff Jackson and Sridhar
                 Muthrasanallur and Gil Neiger and Greg Regnier and
                 Rajesh Sankaran and Ioannis Schoinas and Rich Uhlig and
                 Balaji Vembu and John Weigert",
  title =        "{Intel Virtualization Technology} for Directed {I/O}",
  journal =      j-INTEL-TECH-J,
  volume =       "10",
  number =       "3",
  pages =        "179--192",
  day =          "10",
  month =        aug,
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1535/itj.1003",
  ISSN =         "1535-766X",
  bibdate =      "Tue Oct 17 09:02:57 2006",
  bibsource =    "ftp://download.intel.com/technology/itj/2006/v10i3/v10_iss03.pdf",
  URL =          "http://developer.intel.com/technology/itj/2006/v10i3/2-io/1-abstract.htm",
  acknowledgement = ack-nhfb,
}

@Article{Adams:2006:CSH,
  author =       "Keith Adams and Ole Agesen",
  title =        "A comparison of software and hardware techniques for
                 {x86} virtualization",
  journal =      j-OPER-SYS-REV,
  volume =       "40",
  number =       "5",
  pages =        "2--13",
  month =        dec,
  year =         "2006",
  CODEN =        "OSRED8",
  ISSN =         "0163-5980",
  bibdate =      "Fri Oct 27 06:18:30 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Article{Anonymous:2006:TR,
  author =       "Anonymous",
  title =        "Technical Reviewers",
  journal =      j-INTEL-TECH-J,
  volume =       "10",
  number =       "3",
  pages =        "vii--vii",
  day =          "10",
  month =        aug,
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1535/itj.1003",
  ISSN =         "1535-766X",
  bibdate =      "Tue Oct 17 09:02:57 2006",
  bibsource =    "ftp://download.intel.com/technology/itj/2006/volume10issue02/vol10_iss03.pdf",
  URL =          "",
  acknowledgement = ack-nhfb,
}

@InProceedings{Asrigo:2006:UVB,
  author =       "Kurniadi Asrigo and Lionel Litty and David Lie",
  title =        "Using {VMM}-based sensors to monitor honeypots",
  crossref =     "ACM:2006:VPS",
  pages =        "13--23",
  year =         "2006",
  DOI =          "http://doi.acm.org/10.1145/1134760.1134765",
  bibdate =      "Sat Oct 14 13:49:31 2006",
  abstract =     "Virtual Machine Monitors (VMMs) are a common tool for
                 implementing honeypots. In this paper we examine the
                 implementation of a VMM-based intrusion detection and
                 monitoring system for collecting information about
                 attacks on honeypots. We document and evaluate three
                 designs we have implemented on two open-source
                 virtualization platforms: User-Mode Linux and Xen. Our
                 results show that our designs give the monitor good
                 visibility into the system and thus, a small number of
                 monitoring sensors can detect a large number of
                 intrusions. In a three month period, we were able to
                 detect five different attacks, as well as collect and
                 try 46 more exploits on our honeypots. All attacks were
                 detected with only two monitoring sensors. We found
                 that the performance overhead for monitoring such
                 intrusions is independent of which events are being
                 monitored, but depends entirely on the number of
                 monitoring events and the underlying monitoring
                 implementation. The performance overhead can be
                 significantly improved by implementing the monitor
                 directly in the privileged code of the VMM, though at
                 the cost of increasing the size of the trusted
                 computing base of the system.",
  acknowledgement = ack-nhfb,
}

@Article{Bartholomew:2006:QMM,
  author =       "Daniel Bartholomew",
  title =        "{QEMU}: a multihost, multitarget emulator",
  journal =      j-LINUX-J,
  volume =       "2006",
  number =       "145",
  pages =        "??--??",
  month =        may,
  year =         "2006",
  CODEN =        "LIJOFX",
  ISSN =         "1075-3583",
  bibdate =      "Wed Aug 23 06:09:27 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Book{Bastiaansen:2006:RGU,
  author =       "Rob Bastiaansen",
  title =        "{Rob}'s Guide to Using {VMWARE}",
  publisher =    "Books4Brains",
  address =      "????",
  edition =      "Second",
  pages =        "350 (est.)",
  year =         "2006",
  ISBN =         "90-808934-1-2",
  ISBN-13 =      "978-90-808934-1-2",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 17:57:33 2006",
  bibsource =    "http://www.comcol.nl/detail/55734.htm",
  acknowledgement = ack-nhfb,
}

@Article{Bauer:2006:PPSa,
  author =       "Mick Bauer",
  title =        "Paranoid penguin: security features in {SUSE 10.0}",
  journal =      j-LINUX-J,
  volume =       "2006",
  number =       "144",
  pages =        "??--??",
  month =        apr,
  year =         "2006",
  CODEN =        "LIJOFX",
  ISSN =         "1075-3583",
  bibdate =      "Fri Apr 14 08:17:48 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  keywords =     "virtual Machines in SUSE Linux",
}

@Article{Bauer:2006:PPSb,
  author =       "Mick Bauer",
  title =        "Paranoid penguin: security features in {Debian 3.1}",
  journal =      j-LINUX-J,
  volume =       "2006",
  number =       "145",
  pages =        "??--??",
  month =        may,
  year =         "2006",
  CODEN =        "LIJOFX",
  ISSN =         "1075-3583",
  bibdate =      "Wed Aug 23 06:09:27 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  keywords =     "virtual machines in Debian",
}

@Article{Bauer:2006:VWL,
  author =       "Mick Bauer",
  title =        "{VMware Workstation 5.5} for {Linux} hosts",
  journal =      j-LINUX-J,
  volume =       "2006",
  number =       "145",
  pages =        "??--??",
  month =        may,
  year =         "2006",
  CODEN =        "LIJOFX",
  ISSN =         "1075-3583",
  bibdate =      "Wed Aug 23 06:09:27 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Article{Bellovin:2006:IRV,
  author =       "Steven M. Bellovin",
  title =        "Inside risks: Virtual machines, virtual security?",
  journal =      j-CACM,
  volume =       "49",
  number =       "10",
  pages =        "104--104",
  month =        oct,
  year =         "2006",
  CODEN =        "CACMA2",
  DOI =          "http://doi.acm.org/10.1145/1164394.1164414",
  ISSN =         "0001-0782",
  bibdate =      "Fri Sep 29 06:28:21 MDT 2006",
  bibsource =    "http://www.acm.org/pubs/contents/journals/cacm/",
  acknowledgement = ack-nhfb,
}

@Article{Bockisch:2006:AVM,
  author =       "Christoph Bockisch and Matthew Arnold and Tom
                 Dinkelaker and Mira Mezini",
  title =        "Adapting virtual machine techniques for seamless
                 aspect support",
  journal =      j-SIGPLAN,
  volume =       "41",
  number =       "12",
  pages =        "109--124",
  month =        dec,
  year =         "2006",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Tue Oct 24 06:22:42 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  keywords =     "virtual machine",
}

@Article{Bockisch:2006:ECF,
  author =       "Christoph Bockisch and Sebastian Kanthak and Michael
                 Haupt and Matthew Arnold and Mira Mezini",
  title =        "Efficient control flow quantification",
  journal =      j-SIGPLAN,
  volume =       "41",
  number =       "12",
  pages =        "125--138",
  month =        dec,
  year =         "2006",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Tue Oct 24 06:22:42 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  keywords =     "virtual machine",
}

@InProceedings{Bullers:2006:VMI,
  author =       "William I. {Bullers, Jr}. and Stephen Burd and
                 Alessandro F. Seazzu",
  title =        "Virtual machines --- an idea whose time has returned:
                 application to network, security, and database
                 courses",
  crossref =     "ACM:2006:PST",
  pages =        "102--106",
  year =         "2006",
  DOI =          "http://doi.acm.org/10.1145/1121341.1121375",
  bibdate =      "Sat Oct 14 15:13:55 2006",
  abstract =     "Virtual machines provide a secure environment within
                 which students may install, configure, and experiment
                 with operating system, network, and database software.
                 This paper describes experiences teaching three
                 advanced courses in system and network administration,
                 information security and assurance, and database
                 administration using VMware workstation in a shared
                 student laboratory. The paper describes benefits and
                 challenges in course and lab configuration, security,
                 and administration.",
  acknowledgement = ack-nhfb,
}

@Book{Carbone:2006:WSH,
  author =       "Janique Carbone",
  title =        "{Windows Server 2008 Hyper-V} resource kit",
  publisher =    pub-MICROSOFT,
  address =      pub-MICROSOFT:adr,
  pages =        "????",
  year =         "2006",
  ISBN =         "0-7356-2517-4",
  ISBN-13 =      "978-0-7356-2517-4",
  LCCN =         "QA",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
}

@Article{Casazza:2006:RSP,
  author =       "Jeffrey P. Casazza and Michael Greenfield and Kan
                 Shi",
  title =        "Redefining Server Performance Characterization for
                 Virtualization Benchmarking",
  journal =      j-INTEL-TECH-J,
  volume =       "10",
  number =       "3",
  pages =        "243--251",
  day =          "10",
  month =        aug,
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1535/itj.1003",
  ISSN =         "1535-766X",
  bibdate =      "Tue Oct 17 09:02:57 2006",
  bibsource =    "ftp://download.intel.com/technology/itj/2006/v10i3/v10_iss03.pdf",
  URL =          "http://developer.intel.com/technology/itj/2006/v10i3/7-benchmarking/1-abstract.htm",
  acknowledgement = ack-nhfb,
}

@InProceedings{Chen:2006:LUO,
  author =       "Haibo Chen and Rong Chen and Fengzhe Zhang and Binyu
                 Zang and Pen-Chung Yew",
  title =        "Live updating operating systems using virtualization",
  crossref =     "ACM:2006:VPS",
  pages =        "35--44",
  year =         "2006",
  DOI =          "http://doi.acm.org/10.1145/1134760.1134767",
  bibdate =      "Sat Oct 14 13:43:14 2006",
  abstract =     "Many critical IT infrastructures require
                 non-disruptive operations. However, the operating
                 systems thereon are far from perfect that patches and
                 upgrades are frequently applied, in order to close
                 vulnerabilities, add new features and enhance
                 performance. To mitigate the loss of availability, such
                 operating systems need to provide features such as live
                 update through which patches and upgrades can be
                 applied without having to stop and reboot the operating
                 system. Unfortunately, most current live updating
                 approaches cannot be easily applied to existing
                 operating systems: some are tightly bound to specific
                 design approaches (e.g. object-oriented); others can
                 only be used under particular circumstances (e.g.
                 quiescence states).In this paper, we propose using
                 virtualization to provide the live update capability.
                 The proposed approach allows a broad range of patches
                 and upgrades to be applied at any time without the
                 requirement of a quiescence state. Moreover, such
                 approach shares good portability for its
                 OS-transparency and is suitable for inclusion in
                 general virtualization systems. We present a working
                 prototype, LUCOS, which supports live update capability
                 on Linux running on Xen virtual machine monitor. To
                 demonstrate the applicability of our approach, we use
                 real-life kernel patches from Linux kernel 2.6.10 to
                 Linux kernel 2.6.11, and apply some of those kernel
                 patches on the fly. Performance measurements show that
                 our implementation incurs negligible performance
                 overhead: a less than 1\% performance degradation
                 compared to a Xen-Linux. The time to apply a patch is
                 also very minimal.",
  acknowledgement = ack-nhfb,
}

@Book{Chryselius:2006:DQE,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Debian unter Qemu Einf{\"u}hrung in das
                 Betriebssystem Debian Linux in der virtuellen Umgebung
                 Qemu unter Windows}. ({German}) [Debian under {Qemu}:
                 Introduction in the {Debian Linux} operating systems in
                 the {Qemu} virtual machine under {Windows}]",
  volume =       "17",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "159",
  year =         "2006",
  ISBN =         "3-86768-116-3 (book), 3-86768-716-1 (DVD)",
  ISBN-13 =      "978-3-86768-116-2 (book), 978-3-86768-716-4 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Debian GNU/LINUX 3.1; Windows XP; Qemu",
}

@Book{Chryselius:2006:IDQ,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Internetkommunikation in Debian unter Qemu
                 Einf{\"u}hrung in das Betriebssystem Debian Linux in
                 Qemu und Vorstellung der wichtigsten
                 Internetprogramme}. ({German}) [{Internet}
                 Communication in {Debian} under {Qemu}: Introduction in
                 the {Debian Linux} operating system in {Qemu} and
                 creation of the most important Internet programs]",
  volume =       "18",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "109",
  year =         "2006",
  ISBN =         "3-86768-117-1 (book), 3-86768-717-X (DVD)",
  ISBN-13 =      "978-3-86768-117-9 (book), 978-3-86768-717-1 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Internet; Computerunterst{\"u}tzte Kommunikation;
                 Debian GNU/LINUX 3.1; Qemu",
}

@Book{Chryselius:2006:IKQa,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Internetkommunikation in Kubuntu unter Qemu
                 Einf{\"u}hrung in das Betriebssystem Kubuntu und
                 Vorstellung von Internetprogrammen in der virtuellen
                 Umgebung Qemu}. ({German}) [{Internet} Communication in
                 {Kubuntu} under {Qemu}: Introduction to the {Kubuntu}
                 operating system and creation of {Internet} programs in
                 the {Qemu} virtual machine",
  volume =       "6",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "107",
  year =         "2006",
  ISBN =         "3-86768-105-8 (Buch), 3-86768-705-6 (DVD)",
  ISBN-13 =      "978-3-86768-105-6 (Buch), 978-3-86768-705-8 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Internet; Computerunterst{\"u}tzte Kommunikation;
                 Kubuntu (Program); Qemu",
}

@Book{Chryselius:2006:IKQb,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Internetkommunikation in Kanotix unter Qemu
                 Einf{\"u}hrung in das Betriebssystem Kanotix und
                 Vorstellung von Internetprogrammen in der virtuellen
                 Umgebung Qemu}",
  volume =       "34",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "114",
  year =         "2006",
  ISBN =         "3-86768-133-3 (book), 3-86768-733-1 (DVD)",
  ISBN-13 =      "978-3-86768-133-9 (book), 978-3-86768-733-1 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Internet; Computerunterst{\"u}tzte Kommunikation;
                 Kanotix; Qemu",
}

@Book{Chryselius:2006:IKQc,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Internetkommunikation in Knoppix unter Qemu
                 Einf{\"u}hrung in das Betriebssystem Knoppix und
                 Vorstellung von Internetprogrammen in der virtuellen
                 Umgebung Qemu}",
  volume =       "50",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "121",
  year =         "2006",
  ISBN =         "3-86768-149-X (book)",
  ISBN-13 =      "978-3-86768-149-0 (book)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Internet; Computerunterst{\"u}tzte Kommunikation;
                 Knoppix; Qemu",
}

@Book{Chryselius:2006:IOQ,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Internetkommunikation mit OpenSUSE unter Qemu:
                 Einf{\"u}hrung in das Betriebssystem OpenSUSE Linux und
                 Vorstellung von Internetprogrammen in der virtuellen
                 Umgebung Qemu}",
  volume =       "66",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "104",
  year =         "2006",
  ISBN =         "3-86768-165-1",
  ISBN-13 =      "978-3-86768-165-0",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
}

@Book{Chryselius:2006:IOV,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Internetkommunikation in OpenSUSE unter VMware [Qemu]
                 Einf{\"u}hrung in das Betriebssystem OpenSUSE Linux und
                 Vorstellung von Internetprogrammen in der virtuellen
                 Umgebung VMware}",
  volume =       "66",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "117",
  year =         "2006",
  ISBN =         "3-86768-165-1 (book)",
  ISBN-13 =      "978-3-86768-165-0 (book)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Internet; Computerunterst{\"u}tzte Kommunikation; SuSE
                 LINUX 10.2 OSS; Qemu",
}

@Book{Chryselius:2006:KLQa,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Knoppix Linux unter Qemu Einf{\"u}hrung in das
                 Betriebssystem Knoppix Linux in der virtuellen Umgebung
                 Qemu unter Windows}",
  volume =       "49",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "142",
  year =         "2006",
  ISBN =         "3-86768-148-1 (book), 3-86768-748-X (DVD)",
  ISBN-13 =      "978-3-86768-148-3 (book), 978-3-86768-748-5 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Knoppix; Windows XP; Qemu",
}

@Book{Chryselius:2006:KLQb,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Kanotix Linux unter Qemu Einf{\"u}hrung in das
                 Betriebssystem Kanotix Linux in der virtuellen Umgebung
                 Qemu unter Windows}",
  volume =       "33",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "156",
  year =         "2006",
  ISBN =         "3-86768-132-5 (book), 3-86768-732-3 (DVD)",
  ISBN-13 =      "978-3-86768-132-2 (book), 978-3-86768-732-4 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Kanotix; Windows XP; Qemu",
}

@Book{Chryselius:2006:KQE,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Kubuntu unter Qemu Einf{\"u}hrung in das
                 Betriebssystem Kubuntu Linux in der virtuellen Umgebung
                 Qemu}",
  volume =       "5",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "158",
  year =         "2006",
  ISBN =         "3-86768-104-X (book), 3-86768-704-8 (DVD)",
  ISBN-13 =      "978-3-86768-104-9 (book), 978-3-86768-704-1 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Kubuntu <Programm>; Windows XP; Qemu $2 swd",
}

@Book{Chryselius:2006:LDQ,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Lernprogramme in Debian unter Qemu Einf{\"u}hrung in
                 das Betriebssystem Debian und Vorstellung von
                 Lernprogrammen in der virtuellen Umgebung Qemu}",
  volume =       "19",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "141",
  year =         "2006",
  ISBN =         "3-86768-118-X (book), 3-86768-718-8 (DVD)",
  ISBN-13 =      "978-3-86768-118-6 (book), 978-3-86768-718-8 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Lernprogramm; Debian GNU/LINUX 3.1; Qemu",
}

@Book{Chryselius:2006:LKQa,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Lernprogramme in Knoppix unter Qemu Einf{\"u}hrung in
                 das Betriebssystem Knoppix und Vorstellung von
                 Lernprogrammen in der virtuellen Umgebung Qemu}",
  volume =       "51",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "145",
  year =         "2006",
  ISBN =         "3-86768-150-3 (book), 3-86768-750-1 (DVD)",
  ISBN-13 =      "978-3-86768-150-6 (book), 978-3-86768-750-8 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Lernprogramm; Knoppix; Qemu",
}

@Book{Chryselius:2006:LKQb,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Lernprogramme in Kanotix unter Qemu Einf{\"u}hrung in
                 das Betriebssystem Kanotix und Vorstellung von
                 Lernprogrammen in der virtuellen Umgebung Qemu}",
  volume =       "35",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "151",
  year =         "2006",
  ISBN =         "3-86768-134-1 (book), 3-86768-734-X (DVD)",
  ISBN-13 =      "978-3-86768-134-6 (book), 978-3-86768-734-8 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Lernprogramm; Kanotix; Qemu",
}

@Book{Chryselius:2006:LKQc,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Lernprogramme in Kubuntu unter Qemu Einf{\"u}hrung in
                 das Betriebssystem Kubuntu und Vorstellung von
                 Lernprogrammen in der virtuellen Umgebung Qemu}",
  volume =       "7",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "152",
  year =         "2006",
  ISBN =         "3-86768-106-6 (book), 3-86768-706-4 (DVD)",
  ISBN-13 =      "978-3-86768-106-3 (book), 978-3-86768-706-5 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Lernprogramm; Kubuntu <Programm>; Qemu",
}

@Book{Chryselius:2006:LOL,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Lernprogramme mit OpenSUSE Linux unter Qemu:
                 Einf{\"u}hrung in das Betriebssystem, OpenSUSE Linux
                 und Vorstellung von Lernprogrammen in der virtuellen
                 Umgebung Quemu}",
  volume =       "63",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "147",
  year =         "2006",
  ISBN =         "386768166X, 3867687665",
  ISBN-13 =      "978386768166797838676816679783867687661",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  remark =       "Auf dem Buchr{\"u}cken ``Lernsoftware in OpenSUSE
                 unter Qemu'' und Band 67.",
}

@Book{Chryselius:2006:OLQ,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{OpenSuSE Linux unter Qemu Einf{\"u}hrung in das
                 Betriebssystem Open{SUSE} Linux in der virtuellen
                 Umgebng Qemu unter Windows}",
  volume =       "65",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "168",
  year =         "2006",
  ISBN =         "3-86768-164-3 (book)",
  ISBN-13 =      "978-3-86768-164-3 (book)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "SuSE LINUX 10.2 OSS; Windows XP; Qemu $2 swd",
}

@Book{Chryselius:2006:SKD,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Software f{\"u}r Kinder in Debian unter Qemu
                 Einf{\"u}hrung in das Betriebssystem Debian und
                 Vorstellung der Lern- und Spielesammlung Gcompris in
                 der virtuellen Umgebung Qemu}",
  volume =       "20",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "113",
  year =         "2006",
  ISBN =         "3-86768-119-8 (book), 3-86768-719-6 (DVD)",
  ISBN-13 =      "978-3-86768-119-3 (book), 978-3-86768-719-5 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Kind; Lernprogramm; Debian GNU/LINUX 3.1; Qemu",
}

@Book{Chryselius:2006:SKKa,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Software f{\"u}r Kinder in Kubuntu unter Qemu
                 Einf{\"u}hrung in das Betriebssystem Kubuntu und
                 Vorstellung der Lern- und Spielesammlung {GC}ompris in
                 der virtuellen Umgebung Qemu}",
  volume =       "8",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "108",
  year =         "2006",
  ISBN =         "3-86768-107-4 (book), 3-86768-707-2 (DVD)",
  ISBN-13 =      "978-3-86768-107-0 (book), 978-3-86768-707-2 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Kind; Lernprogramm; Kubuntu <Programm>; Qemu",
}

@Book{Chryselius:2006:SKKb,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Software f{\"u}r Kinder in Kanotix unter Qemu
                 Einf{\"u}hrung in das Betriebssystem Kanotix und
                 Vorstellung der Lern- und Spielesammlung {GC}ompris in
                 der virtuellen Umgebung Qemu}",
  volume =       "36",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "113",
  year =         "2006",
  ISBN =         "3-86768-135-X (book), 3-86768-735-8 (DVD)",
  ISBN-13 =      "978-3-86768-135-3 (book), 978-3-86768-735-5 (DVD)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Kind; Lernprogramm; Kanotix; Qemu",
}

@Book{Chryselius:2006:SKKc,
  author =       "Toralf Chryselius and Andrea Kuntz",
  title =        "{Software f{\"u}r Kinder in Knoppix unter Qemu
                 Einf{\"u}hrung in das Betriebssystem Knoppix und
                 Vorstellung der Lern- und Spielesammlung {GC}ompris in
                 der virtuellen Umgebung Qemu}",
  volume =       "52",
  publisher =    "CVTD",
  address =      "Bergfelde bei Berlin, Germany",
  pages =        "120",
  year =         "2006",
  ISBN =         "3-86768-151-1 (book)",
  ISBN-13 =      "978-3-86768-151-3 (book)",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Schriftenreihe Grenzg{\"a}nger - Linux leicht
                 verst{\"a}ndlich; Schriftenreihe Grenzg{\"a}nger -
                 Linux leicht verst{\"a}ndlich",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Kind; Lernprogramm; Knoppix; Qemu",
}

@InProceedings{Chubb:2006:VUL,
  author =       "Peter Chubb",
  title =        "Virtualization and User-Level Drivers",
  crossref =     "Anonymous:2006:PGI",
  pages =        "??--??",
  year =         "2006",
  bibdate =      "Sat Oct 14 18:26:53 2006",
  URL =          "http://www.ice.gelato.org/oct06/pres_pdf/gelato_ICE06oct_vm_chubb_unsw.pdf",
  acknowledgement = ack-nhfb,
  keywords =     "Intel IA-64; Itanium",
}

@Article{Crandall:2006:TSD,
  author =       "Jedidiah R. Crandall and Gary Wassermann and Daniela
                 A. S. de Oliveira and Zhendong Su and S. Felix Wu and
                 Frederic T. Chong",
  title =        "Temporal search: detecting hidden malware timebombs
                 with virtual machines",
  journal =      j-OPER-SYS-REV,
  volume =       "40",
  number =       "5",
  pages =        "25--36",
  month =        dec,
  year =         "2006",
  CODEN =        "OSRED8",
  ISSN =         "0163-5980",
  bibdate =      "Fri Oct 27 06:18:30 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@InProceedings{DeRose:2006:EXI,
  author =       "C{\'e}sar {De Rose}",
  title =        "Evaluating {Xen IA-64} Security and Performance",
  crossref =     "Anonymous:2006:PGI",
  pages =        "??--??",
  year =         "2006",
  bibdate =      "Sat Oct 14 18:26:53 2006",
  URL =          "http://www.ice.gelato.org/oct06/pres_pdf/gelato_ICE06oct_xeneval_derose_pucrs.pdf",
  acknowledgement = ack-nhfb,
  keywords =     "Intel IA-64; Itanium",
}

@Article{Dong:2006:EXI,
  author =       "Yaozu Dong and Shaofan Li and Asit Mallick and Jun
                 Nakajim and Kun Tian and Xuefei Xu and Fred Yang and
                 Wilfred Yu",
  title =        "Extending {Xen} with {Intel} Virtualization
                 Technology",
  journal =      j-INTEL-TECH-J,
  volume =       "10",
  number =       "3",
  pages =        "193--203",
  day =          "10",
  month =        aug,
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1535/itj.1003",
  ISSN =         "1535-766X",
  bibdate =      "Tue Oct 17 09:02:57 2006",
  bibsource =    "ftp://download.intel.com/technology/itj/2006/v10i3/v10_iss03.pdf",
  URL =          "http://developer.intel.com/technology/itj/2006/v10i3/3-xen/1-abstract.htm",
  acknowledgement = ack-nhfb,
}

@InProceedings{Dong:2006:XIV,
  author =       "Yaozu Dong",
  title =        "{Xen} and {Intel} Virtualization Technology for
                 {IA-64}",
  crossref =     "Anonymous:2006:PGI",
  pages =        "??--??",
  year =         "2006",
  bibdate =      "Sat Oct 14 18:26:53 2006",
  URL =          "http://www.ice.gelato.org/oct06/pres_pdf/gelato_ICE06oct_xenvt_dong_intel.pdf",
  acknowledgement = ack-nhfb,
  keywords =     "Intel IA-64; Itanium",
}

@Book{ECMA-335-4,
  author =       "{ECMA}",
  title =        "{ECMA-335}: {Common Language Infrastructure (CLI)}",
  publisher =    pub-ECMA,
  address =      pub-ECMA:adr,
  edition =      "Fourth",
  pages =        "vii + 104 (Part I), viii + 191 (Part II), iv + 138
                 (Part III), ii + 20 (Part IV), i + 4 (Part V), ii + 57
                 (Part VI)",
  month =        jun,
  year =         "2006",
  bibdate =      "Sat May 08 07:44:58 2010",
  bibsource =    "http://www.ecma-international.org/publications/standards/Standard.htm",
  URL =          "http://www.ecma-international.org/publications/standards/Ecma-335.htm;
                 http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-335.pdf;
                 http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-335.zip",
  acknowledgement = ack-nhfb,
  ECMAnumber =   "ECMA-335",
  remark =       "Also ISO/IEC 23271-2006.",
}

@Article{Eugster:2006:UPJ,
  author =       "Patrick Eugster",
  title =        "Uniform proxies for {Java}",
  journal =      j-SIGPLAN,
  volume =       "41",
  number =       "12",
  pages =        "139--152",
  month =        dec,
  year =         "2006",
  CODEN =        "SINODQ",
  ISSN =         "0362-1340",
  bibdate =      "Tue Oct 24 06:22:42 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  keywords =     "virtual machine",
}

@Article{Fabian:2006:VE,
  author =       "Patrick Fabian and Julia Palmer and Justin Richardson
                 and Mic Bowman and Paul Brett and Rob Knauerhase and
                 Jeff Sedayao and John Vicente and Cheng-Chee Koh and
                 Sanjay Rungta",
  title =        "Virtualization in the Enterprise",
  journal =      j-INTEL-TECH-J,
  volume =       "10",
  number =       "3",
  pages =        "227--242",
  day =          "10",
  month =        aug,
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1535/itj.1003",
  ISSN =         "1535-766X",
  bibdate =      "Tue Oct 17 09:02:57 2006",
  bibsource =    "ftp://download.intel.com/technology/itj/2006/v10i3/v10_iss03.pdf",
  URL =          "http://developer.intel.com/technology/itj/2006/v10i3/6-enterprise/1-abstract.htm",
  acknowledgement = ack-nhfb,
}

@Book{Fraser:2006:PVC,
  author =       "Stephen Fraser",
  title =        "{Pro Visual C++\slash CLI} and the {.NET 2.0}
                 platform",
  publisher =    pub-APRESS,
  address =      pub-APRESS:adr,
  pages =        "xli + 917",
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1007/978-1-4302-0109-0",
  ISBN =         "1-4302-0109-6, 1-59059-640-4",
  ISBN-13 =      "978-1-4302-0109-0, 978-1-59059-640-1",
  LCCN =         "QA76.73.C153 F73 2006eb",
  bibdate =      "Mon May 17 09:04:37 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "The expert's voice in .NET",
  acknowledgement = ack-nhfb,
  subject =      "Microsoft Visual C++; C (Computer program language);
                 Microsoft .NET",
}

@Book{Geiselhart:2006:IZV,
  editor =       "Gregory Geiselhart and others",
  title =        "{IBM z\slash VM} and {Linux} on {IBM System z}:
                 virtualization cookbook for {Red Hat Enterprise Linux
                 4}",
  number =       "SG24-7272-00",
  publisher =    pub-IBM,
  address =      pub-IBM:adr,
  pages =        "xiv + 218",
  year =         "2006",
  ISBN =         "0-7384-9495-X (paperback)",
  ISBN-13 =      "978-0-7384-9495-1 (paperback)",
  LCCN =         "QA76.76.O63 I28 2006",
  bibdate =      "Thu Jan 21 14:11:12 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "IBM redbooks",
  acknowledgement = ack-nhfb,
  remark =       "September 2006.",
  subject =      "Linux; Operating systems (Computers); Computer
                 systems; IBM computers; Programming",
}

@Article{Habib:2006:X,
  author =       "Irfan Habib",
  title =        "{Xen}",
  journal =      j-LINUX-J,
  volume =       "2006",
  number =       "145",
  pages =        "??--??",
  month =        may,
  year =         "2006",
  CODEN =        "LIJOFX",
  ISSN =         "1075-3583",
  bibdate =      "Wed Aug 23 06:09:27 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  URL =          "http://www.cl.cam.ac.uk/xeno;
                 http://www.xensource.com/;
                 http://www.cl.cam.ac.uk/Research/SRG/netos/xen/documentation.html",
  abstract =     "Xen is a hypervisor virtual machine that runs multiple
                 open-source operating systems.",
  acknowledgement = ack-nhfb,
}

@Article{Heiser:2006:VMM,
  author =       "Gernot Heiser and Volkmar Uhlig and Joshua LeVasseur",
  title =        "Are virtual-machine monitors microkernels done
                 right?",
  journal =      j-OPER-SYS-REV,
  volume =       "40",
  number =       "1",
  pages =        "95--99",
  month =        jan,
  year =         "2006",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1113361.1113363",
  ISSN =         "0163-5980",
  bibdate =      "Sat Aug 26 08:55:38 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  abstract =     "A paper by Hand et al. at the recent HotOS workshop
                 re-examined microkernels and contrasted them to
                 virtual-machine monitors (VMMs). It found that the two
                 kinds of systems share architectural commonalities but
                 also have a number of technical differences which the
                 paper examined. It concluded that VMMs are a special
                 case of microkernels, ``microkernels done right''. A
                 closer examination of that paper shows that it contains
                 a number of statements which are poorly justified or
                 even refuted by the literature. While we believe that
                 it is indeed timely to reexamine the merits and issues
                 of microkernels, such an examination needs to be based
                 on facts.",
  acknowledgement = ack-nhfb,
}

@Book{Hogenson:2006:CCV,
  author =       "Gordon Hogenson",
  title =        "{C++\slash CLI}: the {Visual C++} language for
                 {.NET}",
  publisher =    pub-APRESS,
  address =      pub-APRESS:adr,
  pages =        "xxxiv + 412",
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1007/978-1-4302-0282-0",
  ISBN =         "1-4302-0282-3, 1-59059-705-2",
  ISBN-13 =      "978-1-4302-0282-0, 978-1-59059-705-7",
  LCCN =         "QA76.73.C153 H59 2006eb",
  bibdate =      "Mon May 17 09:04:37 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "The Expert's voice in .NET",
  acknowledgement = ack-nhfb,
  subject =      "C++/CLI (Computer program language); Microsoft .NET",
}

@Article{Huang:2006:PMA,
  author =       "Mark Huang and Andy Bavier and Larry Peterson",
  title =        "{PlanetFlow}: maintaining accountability for network
                 services",
  journal =      j-OPER-SYS-REV,
  volume =       "40",
  number =       "1",
  pages =        "89--94",
  month =        jan,
  year =         "2006",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1113361.1113376",
  ISSN =         "0163-5980",
  bibdate =      "Sat Aug 26 08:55:38 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  abstract =     "PlanetFlow is a network auditing service that
                 maintains comprehensive, permanent accountability for
                 all traffic generated by PlanetLab services, in
                 accordance with common Internet practice and the terms
                 of the PlanetLab Acceptable Use Policy. PlanetFlow
                 audits the usage of PlanetLab network resources in
                 order to facilitate the resolution of complaints, limit
                 liability, and minimize problematic behavior.The
                 current implementation of PlanetFlow consists of a low
                 overhead flow classifier, an autonomously managed
                 distributed database, and a publicly accessible Web
                 interface. PlanetFlow currently processes up to 4 TB of
                 generated traffic per day, and incurs negligible CPU
                 and storage overhead.",
  acknowledgement = ack-nhfb,
}

@InProceedings{Inoue:2006:VNP,
  author =       "Hiroaki Inoue and Akihisa Ikeno and Masaki Kondo and
                 Junji Sakai and Masato Edahiro",
  title =        "{VIRTUS}: a new processor virtualization architecture
                 for security-oriented next-generation mobile
                 terminals",
  crossref =     "ACM:2006:AAI",
  pages =        "484--489",
  year =         "2006",
  DOI =          "http://doi.acm.org/10.1145/1146909.1147038",
  bibdate =      "Sat Oct 14 14:06:32 2006",
  abstract =     "We propose a new processor virtualization
                 architecture, VIRTUS, to provide a dedicated domain for
                 pre-installed applications and virtualized domains for
                 downloaded native applications. With it,
                 security-oriented next-generation mobile terminals can
                 provide any number of domains for native applications.
                 VIRTUS features three new technologies: VMM
                 asymmetrization, dynamic inter-domain communication and
                 virtualization-assist logic, and it is first in the
                 world to virtualize an ARM-based multiprocessor.",
  acknowledgement = ack-nhfb,
}

@Book{ISO:2006:III,
  author =       "{International Organization for Standardization}",
  title =        "{ISO\slash IEC 23271:2006}: Information technology:
                 {Common Language Infrastructure (CLI)} Partitions {I}
                 to {VI}",
  publisher =    pub-ISO,
  address =      pub-ISO:adr,
  edition =      "Second",
  year =         "2006",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:04:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "International standard",
  acknowledgement = ack-nhfb,
  remark =       "This second edition cancels and replaces the first
                 edition (ISO/IEC 23271:2003).",
  subject =      "Information technology; Standards; Programming
                 languages (Electronic computers)",
}

@Book{ISO:2006:ITCa,
  author =       "{International Organization for Standardization}",
  title =        "{ISO\slash IEC TR 23272:2006}: Information technology:
                 {Common Language Infrastructure (CLI)}: technical
                 report on information derived from Partition {IV} {XML}
                 file",
  publisher =    pub-ISO,
  address =      pub-ISO:adr,
  edition =      "Second",
  pages =        "????",
  year =         "2006",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:04:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Technical report",
  acknowledgement = ack-nhfb,
  remark =       "Cancels and replaces the first edition (ISO/IEC TR
                 23272:2003).",
  subject =      "Programming languages (Electronic computers)",
}

@Book{ISO:2006:ITCb,
  author =       "{International Organization for Standardization }",
  title =        "{ISO\slash IEC TR 25438:2006}: Information technology:
                 {Common Language Infrastructure (CLI)}: technical
                 report: common generics",
  publisher =    pub-ISO,
  address =      pub-ISO:adr,
  year =         "2006",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:04:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Technical report",
  acknowledgement = ack-nhfb,
  subject =      "programming languages (electronic computers)",
}

@InProceedings{Jones:2006:ATP,
  author =       "Stephen T. Jones and Andrea C. Arpaci-Dusseau and
                 Remzi H. Arpaci-Dusseau",
  title =        "{Antfarm}: Tracking Processes in a Virtual Machine
                 Environment",
  crossref =     "USENIX:2006:PUA",
  pages =        "??--??",
  year =         "2006",
  bibdate =      "Wed Oct 18 11:41:42 2006",
  URL =          "http://www.usenix.org/events/usenix06/tech/jones.html",
  acknowledgement = ack-nhfb,
}

@Article{Jones:2006:GMB,
  author =       "Stephen T. Jones and Andrea C. Arpaci-Dusseau and
                 Remzi H. Arpaci-Dusseau",
  title =        "{Geiger}: monitoring the buffer cache in a virtual
                 machine environment",
  journal =      j-OPER-SYS-REV,
  volume =       "40",
  number =       "5",
  pages =        "14--24",
  month =        dec,
  year =         "2006",
  CODEN =        "OSRED8",
  ISSN =         "0163-5980",
  bibdate =      "Fri Oct 27 06:18:30 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@Book{Joos:2006:OHE,
  author =       "Thomas Joos",
  title =        "{Das Online-Handbuch: enth{\"u}llt: Providerwahl,
                 E-Mail, eBay, Google, Skype, Chatten, Instant messaging
                 und vieles mehr ; [auf der CD: Firefox 1.5, Thunderbird
                 1.5, OpenOffice 2.01, Oleco NetLCR, Netstumbler, VMWare
                 Player, WINRar und vieles mehr]}",
  publisher =    "Markt-+-Technik-Verl.",
  address =      "M{\"u}nchen, Germany",
  pages =        "905",
  year =         "2006",
  ISBN =         "3-8272-4076-X",
  ISBN-13 =      "978-3-8272-4076-7",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 17:21:53 MDT 2006",
  bibsource =    "z3950.gbv.de:20011/gvk",
  price =        "EUR 39.90 (DE)",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Internet",
}

@Article{Jordan:2006:SJT,
  author =       "Mick Jordan and Laurent Dayn{\`e}s and Marcin Jarzab
                 and Ciar{\'a}n Bryce and Grzegorz Czajkowski",
  title =        "Scaling {J2EE} {\TM} application servers with the
                 {Multi-tasking Virtual Machine}",
  journal =      j-SPE,
  volume =       "36",
  number =       "6",
  pages =        "557--580",
  month =        may,
  year =         "2006",
  CODEN =        "SPEXBL",
  DOI =          "http://dx.doi.org/10.1002/spe.703",
  ISSN =         "0038-0644",
  bibdate =      "Wed Oct 17 18:33:12 MDT 2007",
  bibsource =    "http://www3.interscience.wiley.com/journalfinder.html;
                 http://www.interscience.wiley.com/jpages/0038-0644",
  acknowledgement = ack-nhfb,
  onlinedate =   "14 Feb 2006",
}

@InProceedings{Liu:2006:HPV,
  author =       "Jiuxing Liu and Wei Huang and Bulent Abali and
                 Dhabaleswar K. Panda",
  title =        "High Performance {VMM}-Bypass {I/O} in Virtual
                 Machines",
  crossref =     "USENIX:2006:PUA",
  pages =        "??--??",
  year =         "2006",
  bibdate =      "Wed Oct 18 11:41:42 2006",
  acknowledgement = ack-nhfb,
  keywords =     "virtual machine monitor (VMM)",
}

@Book{Marshall:2006:ASV,
  author =       "David (David W.) Marshall and Wade A. Reynolds and
                 Dave McCrory",
  title =        "Advanced server virtualization: {VMware} and
                 {Microsoft} platforms in the virtual data center",
  publisher =    pub-AUERBACH,
  address =      pub-AUERBACH:adr,
  pages =        "xvi + 742",
  year =         "2006",
  ISBN =         "0-8493-3931-6",
  ISBN-13 =      "978-0-8493-3931-8",
  LCCN =         "QA76.76.O63 M3646 2006",
  bibdate =      "Thu Jan 21 14:08:59 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/toc/ecip0610/2006008008.html;
                 http://www.loc.gov/catdir/enhancements/fy0702/2006008008-d.html",
  acknowledgement = ack-nhfb,
  subject =      "VMware; Operating systems (Computers); Virtual
                 computer systems",
}

@InProceedings{Menon:2006:ONV,
  author =       "Aravind Menon and Alan L. Cox and Willy Zwaenepoel",
  title =        "Optimizing Network Virtualization in {Xen}",
  crossref =     "USENIX:2006:PUA",
  pages =        "??--??",
  year =         "2006",
  bibdate =      "Wed Oct 18 11:41:42 2006",
  URL =          "http://www.usenix.org/events/usenix06/tech/menon.html",
  acknowledgement = ack-nhfb,
}

@Article{Mergen:2006:VHP,
  author =       "Mark F. Mergen and Volkmar Uhlig and Orran Krieger and
                 Jimi Xenidis",
  title =        "Virtualization for high-performance computing",
  journal =      j-OPER-SYS-REV,
  volume =       "40",
  number =       "2",
  pages =        "8--11",
  month =        apr,
  year =         "2006",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1131322.1131328",
  ISSN =         "0163-5980",
  bibdate =      "Sat Aug 26 08:55:43 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  abstract =     "The specific demands of high-performance computing
                 (HPC) often mismatch the assumptions and algorithms
                 provided by legacy operating systems (OS) for common
                 workload mixes. While feature- and application-rich
                 OSes allow for flexible and low-cost hardware
                 configurations, rapid development, and flexible testing
                 and debugging, the mismatch comes at the cost of ---
                 oftentimes significant --- performance degradation for
                 HPC applications.The ubiquitous availability of
                 virtualization support in all relevant hardware
                 architectures enables new programming and execution
                 models for HPC applications without loosing the comfort
                 and support of existing OS and application
                 environments. In this paper we discuss the trends,
                 motivations, and issues in hardware virtualization with
                 emphasis on their value in HPC environments.",
  acknowledgement = ack-nhfb,
}

@Book{Moreno:2006:NV,
  author =       "Victor Moreno and Kumar Reddy",
  title =        "Network virtualization",
  publisher =    "Cisco Press",
  address =      "Indianapolis, IN, USA",
  pages =        "xx + 365",
  year =         "2006",
  ISBN =         "1-58705-248-2",
  ISBN-13 =      "978-1-58705-248-4",
  LCCN =         "TK5105.875.E87 M65 2006",
  bibdate =      "Thu Jan 21 14:10:34 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/toc/fy0703/2005926713.html",
  acknowledgement = ack-nhfb,
  subject =      "Extranets (Computer networks); Computer network
                 architectures; Virtual computer systems",
}

@Article{Muir:2006:POP,
  author =       "Steve Muir and Larry Peterson and Marc Fiuczynski and
                 Justin Cappos and John Hartman",
  title =        "Privileged operations in the {PlanetLab} virtualised
                 environment",
  journal =      j-OPER-SYS-REV,
  volume =       "40",
  number =       "1",
  pages =        "75--88",
  month =        jan,
  year =         "2006",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1113361.1113375",
  ISSN =         "0163-5980",
  bibdate =      "Sat Aug 26 08:55:38 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Virtualised systems have experienced a resurgence in
                 popularity in recent years, whether used to support
                 multiple OSes running on a user's desktop, provide
                 commercial application hosting facilities, or isolate a
                 large number of users from each other in global network
                 testbeds. We also see an increasing level of interest
                 in having entities within these virtualised systems
                 interact with each other, either as peers or as helpers
                 providing a service to clients.Very little work has
                 been previously conducted on how such interaction
                 between virtualised environments can take place. We
                 introduce Proper, a service running on the PlanetLab
                 system, that allows unprivileged entities to access
                 privileged operations in a safe, tightly controlled
                 manner.This paper describes our work designing and
                 implementing Proper, including a discussion of the
                 various architectural decisions made. We describe how
                 implementing such a system in a traditional UNIX
                 environment is non-trivial, and provide a number of
                 examples of how services running on PlanetLab actually
                 use Proper.",
  acknowledgement = ack-nhfb,
}

@Book{Muller:2006:SVP,
  author =       "Al Muller and Andy Jones and David E. Williams and
                 Stephen Beaver and David A. Payne and Jeremy Pries and
                 David E. Hart",
  title =        "Scripting {VMware} Power Tools: Automating Virtual
                 Infrastructure Administration",
  publisher =    pub-SYNGRESS,
  address =      pub-SYNGRESS:adr,
  pages =        "xviii + 398",
  year =         "2006",
  ISBN =         "1-59749-059-8",
  ISBN-13 =      "978-1-59749-059-7",
  LCCN =         "QA76.76.O63 S385 2006eb",
  bibdate =      "Sat Oct 14 17:53:01 2006",
  bibsource =    "http://www.oreilly.com/catalog/1597490598/",
  acknowledgement = ack-nhfb,
}

@Article{Neiger:2006:IVT,
  author =       "Gil Neiger and Amy Santoni and Felix Leung and Dion
                 Rodgers and Rich Uhlig",
  title =        "{Intel Virtualization Technology}: Hardware Support
                 for Efficient Processor Virtualization",
  journal =      j-INTEL-TECH-J,
  volume =       "10",
  number =       "3",
  pages =        "167--177",
  day =          "10",
  month =        aug,
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1535/itj.1003",
  ISSN =         "1535-766X",
  bibdate =      "Tue Oct 17 09:02:57 2006",
  bibsource =    "ftp://download.intel.com/technology/itj/2006/v10i3/v10_iss03.pdf",
  URL =          "http://developer.intel.com/technology/itj/2006/v10i3/1-hardware/1-abstract.htm",
  acknowledgement = ack-nhfb,
}

@Article{Neumann:2006:IVT,
  author =       "Dean Neumann and Dileep Kulkarni and Aaron Kunze and
                 Gerald Rogers and Edwin Verplanke",
  title =        "{Intel Virtualization Technology} in Embedded and
                 Communications Infrastructure Applications",
  journal =      j-INTEL-TECH-J,
  volume =       "10",
  number =       "3",
  pages =        "",
  day =          "10",
  month =        aug,
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1535/itj.1003",
  ISSN =         "1535-766X",
  bibdate =      "Tue Oct 17 09:02:57 2006",
  bibsource =    "ftp://download.intel.com/technology/itj/2006/v10i3/v10_iss03.pdf",
  URL =          "http://developer.intel.com/technology/itj/2006/v10i3/5-communications/1-abstract.htm",
  acknowledgement = ack-nhfb,
}

@InProceedings{Quynh:2006:RTI,
  author =       "Nguyen Anh Quynh and Yoshiyasu Takefuji",
  title =        "A Real-time Integrity Monitor for Xen Virtual
                 Machine",
  crossref =     "IEEE:2006:PIC",
  pages =        "90--??",
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1109/ICNS.2006.13",
  bibdate =      "Sat Oct 14 14:17:20 2006",
  abstract =     "File-system integrity tools (FIT) are commonly
                 deployed to assist forensic investigation after
                 security incidents and as host-based intrusion
                 detections (HIDS) tool to detect unauthorized
                 file-system changes. Basically all the current
                 solutions employ the same tactic: the administrator
                 specifies a list of critical files and directories that
                 needs to be monitored, then uses the FIT to create a
                 base-line database that tracks general parameters about
                 these files. The FIT is then re-run periodically, and
                 if it detects the modifies of the filesystem against
                 the information stored in the database, the report on
                 the changed file is generated. However, this strategy
                 is far from perfect: the intrusion detection cannot be
                 done in real-time, which might render the whole scheme
                 useless if the attacker can somehow take over the
                 system with privileged access in the time between. The
                 administrator also has a lot of problems to keep the
                 database updating. Besides, he must do everything he
                 can to protect the database and the FIT itself from
                 compromising by the attacker, which is not an easy task
                 especially if the attacker gains local access.",
  acknowledgement = ack-nhfb,
}

@Article{Ramachandran:2006:NCV,
  author =       "Mahendra Ramachandran and Ned Smith and Matthew Wood
                 and Sharad Garg and Jim Stanley and Eswar Eduri and
                 Rinat Rappoport and Arie Chobotaro and Carl Klotz and
                 Lori Janz",
  title =        "New Client Virtualization Usage Models Using {Intel
                 Virtualization Technology}",
  journal =      j-INTEL-TECH-J,
  volume =       "10",
  number =       "3",
  pages =        "205--216",
  day =          "10",
  month =        aug,
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1535/itj.1003",
  ISSN =         "1535-766X",
  bibdate =      "Tue Oct 17 09:02:57 2006",
  bibsource =    "ftp://download.intel.com/technology/itj/2006/v10i3/v10_iss03.pdf",
  URL =          "http://developer.intel.com/technology/itj/2006/v10i3/4-models/1-abstract.htm",
  acknowledgement = ack-nhfb,
}

@Book{ReFerre:2006:VIS,
  editor =       "Massimo {Re Ferre'} and others",
  title =        "Virtualization on the {IBM System x3950 Server}",
  publisher =    pub-IBM,
  address =      pub-IBM:adr,
  pages =        "xii + 272",
  year =         "2006",
  ISBN =         "0-7384-9709-6 (paperback)",
  ISBN-13 =      "978-0-7384-9709-9 (paperback)",
  LCCN =         "QA76.9.V5 V578 2006",
  bibdate =      "Thu Jan 21 14:11:31 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "IBM redbooks; IBM eserver",
  URL =          "http://www.loc.gov/catdir/toc/fy0706/2006284881.html",
  acknowledgement = ack-nhfb,
  remark =       "The ``e'' in ``eserver'' is printed as the symbol for
                 electronic. June 2006.",
  subject =      "Virtual computer systems; IBM computers",
}

@Book{Robbins:2006:LGC,
  author =       "Stuart Robbins",
  title =        "Lessons in grid computing: the system is a mirror",
  publisher =    pub-WILEY,
  address =      pub-WILEY:adr,
  pages =        "xviii + 363",
  year =         "2006",
  ISBN =         "0-471-79010-9 (cloth)",
  ISBN-13 =      "978-0-471-79010-5 (cloth)",
  LCCN =         "HD30.2 .R627 2006",
  bibdate =      "Thu Jan 21 14:09:07 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/toc/ecip067/2006002910.html;
                 http://www.loc.gov/catdir/enhancements/fy0740/2006002910-d.html;
                 http://www.loc.gov/catdir/enhancements/fy0740/2006002910-b.html",
  acknowledgement = ack-nhfb,
  subject =      "Information technology; Management; Business; Computer
                 networks; Management information systems; Industrial
                 management; Technological innovations; Decision
                 making",
  tableofcontents = "Prime theorem \\
                 Interfaces \\
                 Relationship management \\
                 Virtualization \\
                 Orchestration \\
                 Complexity \\
                 Distributed resources \\
                 Flash teams \\
                 Network as narrative form \\
                 Identity \\
                 Organizational architecture \\
                 (Theory of) resonant usability \\
                 Turbulence \\
                 Libraries \\
                 Abstraction \\
                 Insubordination as an asset \\
                 The consortium \\
                 The everysphere \\
                 Q narratives \\
                 Leaving flatland \\
                 We are the platform",
}

@Article{Rosenblum:2006:IVC,
  author =       "Mendel Rosenblum",
  title =        "Impact of virtualization on computer architecture and
                 operating systems",
  journal =      j-OPER-SYS-REV,
  volume =       "40",
  number =       "5",
  pages =        "1--1",
  month =        dec,
  year =         "2006",
  CODEN =        "OSRED8",
  ISSN =         "0163-5980",
  bibdate =      "Fri Oct 27 06:18:30 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
}

@InProceedings{Smith:2006:SID,
  author =       "Matthew Smith and Michael Engel and Thomas Friese and
                 Bernd Freisleben and Gregory A. Koenig and William
                 Yurcik",
  title =        "Security Issues in On-Demand Grid and Cluster
                 Computing",
  crossref =     "Turner:2006:SIS",
  pages =        "24--??",
  year =         "2006",
  bibdate =      "Sat Oct 14 15:36:21 2006",
  abstract =     "In this paper, security issues in on-demand Grid and
                 cluster computing are analyzed, a corresponding threat
                 model is presented and the challenges with respect to
                 authentication, authorization, delegation and single
                 sign-on, secure communication, auditing, safety, and
                 confidentiality are discussed. Three different levels
                 of on-demand computing are identified, based on the
                 number of resource providers, solution producers and
                 users, and the trust relationships between them. It is
                 argued that the threats associated with the first two
                 levels can be handled by employing operating system
                 virtualization technologies based on Xen, whereas the
                 threats of the third level require the use of hardware
                 security modules proposed in the context of the Trusted
                 Computing Platform Alliance (TCPA). The presented
                 security mechanisms increase the resilience of the
                 service hosting environment against both malicious
                 attacks and erroneous code. Thus, our proposal paves
                 the way for large scale hosting of Grid or web services
                 in commercial scenarios.",
  acknowledgement = ack-nhfb,
}

@Book{Spivey:2006:VHH,
  author =       "Mark D. Spivey",
  title =        "Virtually hacking: hacking the virtual computer",
  publisher =    "Taylor and Francis",
  address =      "Boca Raton, FL, USA",
  pages =        "????",
  year =         "2006",
  ISBN =         "0-8493-7057-4",
  ISBN-13 =      "978-0-8493-7057-1",
  LCCN =         "QA76.76.O63 S6755 2006",
  bibdate =      "Sat Oct 14 17:21:39 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/toc/ecip0612/2006013484.html",
  acknowledgement = ack-nhfb,
  subject =      "VMware; Operating systems (Computers); Virtual
                 computer systems",
}

@Book{Sprang:2006:XVL,
  author =       "Henning Sprang",
  title =        "{Xen: Virtualisierung unter Linux}",
  publisher =    "Open Source Press",
  address =      "M{\"u}nchen, Germany",
  pages =        "350",
  year =         "2006",
  ISBN =         "3-937514-29-5",
  ISBN-13 =      "978-3-937514-29-1",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 17:41:07 MDT 2006",
  bibsource =    "z3950.gbv.de:20011/gvk",
  price =        "ca. EUR 39.90, EUR 41.35 (AT)",
  acknowledgement = ack-nhfb,
  language =     "German",
}

@Article{Swaine:2006:VR,
  author =       "Michael Swaine",
  title =        "Is Virtualization Real?",
  journal =      j-DDJ,
  volume =       "31",
  number =       "12",
  pages =        "18--19, 21--22",
  month =        dec,
  year =         "2006",
  CODEN =        "DDJOEB",
  ISSN =         "1044-789X",
  bibdate =      "Fri Nov 17 07:22:34 2006",
  acknowledgement = ack-nhfb,
}

@Article{Uhlig:2006:F,
  author =       "Rich Uhlig",
  title =        "Forward: {Intel Virtualization Technology}: Taking
                 Virtualization Mainstream on {Intel} Architecture
                 Platforms",
  journal =      j-INTEL-TECH-J,
  volume =       "10",
  number =       "3",
  pages =        "v--vi",
  day =          "10",
  month =        aug,
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1535/itj.1003",
  ISSN =         "1535-766X",
  bibdate =      "Tue Oct 17 09:02:57 2006",
  bibsource =    "ftp://download.intel.com/technology/itj/2006/volume10issue02/vol10_iss03.pdf",
  URL =          "http://developer.intel.com/technology/itj/2006/v10i3/foreword.htm",
  acknowledgement = ack-nhfb,
}

@Article{Vachon:2006:DBV,
  author =       "Travis Vachon",
  title =        "Dynamic balancing of virtual operating systems",
  journal =      "Journal of Computing Sciences in Colleges",
  volume =       "21",
  number =       "6",
  pages =        "309--310",
  month =        jun,
  year =         "2006",
  CODEN =        "????",
  ISSN =         "????",
  bibdate =      "Sat Oct 14 14:23:59 2006",
  abstract =     "Recent improvements in computer hardware have made
                 possible the use of virtualization techniques. While
                 many of these techniques have focused on providing
                 virtualized programming language environments, recently
                 technology has emerged which aims to virtualize entire
                 operating system environments.",
  acknowledgement = ack-nhfb,
}

@InProceedings{Vallee:2006:OTX,
  author =       "Geoffroy Vallee and Stephen L. Scott",
  title =        "{OSCAR} Testing with {Xen}",
  crossref =     "IEEE:2006:PIS",
  pages =        "43--?",
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1109/HPCS.2006.31",
  bibdate =      "Sat Oct 14 13:57:08 2006",
  abstract =     "The development of new OSCAR packages and of new
                 releases is difficult because of the testing required
                 for the ever growing set of supported Linux
                 distributions. Each time, a new cluster has to be
                 setup, including the full installation of the head node
                 system. At the same time, some paravirtualization
                 software, like Xen, allows one to create a set of
                 virtual machines on a single physical machine.
                 Therefore, the use of Xen for cluster virtualization
                 and OSCAR testing may be interesting. This document
                 presents Xen-OSCAR, a framework based on Xen, which
                 aims at providing a solution to create a virtual OSCAR
                 cluster.",
  acknowledgement = ack-nhfb,
}

@InProceedings{vanDoorn:2006:HVT,
  author =       "Leendert van Doorn",
  title =        "Hardware virtualization trends",
  crossref =     "ACM:2006:VPS",
  pages =        "45--45",
  year =         "2006",
  DOI =          "http://doi.acm.org/10.1145/1134760.1134762",
  bibdate =      "Sat Oct 14 15:16:51 2006",
  abstract =     "As Intel is rolling out its Vanderpool processor
                 virtualization technology and AMD its Secure Virtual
                 Machine technology, we are only seeing the first wave
                 of processor virtualization assists. Over the next few
                 years the x86 space will change dramatically. We will
                 see the introduction of massive multi-core, 64-bit, 2
                 nd generation processor virtualization capabilities,
                 I/O isolation capabilities, and hardware security
                 assists.Both Intel and AMD are differentiating their
                 processors by providing enhancements that enable you to
                 run multiple virtual machines in such a way that the
                 guest is unaware that it is being virtualized.
                 Ironically, largely because these technologies have
                 been unavailable for so long, Linux and Windows are
                 going into a different direction: paravirtualization.
                 With paravirtualization the guest operating system
                 collaborates closely with the virtual machine monitor
                 through a set of well defined software interfaces. This
                 approach does not require any new hardware features at
                 all and has the potential of performing much better.
                 So, this raises an interesting dilemma: Some of the new
                 virtualization capabilities may already be obsolete
                 before they are brought to market.In this talk I will
                 discuss the new virtualization technologies that will
                 be introduced over the next few years, how they help
                 virtualization, what challenges they pose and how these
                 virtualization technologies will likely consolidate.",
  acknowledgement = ack-nhfb,
}

@Article{VanHensbergen:2006:PRP,
  author =       "Eric {Van Hensbergen}",
  title =        "{P.R.O.S.E}.: partitioned reliable operating system
                 environment",
  journal =      j-OPER-SYS-REV,
  volume =       "40",
  number =       "2",
  pages =        "12--15",
  month =        apr,
  year =         "2006",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1131322.1131329",
  ISSN =         "0163-5980",
  bibdate =      "Sat Aug 26 08:55:43 MDT 2006",
  bibsource =    "http://portal.acm.org/",
  abstract =     "This document re-evaluates the software stack in the
                 light of para-virtualization technology and hypervisor
                 support within next generation processors and operating
                 systems. We describe an infrastructure enabling the use
                 of logical partitions (LPARs) for the execution of
                 stand-alone applications along side traditional
                 operating systems. The design goal is to provide an
                 environment allowing normal users to execute, interact
                 and manage these custom kernels in much the same way
                 they would with typical applications. The development
                 environment is a set of modular component libraries
                 providing necessary system services, and a familiar
                 debug environment provided by exposing partition memory
                 and control interfaces to a ``controller'' partition.
                 We describe the implementation of our prototype using
                 the IBM research hypervisor along with the Linux kernel
                 and explore potential applications that could benefit
                 from this new environment.",
  acknowledgement = ack-nhfb,
}

@InProceedings{Wells:2006:HSS,
  author =       "Philip M. Wells and Koushik Chakraborty and Gurindar
                 S. Sohi",
  title =        "Hardware support for spin management in overcommitted
                 virtual machines",
  crossref =     "ACM:2006:PPI",
  pages =        "124--133",
  year =         "2006",
  DOI =          "http://doi.acm.org/10.1145/1152154.1152176",
  bibdate =      "Sat Oct 14 15:03:50 2006",
  abstract =     "Multiprocessor operating systems (OSs) pose several
                 unique and conflicting challenges to System Virtual
                 Machines (System VMs). For example, most existing
                 system VMs resort to gang scheduling a guest OS's
                 virtual processors (VCPUs) to avoid OS synchronization
                 overhead. However, gang scheduling is infeasible for
                 some application domains, and is inflexible in other
                 domains.In an overcommitted environment, an individual
                 guest OS has more VCPUs than available physical
                 processors (PCPUs), precluding the use of gang
                 scheduling. In such an environment, we demonstrate a
                 more than two-fold increase in runtime when
                 transparently virtualizing a chip-multiprocessor's
                 cores. To combat this problem, we propose a hardware
                 technique to detect several cases when a VCPU is not
                 performing useful work, and suggest preempting that
                 VCPU to run a different, more productive VCPU. Our
                 technique can dramatically reduce cycles wasted on OS
                 synchronization, without requiring any semantic
                 information from the software.We then present a case
                 study, typical of server consolidation, to demonstrate
                 the potential of more flexible scheduling policies
                 enabled by our technique. We propose one such policy
                 that logically partitions the CMP cores between guest
                 VMs. This policy increases throughput by 10\%--25\% for
                 consolidated server workloads due to improved cache
                 locality and core utilization, and substantially
                 improves performance isolation in private caches.",
  acknowledgement = ack-nhfb,
}

@Book{Wills:2006:PVC,
  author =       "Dean C. Wills",
  title =        "{Pro Visual C++ 2005} for developers: featuring
                 {C++\slash CLI}",
  publisher =    pub-APRESS,
  address =      pub-APRESS:adr,
  pages =        "xxxii + 379",
  year =         "2006",
  ISBN =         "1-59059-608-0",
  ISBN-13 =      "978-1-59059-608-1",
  LCCN =         "QA76.73.C153 W5526 2006",
  bibdate =      "Mon May 17 09:04:37 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Books for professionals by professionals",
  URL =          "http://www.loc.gov/catdir/toc/fy0803/2008295944.html",
  acknowledgement = ack-nhfb,
  subject =      "Microsoft Visual C++; C++ (Computer program language);
                 Microsoft .NET",
}

@TechReport{Wright:2006:IJV,
  author =       "Greg Wright and Mario Wolczko and Phil McGachey and
                 Erika Gunadi",
  title =        "Introspection of a {Java Virtual Machine} under
                 Simulation",
  type =         "Technical Report",
  number =       "TR-2006-159",
  institution =  "Sun Microsystems, Inc.",
  address =      "Menlo Park, CA, USA",
  month =        sep,
  year =         "2006",
  bibdate =      "Tue Oct 24 08:05:32 2006",
  URL =          "http://research.sun.com/techrep/2006/smli_tr-2006-159.pdf",
  abstract =     "Virtual machines are commonly used in
                 commercially-significant systems, for example, Sun
                 Microsystems' Java and Microsoft's .NET. The virtual
                 machine offers many advantages to the system designer
                 and administrator, but complicates the task of workload
                 characterization: it presents an extra abstraction
                 layer between the application and observed hardware
                 effects. Understanding the behavior of the virtual
                 machine is therefore important for all levels of the
                 system architecture.\par

                 We have constructed a tool which examines the state of
                 a Sun Java HotSpot virtual machine running inside
                 Virtutech's Simics execution-driven simulator. We can
                 obtain detailed information about the virtual machine
                 and application without disturbing the state of the
                 simulation. For data, we can answer such questions as:
                 Is a given address in the heap? If so, in which object?
                 Of what class? For code, we can map program counter
                 values back to Java methods and approximate Java source
                 line information. Our tool allows us to relate
                 individual events in the simulation, for example, a
                 cache miss, to the higher-level behavior of the
                 application and virtual machine.\par

                 In this report, we present the design of our tool,
                 including its capabilities and limitations, and
                 demonstrate its application on the simulation's cache
                 contents and cache misses.",
  acknowledgement = ack-nhfb,
}

@InProceedings{Yu:2006:FWV,
  author =       "Yang Yu and Fanglu Guo and Susanta Nanda and Lap-chung
                 Lam and Tzi-cker Chiueh",
  title =        "A feather-weight virtual machine for {Windows}
                 applications",
  crossref =     "ACM:2006:VPS",
  pages =        "24--34",
  year =         "2006",
  DOI =          "http://doi.acm.org/10.1145/1134760.1134766",
  bibdate =      "Sat Oct 14 14:42:37 2006",
  abstract =     "Many fault-tolerant and intrusion-tolerant systems
                 require the ability to execute unsafe programs in a
                 realistic environment without leaving permanent
                 damages. Virtual machine technology meets this
                 requirement perfectly because it provides an execution
                 environment that is both realistic and isolated. In
                 this paper, we introduce an OS level virtual machine
                 architecture for Windows applications called
                 Feather-weight Virtual Machine (FVM), under which
                 virtual machines share as many resources of the host
                 machine as possible while still isolated from one
                 another and from the host machine. The key technique
                 behind FVM is namespace virtualization, which isolates
                 virtual machines by renaming resources at the OS system
                 call interface. Through a copy-on-write scheme, FVM
                 allows multiple virtual machines to physically share
                 resources but logically isolate their resources from
                 each other. A main technical challenge in FVM is how to
                 achieve strong isolation among different virtual
                 machines and the host machine, due to numerous
                 namespaces and interprocess communication mechanisms on
                 Windows. Experimental results demonstrate that FVM is
                 more flexible and scalable, requires less system
                 resource, incurs lower start-up and run-time
                 performance overhead than existing hardware-level
                 virtual machine technologies, and thus makes a
                 compelling building block for security and
                 fault-tolerant applications.",
  acknowledgement = ack-nhfb,
}

@Article{Zhao:2006:DFS,
  author =       "Ming Zhao and Jian Zhang and Renato J. Figueiredo",
  title =        "Distributed File System Virtualization Techniques
                 Supporting On-Demand Virtual Machine Environments for
                 Grid Computing",
  journal =      "Cluster Computing",
  volume =       "9",
  number =       "1",
  address =      "This paper presents a data management solution which
                 allows fast Virtual Machine (VM) instantiation and
                 efficient run-time execution to support VMs as
                 execution environments in Grid computing. It is based
                 on novel distributed file system virtualization
                 techniques and is unique in that: (1) it provides
                 on-demand cross-domain access to VM state for
                 unmodified VM monitors; (2) it enables private file
                 system channels for VM instantiation by secure
                 tunneling and session-key based authentication; (3) it
                 supports user-level and write-back disk caches,
                 per-application caching policies and middleware-driven
                 consistency models; and (4) it leverages
                 application-specific meta-data associated with files to
                 expedite data transfers. The paper reports on its
                 performance in wide-area setups using VMware-based VMs.
                 Results show that the solution delivers performance
                 over 30\ better than native NFS and with warm caches it
                 can bring the application-perceived overheads below
                 10\% compared to a local-disk setup. The solution also
                 allows a VM with 1.6 GB virtual disk and 320 MB virtual
                 memory to be cloned within 160 seconds for the first
                 clone and within 25 seconds for subsequent clones.",
  pages =        "45--56",
  month =        jan,
  year =         "2006",
  DOI =          "http://dx.doi.org/10.1007/s10586-006-4896-x",
  ISSN =         "1386-7857",
  bibdate =      "Sat Oct 14 15:00:03 2006",
  acknowledgement = ack-nhfb,
}

@Book{Zimmer:2006:VSV,
  author =       "Dennis Zimmer",
  title =        "{VMware Server and VMware Player: [Installation,
                 Anwendung und Konfiguration; Konzeption und
                 Einsatzm{\"o}glichkeiten; virtuelle Maschinen erstellen
                 und nutzen]}",
  publisher =    "Galileo Press",
  address =      "Bonn, Germany",
  pages =        "358",
  year =         "2006",
  ISBN =         "3-89842-822-2",
  ISBN-13 =      "978-3-89842-822-4",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 17:21:53 MDT 2006",
  bibsource =    "z3950.gbv.de:20011/gvk",
  series =       "Galileo Computing",
  acknowledgement = ack-nhfb,
  language =     "German",
  remark =       "DVD-ROM u.d.T.: Zimmer, Dennis: VMware Server. -
                 Falsche ISBN im Buch und auf der DVD-ROM. $5 GBV.",
}

@InProceedings{Zimmermann:2006:AHM,
  author =       "Alexander Zimmermann and Mesut G{\"u}nes and Martin
                 Wenig and Jan Ritzerfeld and Ulrich Meis",
  title =        "Architecture of the hybrid {MCG}-mesh testbed",
  crossref =     "ACM:2006:PIW",
  pages =        "88--89",
  year =         "2006",
  DOI =          "http://doi.acm.org/10.1145/1160987.1161004",
  bibdate =      "Sat Oct 14 14:37:23 2006",
  abstract =     "The study of wireless and mobile networks is mainly
                 based on simulations. Although simulation environments
                 offer a convenient combination of flexibility and
                 controllability, their largest disadvantage is that the
                 results gained by using them are difficult to transfer
                 into reality. This is due to the complex environment of
                 mobile and wireless networks.In this paper we introduce
                 a hybrid testbed approach, which consists of real mesh
                 nodes and a virtualization environment. This
                 combination provides on the one hand a flexible
                 development environment for distributed network
                 protocols and applications, and on the other hand a
                 high degree in realism. Therefore, it allows the design
                 and conduction of large scale networks where the
                 results are easily transferred to the real world.",
  acknowledgement = ack-nhfb,
}

@Article{Zoppke:2006:VLE,
  author =       "Till Zoppke and Ra{\'u}l Rojas",
  title =        "The Virtual Life of {ENIAC}: Simulating the Operation
                 of the First Electronic Computer",
  journal =      j-IEEE-ANN-HIST-COMPUT,
  volume =       "28",
  number =       "2",
  pages =        "18--25",
  month =        apr # "\slash " # jun,
  year =         "2006",
  CODEN =        "IAHCEX",
  DOI =          "http://dx.doi.org/10.1109/MAHC.2006.40",
  ISSN =         "1058-6180",
  bibdate =      "Tue Oct 17 06:34:16 MDT 2006",
  bibsource =    "http://www.computer.org/annals/an2006/",
  acknowledgement = ack-nhfb,
}

@Article{Arce:2007:GVM,
  author =       "Iv{\'a}n Arce",
  title =        "Ghost in the Virtual Machine",
  journal =      j-IEEE-SEC-PRIV,
  volume =       "5",
  number =       "4",
  pages =        "68--71",
  month =        jul # "\slash " # aug,
  year =         "2007",
  CODEN =        "????",
  DOI =          "http://dx.doi.org/10.1109/MSP.2007.83",
  ISSN =         "1540-7993",
  bibdate =      "Thu Aug 2 17:50:45 MDT 2007",
  bibsource =    "http://computer.org/security/sp2003/",
  abstract =     "Virtual machines and virtualization technologies
                 aren't new to the computing world---they've been used
                 for at least 40 years. Recently, the availability of
                 virtualization software for low-cost computer equipment
                 and the promise of both tangible reductions on total
                 cost of ownership and rapid return on investment on
                 virtualization projects have moved many organizations
                 to adopt it as a key component of their IT strategy. In
                 this installment of Attack Trends, I'll look at this
                 technology trend with an eye toward security and
                 analyze past and present advances in offensive security
                 tools and techniques",
  acknowledgement = ack-nhfb,
}

@Article{Armbruster:2007:RTJ,
  author =       "Austin Armbruster and Jason Baker and Antonio Cunei
                 and Chapman Flack and David Holmes and Filip Pizlo and
                 Edward Pla and Marek Prochazka and Jan Vitek",
  title =        "A real-time {Java} virtual machine with applications
                 in avionics",
  journal =      j-TECS,
  volume =       "7",
  number =       "1",
  pages =        "5:1--5:49",
  month =        dec,
  year =         "2007",
  CODEN =        "????",
  DOI =          "http://doi.acm.org/10.1145/1324969.1324974",
  ISSN =         "1539-9087",
  bibdate =      "Thu Jun 12 15:21:48 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "This paper reports on our experience with the
                 implementation of the Real-time Specification for Java
                 on the Ovm open source Java virtual machine. We
                 describe the architecture and main design decisions
                 involved in implementing real-time Java on Ovm. We
                 present the first use of Real-time Java in avionics in
                 the context of control software for a ScanEagle
                 Unmanned Aerial Vehicle.",
  acknowledgement = ack-nhfb,
  keywords =     "avionics; memory management; Real-Time Java; virtual
                 machines",
}

@Book{Buytaert:2007:BDS,
  editor =       "Kris Buytaert and others",
  title =        "Best damn server virtualization book period: including
                 {Vmware}, {Xen}, and {Microsoft Virtual Server}",
  publisher =    pub-SYNGRESS,
  address =      pub-SYNGRESS:adr,
  pages =        "xxviii + 931",
  year =         "2007",
  ISBN =         "1-59749-217-5 (paperback)",
  ISBN-13 =      "978-1-59749-217-1 (paperback)",
  LCCN =         "QA76.9.C55 B475 2007",
  bibdate =      "Mon Sep 13 11:21:54 MDT 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  subject =      "Client/server computing",
}

@Article{Casey:2007:OIB,
  author =       "Kevin Casey and M. Anton Ertl and David Gregg",
  title =        "Optimizing indirect branch prediction accuracy in
                 virtual machine interpreters",
  journal =      j-TOPLAS,
  volume =       "29",
  number =       "6",
  pages =        "37:1--37:36",
  month =        oct,
  year =         "2007",
  CODEN =        "ATPSDT",
  DOI =          "http://doi.acm.org/10.1145/1286821.1286828",
  ISSN =         "0164-0925",
  bibdate =      "Wed Jun 11 19:22:40 MDT 2008",
  bibsource =    "http://www.acm.org/pubs/contents/journals/toplas/",
  acknowledgement = ack-nhfb,
  articleno =    "37",
}

@Article{Chang:2007:VMS,
  author =       "Da-Wei Chang and Cheng-En Hsieh and Yan-Pai Chen and
                 Kwo-Cheng Chiu",
  title =        "Virtual machine support for zero-loss {Internet}
                 service recovery and upgrade",
  journal =      j-SPE,
  volume =       "37",
  number =       "13",
  pages =        "1349--1376",
  day =          "10",
  month =        nov,
  year =         "2007",
  CODEN =        "SPEXBL",
  DOI =          "http://dx.doi.org/10.1002/spe.808",
  ISSN =         "0038-0644",
  bibdate =      "Wed Oct 17 18:33:16 MDT 2007",
  bibsource =    "http://www3.interscience.wiley.com/journalfinder.html;
                 http://www.interscience.wiley.com/jpages/0038-0644",
  acknowledgement = ack-nhfb,
  onlinedate =   "12 Mar 2007",
}

@Article{Contreras:2007:XPP,
  author =       "Gilberto Contreras and Margaret Martonosi and Jinzhang
                 Peng and Guei-Yuan Lueh and Roy Ju",
  title =        "The {XTREM} power and performance simulator for the
                 {Intel XScale} core: {Design} and experiences",
  journal =      j-TECS,
  volume =       "6",
  number =       "1",
  pages =        "4:1--4:??",
  month =        feb,
  year =         "2007",
  CODEN =        "????",
  DOI =          "http://doi.acm.org/10.1145/1210268.1210272",
  ISSN =         "1539-9087",
  bibdate =      "Thu Jun 12 15:20:58 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Managing power concerns in microprocessors has become
                 a pressing research problem across the domains of
                 computer architecture, CAD, and compilers. As a result,
                 several parameterized cycle-level power simulators have
                 been introduced. While these simulators can be quite
                 useful for microarchitectural studies, their generality
                 limits how accurate they can be for any one chip
                 family. Furthermore, their hardware focus means that
                 they do not explicitly enable studying the interaction
                 of different software layers, such as Java applications
                 and their underlying runtime system software. This
                 paper describes and evaluates XTREM, a power-simulation
                 tool tailored for the Intel XScale microarchitecture.
                 In building XTREM, our goals were to develop a
                 microarchitecture simulator that, while still offering
                 size parameterizations for cache and other structures,
                 more accurately reflected a realistic processor
                 pipeline. We present a detailed set of validations
                 based on multimeter power measurements and hardware
                 performance counter sampling. XTREM exhibits an average
                 performance error of only 6.5\% and an even smaller
                 average power error: 4\%. The paper goes on to present
                 an application study enabled by the simulator. Namely,
                 we use XTREM to produce an energy consumption breakdown
                 for Java CDC and CLDC applications. Our simulator
                 measurements indicate that a large percentage of the
                 total energy consumption (up to 35\%) is devoted to the
                 virtual machine's support functions.",
  acknowledgement = ack-nhfb,
  articleno =    "4",
  keywords =     "Intel XScale technology; Java; power measurements;
                 power modeling",
}

@Article{Criswell:2007:SVA,
  author =       "John Criswell and Andrew Lenharth and Dinakar Dhurjati
                 and Vikram Adve",
  title =        "Secure virtual architecture: a safe execution
                 environment for commodity operating systems",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "6",
  pages =        "351--366",
  month =        dec,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1294261.1294295",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:18:34 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "This paper describes an efficient and robust approach
                 to provide a safe execution environment for an entire
                 operating system, such as Linux, and all its
                 applications. The approach, which we call Secure
                 Virtual Architecture (SVA), defines a virtual,
                 low-level, typed instruction set suitable for executing
                 all code on a system, including kernel and application
                 code. SVA code is translated for execution by a virtual
                 machine transparently, offline or online. SVA aims to
                 enforce fine-grained (object level) memory safety,
                 control-flow integrity, type safety for a subset of
                 objects, and sound analysis. A virtual machine
                 implementing SVA achieves these goals by using a novel
                 approach that exploits properties of existing memory
                 pools in the kernel and by preserving the kernel's
                 explicit control over memory, including custom
                 allocators and explicit deallocation. Furthermore, the
                 safety properties can be encoded compactly as
                 extensions to the SVA type system, allowing the
                 (complex) safety checking compiler to be outside the
                 trusted computing base. SVA also defines a set of OS
                 interface operations that abstract all privileged
                 hardware instructions, allowing the virtual machine to
                 monitor all privileged operations and control the
                 physical resources on a given hardware platform. We
                 have ported the Linux kernel to SVA, treating it as a
                 new architecture, and made only minimal code changes
                 (less than 300 lines of code) to the
                 machine-independent parts of the kernel and device
                 drivers. SVA is able to prevent 4 out of 5 memory
                 safety exploits previously reported for the Linux
                 2.4.22 kernel for which exploit code is available, and
                 would prevent the fifth one simply by compiling an
                 additional kernel library.",
  acknowledgement = ack-nhfb,
  keywords =     "compiler; memory safety; operating systems; security;
                 typed assembly language; type safety; virtual machine",
}

@Book{Crosby:2007:VXI,
  editor =       "Simon Crosby and Juan R. Garcia and David E.
                 Williams",
  title =        "Virtualization with {Xen}: including {XenEnterprise},
                 {XenServer}, and {XenExpress}",
  publisher =    pub-SYNGRESS,
  address =      pub-SYNGRESS:adr,
  pages =        "xx + 364",
  year =         "2007",
  ISBN =         "0-08-055393-1 (electronic), 1-59749-167-5",
  ISBN-13 =      "978-0-08-055393-1 (electronic), 978-1-59749-167-9",
  LCCN =         "QA76.9.V5 V57 2007eb",
  bibdate =      "Mon Sep 13 11:22:13 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
  subject =      "Virtual computer systems; Virtual LANs; XEN3",
}

@Book{Hammersley:2007:PVS,
  author =       "Eric Hammersley",
  title =        "{Professional VMware Server}",
  publisher =    pub-WILEY,
  address =      pub-WILEY:adr,
  pages =        "xviii + 437",
  year =         "2007",
  ISBN =         "0-470-07988-6",
  ISBN-13 =      "978-0-470-07988-1",
  LCCN =         "QA76.76.O63 H344637 2007",
  bibdate =      "Sat Oct 14 17:21:39 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/toc/ecip072/2006033472.html;
                 http://www.loc.gov/catdir/enhancements/fy0741/2006033472-b.html;
                 http://www.loc.gov/catdir/enhancements/fy0741/2006033472-d.html",
  acknowledgement = ack-nhfb,
  subject =      "VMware; Operating systems (Computers); Virtual
                 computer systems",
}

@Article{Hansen:2007:ETT,
  author =       "Jacob Gorm Hansen and Eske Christiansen and Eric Jul",
  title =        "Evil twins: two models for {TCB} reduction in {HPC}
                 clusters",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "4",
  pages =        "20--29",
  month =        jul,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1278901.1278906",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:17:50 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Traditional high performance computing systems require
                 extensive management and suffer from security and
                 configuration problems. This paper presents two
                 generations of a cluster-management system that aims at
                 making clusters as secure and self-managing as
                 possible. The goal of the system is minimality: All
                 nodes in a cluster are configured with a minimal
                 software base consisting of a virtual machine monitor
                 and a remote bootstrapping mechanism, and customers
                 then buy access using a simple pre-paid token scheme.
                 All necessary application software, including the
                 operating system, is provided by the customer as a full
                 virtual machine, and boot-strapped or migrated into the
                 cluster.\par

                 We have explored two different models for cluster
                 control. The first, a decentralized push model ('Evil
                 Man'$^1$), requires direct network access to cluster
                 nodes, each of which is running a truly minimal control
                 plane implementation consisting of only a few hundred
                 lines of C code. In the second, a centralized pull
                 model ('Evil Twin'), nodes may be running behind NATs
                 or firewalls, and are controlled by a centralized web
                 service. A specially developed cache invalidation
                 protocol is used for telling nodes when to reload their
                 workload description from the centralized service.",
  acknowledgement = ack-nhfb,
}

@Book{Heege:2007:ECC,
  author =       "Marcus Heege",
  title =        "Expert {C++\slash CLI}: {.NET} for {Visual C++}
                 programmers",
  publisher =    pub-APRESS,
  address =      pub-APRESS:adr,
  pages =        "xvii + 330",
  year =         "2007",
  ISBN =         "1-59059-756-7",
  ISBN-13 =      "9781590597569",
  LCCN =         "QA76.73.C153 H44 2007",
  bibdate =      "Mon May 17 09:04:37 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "The expert's voice in .NET; Books for professionals by
                 professionals",
  acknowledgement = ack-nhfb,
  subject =      "C++/CLI (Computer program language); C++ (Computer
                 program language); Microsoft .NET",
}

@Article{Henzinger:2007:EMP,
  author =       "Thomas A. Henzinger and Christoph M. Kirsch",
  title =        "The embedded machine: {Predictable}, portable
                 real-time code",
  journal =      j-TOPLAS,
  volume =       "29",
  number =       "6",
  pages =        "33:1--33:29",
  month =        oct,
  year =         "2007",
  CODEN =        "ATPSDT",
  DOI =          "http://doi.acm.org/10.1145/1286821.1286824",
  ISSN =         "0164-0925",
  bibdate =      "Wed Jun 11 19:22:40 MDT 2008",
  bibsource =    "http://www.acm.org/pubs/contents/journals/toplas/",
  abstract =     "The Embedded Machine is a virtual machine that
                 mediates in real time the interaction between software
                 processes and physical processes. It separates the
                 compilation of embedded programs into two phases. The
                 first phase, the platform-independent compiler phase,
                 generates E code (code executed by the Embedded
                 Machine), which supervises the timing, not the
                 scheduling of, application tasks relative to external
                 events such as clock ticks and sensor interrupts. E
                 code is portable and, given an input behavior, exhibits
                 predictable (i.e., deterministic) timing and output
                 behavior. The second phase, the platform-dependent
                 compiler phase, checks the time safety of the E code,
                 that is, whether platform performance (determined by
                 the hardware) and platform utilization (determined by
                 the scheduler of the operating system) enable its
                 timely execution. We have used the Embedded Machine to
                 compile and execute high-performance control
                 applications written in Giotto, such as the flight
                 control system of an autonomous model helicopter.",
  acknowledgement = ack-nhfb,
  articleno =    "33",
}

@Book{Juola:2007:PCO,
  author =       "Patrick Juola",
  title =        "Principles of computer organization and assembly
                 language: using the {Java Virtual Machine}",
  publisher =    "Pearson/Prentice Hall",
  address =      "Upper Saddle River, NJ, USA",
  pages =        "xv + 317",
  year =         "2007",
  ISBN =         "0-13-148683-7 (paperback)",
  ISBN-13 =      "978-0-13-148683-6 (paperback)",
  LCCN =         "QA76.9.C643 J96 2007",
  bibdate =      "Thu Jan 21 14:01:37 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/toc/ecip073/2006034154.html",
  acknowledgement = ack-nhfb,
  subject =      "computer organization; assembler language (computer
                 program language); Java Virtual Machine",
}

@MastersThesis{Karcher:2007:VDX,
  author =       "Ren{\'e} Karcher",
  title =        "{Virtualisierte DMZ auf Xen-Basis: OpenQRM und Xen}",
  type =         "Diplomarbeit",
  school =       "Fachhochschule f{\"u}r Oekonomie und Management",
  address =      "Essen, Germany",
  year =         "2007",
  ISBN =         "3-8366-6199-3",
  ISBN-13 =      "978-3-8366-6199-7",
  bibdate =      "Mon Sep 13 11:43:19 2010",
  acknowledgement = ack-nhfb,
}

@Article{Laadan:2007:DPV,
  author =       "Oren Laadan and Ricardo A. Baratto and Dan B. Phung
                 and Shaya Potter and Jason Nieh",
  title =        "{DejaView}: a personal virtual computer recorder",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "6",
  pages =        "279--292",
  month =        dec,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1323293.1294289",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:18:34 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "As users interact with the world and their peers
                 through their computers, it is becoming important to
                 archive and later search the information that they have
                 viewed. We present DejaView, a personal virtual
                 computer recorder that provides a complete record of a
                 desktop computing experience that a user can playback,
                 browse, search, and revive seamlessly. DejaView records
                 visual output, checkpoints corresponding application
                 and file system state, and captures displayed text with
                 contextual information to index the record. A user can
                 then browse and search the record for any visual
                 information that has been displayed on the desktop, and
                 revive and interact with the desktop computing state
                 corresponding to any point in the record. DejaView
                 combines display, operating system, and file system
                 virtualization to provide its functionality
                 transparently without any modifications to
                 applications, window systems, or operating system
                 kernels. We have implemented DejaView and evaluated its
                 performance on real-world desktop applications. Our
                 results demonstrate that DejaView can provide
                 continuous low-overhead recording without any user
                 noticeable performance degradation, and allows
                 browsing, search and playback of records fast enough
                 for interactive use.",
  acknowledgement = ack-nhfb,
  keywords =     "desktop search; virtualization",
}

@Article{Muller:2007:VMS,
  author =       "Ren{\'e} M{\"u}ller and Gustavo Alonso and Donald
                 Kossmann",
  title =        "A virtual machine for sensor networks",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "3",
  pages =        "145--158",
  month =        jun,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1272998.1273013",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:16:31 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Sensor networks are increasingly being deployed for a
                 wide variety of tasks. Today, in these networks, the
                 development, deployment, and maintenance of
                 applications are performed largely ad-hoc. Existing
                 platforms help somewhat but also introduce implicit
                 trade-offs. In one extreme, low-level programming
                 platforms and languages make programming cumbersome and
                 error-prone. In the other extreme, declarative
                 approaches greatly facilitate programming but restrict
                 what can be done. In both cases, additional limitations
                 include lack of support for concurrency, difficulties
                 in changing applications, and insufficient abstractions
                 from low-level details. This paper presents SwissQM, a
                 virtual machine designed to address all these
                 limitations. SwissQM offers a platform-independent
                 programming abstraction that is geared towards data
                 acquisition and in-network data processing.",
  acknowledgement = ack-nhfb,
  keywords =     "efficient bytecode representation; query processing;
                 SwissQM; virtual machine; wireless sensor networks",
}

@Article{Nathuji:2007:VCP,
  author =       "Ripal Nathuji and Karsten Schwan",
  title =        "{VirtualPower}: coordinated power management in
                 virtualized enterprise systems",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "6",
  pages =        "265--278",
  month =        dec,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1294261.1294287",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:18:34 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Power management has become increasingly necessary in
                 large-scale datacenters to address costs and
                 limitations in cooling or power delivery. This paper
                 explores how to integrate power management mechanisms
                 and policies with the virtualization technologies being
                 actively deployed in these environments. The goals of
                 the proposed VirtualPower approach to online power
                 management are (i) to support the isolated and
                 independent operation assumed by guest virtual machines
                 (VMs) running on virtualized platforms and (ii) to make
                 it possible to control and globally coordinate the
                 effects of the diverse power management policies
                 applied by these VMs to virtualized resources. To
                 attain these goals, VirtualPower extends to guest VMs
                 `soft' versions of the hardware power states for which
                 their policies are designed. The resulting technical
                 challenge is to appropriately map VM-level updates made
                 to soft power states to actual changes in the states or
                 in the allocation of underlying virtualized hardware.
                 An implementation of VirtualPower Management (VPM) for
                 the Xen hypervisor addresses this challenge by
                 provision of multiple system-level abstractions
                 including VPM states, channels, mechanisms, and rules.
                 Experimental evaluations on modern multicore platforms
                 highlight resulting improvements in online power
                 management capabilities, including minimization of
                 power consumption with little or no performance
                 penalties and the ability to throttle power consumption
                 while still meeting application requirements. Finally,
                 coordination of online methods for server consolidation
                 with VPM management techniques in heterogeneous server
                 systems is shown to provide up to 34\% improvements in
                 power consumption.",
  acknowledgement = ack-nhfb,
  keywords =     "power management; virtualization",
}

@Article{Padala:2007:ACV,
  author =       "Pradeep Padala and Kang G. Shin and Xiaoyun Zhu and
                 Mustafa Uysal and Zhikui Wang and Sharad Singhal and
                 Arif Merchant and Kenneth Salem",
  title =        "Adaptive control of virtualized resources in utility
                 computing environments",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "3",
  pages =        "289--302",
  month =        jun,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1272998.1273026",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:16:31 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Data centers are often under-utilized due to
                 over-provisioning as well as time-varying resource
                 demands of typical enterprise applications. One
                 approach to increase resource utilization is to
                 consolidate applications in a shared infrastructure
                 using virtualization. Meeting application-level quality
                 of service (QoS) goals becomes a challenge in a
                 consolidated environment as application resource needs
                 differ. Furthermore, for multi-tier applications, the
                 amount of resources needed to achieve their QoS goals
                 might be different at each tier and may also depend on
                 availability of resources in other tiers. In this
                 paper, we develop an adaptive resource control system
                 that dynamically adjusts the resource shares to
                 individual tiers in order to meet application-level QoS
                 goals while achieving high resource utilization in the
                 data center. Our control system is developed using
                 classical control theory, and we used a black-box
                 system modeling approach to overcome the absence of
                 first principle models for complex enterprise
                 applications and systems. To evaluate our controllers,
                 we built a testbed simulating a virtual data center
                 using Xen virtual machines. We experimented with two
                 multi-tier applications in this virtual data center: a
                 two-tier implementation of RUBiS, an online auction
                 site, and a two-tier Java implementation of TPC-W. Our
                 results indicate that the proposed control system is
                 able to maintain high resource utilization and meets
                 QoS goals in spite of varying resource demands from the
                 applications.",
  acknowledgement = ack-nhfb,
  keywords =     "application QoS; control theory; data center; resource
                 utilization; server consolidation; virtualization",
}

@TechReport{Padala:2007:PEV,
  author =       "Pradeep Padala and Xiaoyun Zhu and Zhikui Wang and
                 Sharad Singhal and Kang G. Shin",
  title =        "Performance Evaluation of Virtualization Technologies
                 for Server Consolidation",
  type =         "Technical Report",
  number =       "HPL-2007-59",
  institution =  "Enterprise Systems and Software Laboratory, HP
                 Laboratories",
  address =      "Palo Alto, CA, USA",
  day =          "11",
  month =        apr,
  year =         "2007",
  bibdate =      "Tue May 15 15:09:57 2007",
  URL =          "http://www.hpl.hp.com/techreports/2007/HPL-2007-59.pdf",
  abstract =     "Server consolidation has become an integral part of IT
                 planning to reduce cost and improve efficiency in
                 today's enterprise data centers. The advent of
                 virtualization allows consolidation of multiple
                 applications into virtual containers hosted on a single
                 or multiple physical servers. However, this poses new
                 challenges, including choosing the right virtualization
                 technology and consolidation configuration for a
                 particular set of applications. In this paper, we
                 evaluate two representative virtualization
                 technologies, Xen and OpenVZ, in various
                 configurations. We consolidate one or more multi-tiered
                 systems onto one or two nodes and drive the system with
                 an auction workload called RUBiS. We compare both
                 technologies with a base system in terms of application
                 performance, resource consumption, scalability,
                 low-level system metrics like cache misses and
                 virtualization-specific metrics like Domain-0
                 consumption in Xen. Our experiments indicate that the
                 average response time can increase by over 400\% in Xen
                 and only a modest 100\% in OpenVZ as the number of
                 application instances grows from one to four. This
                 large discrepancy is caused by the higher
                 virtualization overhead in Xen, which is likely due to
                 higher L2 cache misses and misses per instruction. A
                 similar trend is observed in CPU consumptions of
                 virtual containers. We present an overhead analysis
                 with kernel-symbol-specific information generated by
                 Oprofile.",
  acknowledgement = ack-nhfb,
}

@Article{Payne:2007:LAS,
  author =       "Bryan D. Payne and Reiner Sailer and Ram{\'o}n
                 C{\'a}ceres and Ron Perez and Wenke Lee",
  title =        "A layered approach to simplified access control in
                 virtualized systems",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "4",
  pages =        "12--19",
  month =        jul,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1278901.1278905",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:17:50 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "In this work, we show how the abstraction layer
                 created by a hypervisor, or virtual machine monitor,
                 can be leveraged to reduce the complexity of mandatory
                 access control policies throughout the system. Policies
                 governing access control decisions in today's systems
                 are complex and monolithic. Achieving strong security
                 guarantees often means restricting usability across the
                 entire system, which is a primary reason why mandatory
                 access controls are rarely deployed. Our architecture
                 uses a hypervisor and multiple virtual machines to
                 decompose policies into multiple layers. This
                 simplifies the policies and their enforcement, while
                 minimizing the overall impact of security on the
                 system. We show that the overhead of decomposing system
                 policies into distinct policies for each layer can be
                 negligible. Our initial implementation confirms that
                 such layering leads to simpler security policies and
                 enforcement mechanisms as well as a more robust layered
                 trusted computing base. We hope that this work serves
                 to start a dialog regarding the use of mandatory access
                 controls within a hypervisor for both increasing
                 security and improving manageability.",
  acknowledgement = ack-nhfb,
  keywords =     "information flow; layering; mandatory access control;
                 policy; security; virtualization",
}

@Book{Rule:2007:HCC,
  author =       "David Rule",
  title =        "How to Cheat at Configuring {VMware ESX Server}",
  publisher =    pub-SYNGRESS,
  address =      pub-SYNGRESS:adr,
  pages =        "xvii + 372",
  year =         "2007",
  ISBN =         "1-59749-194-2",
  ISBN-13 =      "978-1-59749-194-5",
  LCCN =         "QA76.9.V5 H69 2007",
  bibdate =      "Mon May 17 09:03:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat;
                 z3950.loc.gov:7090/Voyager",
  URL =          "http://www.sciencedirect.com/science/book/9781597491945",
  abstract =     "This book will detail the default and custom
                 installation of VMwares ESX server as well as basic and
                 advanced virtual machine configurations. It will then
                 walk the reader through post installation
                 configurations including installation and configuration
                 of VirtualCenter. From here, readers will learn to
                 efficiently create and deploy virtual machine
                 templates. Best practices for securing and backing up
                 your virtual environment are also provided. The book
                 concludes with a series of handy, time-saving command
                 and configuration for: bash shell keystrokes, Linux
                 commands, configuration files, common/proc files,
                 VMware ESX commands, and troubleshooting.",
  acknowledgement = ack-nhfb,
  subject =      "VMware; Operating systems (Computers); Virtual
                 computer systems",
  tableofcontents = "Chapter 1: VirtualCenter Overview \\
                 Chapter 2: ESX Installation \\
                 Chapter 3: ESX Post Install Configuration \\
                 Chapter 4: Installing VirtualCenter -- Chapter 5:
                 VirtualCenter Configuration \\
                 Chapter 6: Creating a new virtual server \\
                 Chapter 7: Creating Virtual Machine Templates \\
                 Chapter 8: Deploying Virtual Machines from templates
                 \\
                 Chapter 9: Security Model \\
                 Chapter 10: Backup Process \\
                 Chapter 11: Best Practices \\
                 Chapter 12: Updating the ESX operating system. \\
                 Chapter 13: ESX Command and configuration Tips..",
}

@Book{Sivakumar:2007:CCA,
  author =       "Nishant Sivakumar",
  title =        "{C++\slash CLI} in action",
  publisher =    pub-MANNING,
  address =      pub-MANNING:adr,
  pages =        "xxiii + 391",
  year =         "2007",
  ISBN =         "1-932394-81-8 (paperback)",
  ISBN-13 =      "978-1-932394-81-8 (paperback)",
  LCCN =         "QA76.73.C153 S52 2007",
  bibdate =      "Mon May 17 09:04:37 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
  subject =      "C++ (Computer program language)",
}

@Article{Soltesz:2007:CBO,
  author =       "Stephen Soltesz and Herbert P{\"o}tzl and Marc E.
                 Fiuczynski and Andy Bavier and Larry Peterson",
  title =        "Container-based operating system virtualization: a
                 scalable, high-performance alternative to hypervisors",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "3",
  pages =        "275--287",
  month =        jun,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1272998.1273025",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:16:31 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Hypervisors, popularized by Xen and VMware, are
                 quickly becoming commodity. They are appropriate for
                 many usage scenarios, but there are scenarios that
                 require system virtualization with high degrees of both
                 isolation and efficiency. Examples include HPC
                 clusters, the Grid, hosting centers, and PlanetLab. We
                 present an alternative to hypervisors that is better
                 suited to such scenarios. The approach is a synthesis
                 of prior work on resource containers and security
                 containers applied to general-purpose, time-shared
                 operating systems. Examples of such container-based
                 systems include Solaris 10, Virtuozzo for Linux, and
                 Linux-VServer. As a representative instance of
                 container-based systems, this paper describes the
                 design and implementation of Linux-VServer. In
                 addition, it contrasts the architecture of
                 Linux-VServer with current generations of Xen, and
                 shows how Linux-VServer provides comparable support for
                 isolation and superior system efficiency.",
  acknowledgement = ack-nhfb,
  keywords =     "alternative; container; hypervisor; Linux-VServer;
                 operating; system; virtualization; Xen",
}

@Book{Sprang:2007:XVL,
  editor =       "Henning Sprang",
  title =        "{Xen: Virtualisierung unter Linux}. ({German}) [{Xen}:
                 Virtualization under {Linux}]",
  publisher =    "Open Source Press",
  address =      "M{\"u}nchen, Germany",
  pages =        "350",
  year =         "2007",
  ISBN =         "3-937514-29-5",
  ISBN-13 =      "978-3-937514-29-1",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:05:00 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://deposit.ddb.de/cgi-bin/dokserv?id=2809360",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Linux; Xen 3",
}

@Article{Stoess:2007:TEU,
  author =       "Jan Stoess",
  title =        "Towards effective user-controlled scheduling for
                 microkernel-based systems",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "4",
  pages =        "59--68",
  month =        jul,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1278901.1278910",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:17:50 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "With $\mu$-kernel based systems becoming more and more
                 prevalent, the demand for extensible resource
                 management raises - and with it the demand for flexible
                 thread scheduling. In this paper, we investigate the
                 benefits and costs of a $\mu$-kernel that exports
                 scheduling from the kernel to user level. A key idea of
                 our approach is to involve the user level whenever the
                 $\mu$-kernel encounters a situation that is ambiguous
                 with respect to scheduling, and to permit the kernel to
                 resolve the ambiguity based on user decisions. A
                 further key aspect is that we rely on a generic,
                 protection domain neutral interface between kernel and
                 applications.\par

                 For evaluation, we have developed a hierarchical user
                 level scheduling architecture for the L4 $\mu$-kernel,
                 and a virtualization environment running on its top.
                 Our environment supports Linux 2.6.9 guest operating
                 systems on IA-32 processors. Experiments indicate an
                 application overhead between 0 and 10 percent compared
                 to a pure in-kernel scheduler solution, but also
                 demonstrate that our architecture enables effective and
                 accurate user-directed scheduling.",
  acknowledgement = ack-nhfb,
}

@Article{Uhlig:2007:MKS,
  author =       "Volkmar Uhlig",
  title =        "The mechanics of in-kernel synchronization for a
                 scalable microkernel",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "4",
  pages =        "49--58",
  month =        jul,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1278901.1278909",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:17:50 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Systems with minimal kernels address the problem of
                 ever-increasing system software complexity by strict
                 separation of resource permission management and
                 resource policies into different trust domains. Lately,
                 such system structure has found wide attention in the
                 research community and industry in the form of
                 hypervisors and virtual machines.\par

                 With an increasing number of processors, these systems
                 face a scalability problem. The separation eliminates
                 semantic information about the expected parallelism for
                 individual resources, such as memory pages or
                 processors. Hence, the kernel is unable to optimize its
                 synchronization primitives on a case-by-case basis---a
                 precondition for a scalable, yet well-performing
                 system.\par

                 In this paper we present an adaptive synchronization
                 scheme, one of the core building block for scalable
                 microkernels. Herewith, unprivileged components (like
                 virtual machines) can express the degree of concurrency
                 at the granularity of individual resources. The kernel
                 can safely adapt and optimize its internal
                 synchronization regime on a case-by-case basis as we
                 show exemplary for inter-process communication and the
                 memory management subsystem of an L4 microkernel.",
  acknowledgement = ack-nhfb,
}

@Book{Warnke:2007:QVC,
  author =       "Robert Warnke and Thomas Ritzau",
  title =        "{QEMU virtuelle Computer f{\"u}r viele
                 Betriebssysteme; {QEMU} Version 0.9.0}. ({German})
                 [{QEMU} virtual computer for many operating systems]",
  publisher =    "Books on Demand GmbH",
  address =      "Norderstedt",
  pages =        "292",
  year =         "2007",
  ISBN =         "3-8370-0876-2",
  ISBN-13 =      "978-3-8370-0876-0",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://d-nb.info/986260371/04",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Qemu",
}

@Book{Williams:2007:VXI,
  author =       "David E. Williams and Juan R. Garcia",
  title =        "Virtualization with {Xen}: including {XenEnterprise},
                 {XenServer}, and {XenExpress}",
  publisher =    pub-SYNGRESS,
  address =      pub-SYNGRESS:adr,
  pages =        "xx + 364",
  year =         "2007",
  ISBN =         "1-59749-167-5",
  ISBN-13 =      "978-1-59749-167-9",
  LCCN =         "QA76.9.V5 W55 2007",
  bibdate =      "Mon May 17 09:05:00 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://www.loc.gov/catdir/enhancements/fy0745/2007278278-d.html",
  abstract =     "Complete Coverage of Xen, Including Version 3.2.
                 Virtualization with Xen is the first book to
                 demonstrate to readers how to install, administer, and
                 maintain a virtual infrastructure based on XenSources
                 latest release, Xen 3.2. It discusses best practices
                 for setting up a Xen environment correctly the first
                 time, maximizing the utilization of server assets while
                 taking advantage of the fastest and most secure
                 enterprise-grade paravirtualization architecture. It
                 covers both basic and advanced topics, such as planning
                 and installation, physical-to-virtual migrations,
                 virtual machine provisioning, resource management, and
                 monitoring and troubleshooting guests and Xen hosts.",
  acknowledgement = ack-nhfb,
  subject =      "Virtual computer systems; Virtual LANs; Xen 3",
}

@Article{Wires:2007:SFS,
  author =       "Jake Wires and Michael J. Feeley",
  title =        "Secure file system versioning at the block level",
  journal =      j-OPER-SYS-REV,
  volume =       "41",
  number =       "3",
  pages =        "203--215",
  month =        jun,
  year =         "2007",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1272996.1273018",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:16:31 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "In typical file systems, valuable data is vulnerable
                 to being accidentally or maliciously deleted or
                 overwritten. Versioning file systems protect data from
                 accidents by transparently retaining old versions, but
                 do less well in protecting data from malicious attack.
                 These systems remain vulnerable to attackers who gain
                 unauthorized access to prune old file versions, who
                 bypass the file system to directly manipulate storage,
                 or who exploit bugs in any part of the operating
                 system.\par

                 This paper presents VDisk, a secure, block-level
                 versioning system that adds file-grain versioning to a
                 standard, unmodified file system. VDisk consists of a
                 set of untrusted user-mode tools and a trusted, secure
                 kernel that is implemented within an isolated Xen
                 virtual machine domain. The secure kernel is designed
                 to be simple and thus trustworthy. This kernel logs
                 file-system updates to a secure log, exports a
                 read-only view of the log to the rest of the system and
                 securely removes unwanted versions from the log. Secure
                 cleaning is implemented in a two-level manner. An
                 untrusted, user-mode cleaner selects log entries for
                 reclamation and submits cleaning requests to the
                 trusted VDisk kernel along with a proof that the
                 request satisfies the device's version-retention
                 policy. The secure kernel verifies the proof and
                 updates the log.",
  acknowledgement = ack-nhfb,
}

@Article{Berger:2008:TMS,
  author =       "Stefan Berger and Ram{\'o}n C{\'a}ceres and Dimitrios
                 Pendarakis and Reiner Sailer and Enriquillo Valdez and
                 Ronald Perez and Wayne Schildhauer and Deepa
                 Srinivasan",
  title =        "{TVDc}: managing security in the trusted virtual
                 datacenter",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "1",
  pages =        "40--47",
  month =        jan,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1341312.1341321",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:19:29 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Virtualization technology is becoming increasingly
                 common in datacenters, since it allows for collocation
                 of multiple workloads, consisting of operating systems,
                 middleware and applications, in different virtual
                 machines (VMs) on shared physical hardware platforms.
                 However, when coupled with the ease of VM migration,
                 this trend increases the potential surface for security
                 attacks. Further, the simplified management of VMs,
                 including creation, cloning and migration, makes it
                 imperative to monitor and guarantee the integrity of
                 software components running within VMs.\par

                 This paper presents the IBM Trusted Virtual Datacenter
                 (TVDc) technology developed to address the need for
                 strong isolation and integrity guarantees, thus
                 significantly enhancing security and systems management
                 capabilities, in virtualized environments. It signifies
                 the first effort to incorporate trusted computing
                 technologies directly into virtualization and systems
                 management software. We present and discuss various
                 components that constitute TVDc: the Trusted Platform
                 Module (TPM), the virtual TPM, the IBM hypervisor
                 security architecture (sHype) and the associated
                 systems management software.",
  acknowledgement = ack-nhfb,
  keywords =     "integrity; isolation; mandatory access control;
                 security; virtualization; virtual trusted platform
                 module",
}

@Article{Bhargava:2008:ATD,
  author =       "Ravi Bhargava and Benjamin Serebrin and Francesco
                 Spadini and Srilatha Manne",
  title =        "Accelerating two-dimensional page walks for
                 virtualized systems",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "2",
  pages =        "26--35",
  month =        mar,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1346281.1346286",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:20:12 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Nested paging is a hardware solution for alleviating
                 the software memory management overhead imposed by
                 system virtualization. Nested paging complements
                 existing page walk hardware to form a two-dimensional
                 (2D) page walk, which reduces the need for hypervisor
                 intervention in guest page table management. However,
                 the extra dimension also increases the maximum number
                 of architecturally-required page table
                 references.\par

                 This paper presents an in-depth examination of the 2D
                 page table walk overhead and options for decreasing it.
                 These options include using the AMD Opteron processor's
                 page walk cache to exploit the strong reuse of page
                 entry references. For a mix of server and SPEC
                 benchmarks, the presented results show a 15\%-38\%
                 improvement in guest performance by extending the
                 existing page walk cache to also store the nested
                 dimension of the 2D page walk. Caching nested page
                 table translations and skipping multiple page entry
                 references produce an additional 3\%-7\%
                 improvement.\par

                 Much of the remaining 2D page walk overhead is due to
                 low-locality nested page entry references, which result
                 in additional memory hierarchy misses. By using large
                 pages, the hypervisor can eliminate many of these
                 long-latency accesses and further improve the guest
                 performance by 3\%-22\%.",
  acknowledgement = ack-nhfb,
  keywords =     "AMD; hypervisor; memory management; nested paging;
                 page walk caching; TLB; virtualization; virtual machine
                 monitor",
}

@Article{Bhattiprolu:2008:VSC,
  author =       "Sukadev Bhattiprolu and Eric W. Biederman and Serge
                 Hallyn and Daniel Lezcano",
  title =        "Virtual servers and checkpoint\slash restart in
                 mainstream {Linux}",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "5",
  pages =        "104--113",
  month =        jul,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1400097.1400109",
  ISSN =         "0163-5980",
  bibdate =      "Wed Aug 6 16:54:12 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Virtual private servers and application checkpoint and
                 restart are two advanced operating system features
                 which place different but related requirements on the
                 way kernel-provided resources are accessed by
                 userspace. In Linux, kernel resources, such as process
                 IDs and SYSV shared messages, have traditionally been
                 identified using global tables. Since 2005, these
                 tables have gradually been transformed into per-process
                 namespaces in order to support both resource
                 availability on application restart and virtual private
                 server functionality. Due to inherent differences in
                 the resources themselves, the semantics of namespace
                 cloning differ for many of the resources. This paper
                 describes the existing and proposed namespaces as well
                 as their uses.",
  acknowledgement = ack-nhfb,
  keywords =     "checkpoint; mobility; reliability; restart; security;
                 survivability; virtualization",
}

@Article{Burcea:2008:PV,
  author =       "Ioana Burcea and Stephen Somogyi and Andreas Moshovos
                 and Babak Falsafi",
  title =        "Predictor virtualization",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "2",
  pages =        "157--167",
  month =        mar,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1346281.1346301",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:20:12 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Many hardware optimizations rely on collecting
                 information about program behavior at runtime. This
                 information is stored in lookup tables. To be accurate
                 and effective, these optimizations usually require
                 large dedicated on-chip tables. Although technology
                 advances offer an increased amount of on-chip
                 resources, these resources are allocated to increase
                 the size of on-chip conventional cache
                 hierarchies.\par

                 This work proposes Predictor Virtualization, a
                 technique that uses the existing memory hierarchy to
                 emulate large predictor tables. We demonstrate the
                 benefits of this technique by virtualizing a
                 state-of-the-art data prefetcher. Full-system,
                 cycle-accurate simulations demonstrate that the
                 virtualized prefetcher preserves the performance
                 benefits of the original design, while reducing the
                 on-chip storage dedicated to the predictor table from
                 60KB down to less than one kilobyte.",
  acknowledgement = ack-nhfb,
  keywords =     "caches; memory hierarchy; metadata; predictor
                 virtualization",
}

@Article{Butrico:2008:SEE,
  author =       "Maria Butrico and Dilma Da Silva and Orran Krieger and
                 Michal Ostrowski and Bryan Rosenburg and Dan Tsafrir
                 and Eric Van Hensbergen and Robert W. Wisniewski and
                 Jimi Xenidis",
  title =        "Specialized execution environments",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "1",
  pages =        "106--107",
  month =        jan,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1341312.1341335",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:19:29 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Virtualization has become popular (again) as a means
                 of consolidating multiple operating systems (OSes) onto
                 a smaller set of hardware resources. The roles of OSes
                 in such environments have changed. Whereas normally an
                 OS provides balance between the demands of application
                 and hardware support, in the world of virtualization it
                 can be beneficial to split these roles. One OS may
                 support a particular application set and use other OSes
                 to interact with physical hardware. The hypervisor, or
                 virtualization layer, provides communication facilities
                 for the inter-OS communication needed to support such a
                 deployment model.",
  acknowledgement = ack-nhfb,
}

@Article{Chen:2008:OVB,
  author =       "Xiaoxin Chen and Tal Garfinkel and E. Christopher
                 Lewis and Pratap Subrahmanyam and Carl A. Waldspurger
                 and Dan Boneh and Jeffrey Dwoskin and Dan R. K. Ports",
  title =        "{Overshadow}: a virtualization-based approach to
                 retrofitting protection in commodity operating
                 systems",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "2",
  pages =        "2--13",
  month =        mar,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1346281.1346284",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:20:12 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Commodity operating systems entrusted with securing
                 sensitive data are remarkably large and complex, and
                 consequently, frequently prone to compromise. To
                 address this limitation, we introduce a
                 virtual-machine-based system called Overshadow that
                 protects the privacy and integrity of application data,
                 even in the event of a total OS compromise. Overshadow
                 presents an application with a normal view of its
                 resources, but the OS with an encrypted view. This
                 allows the operating system to carry out the complex
                 task of managing an application's resources, without
                 allowing it to read or modify them. Thus, Overshadow
                 offers a last line of defense for application
                 data.\par

                 Overshadow builds on multi-shadowing, a novel mechanism
                 that presents different views of `physical' memory,
                 depending on the context performing the access. This
                 primitive offers an additional dimension of protection
                 beyond the hierarchical protection domains implemented
                 by traditional operating systems and processor
                 architectures.\par

                 We present the design and implementation of Overshadow
                 and show how its new protection semantics can be
                 integrated with existing systems. Our design has been
                 fully implemented and used to protect a wide range of
                 unmodified legacy applications running on an unmodified
                 Linux operating system. We evaluate the performance of
                 our implementation, demonstrating that this approach is
                 practical.",
  acknowledgement = ack-nhfb,
  keywords =     "cloaking; hypervisors; memory protection;
                 multi-shadowing; operating systems; virtual machine
                 monitors; VMM",
}

@Book{Chisnall:2008:DGX,
  author =       "David Chisnall",
  title =        "The definitive guide to the {Xen} hypervisor",
  publisher =    pub-PH,
  address =      pub-PH:adr,
  pages =        "xx + 286",
  year =         "2008",
  ISBN =         "0-13-234971-X",
  ISBN-13 =      "978-0-13-234971-0",
  LCCN =         "QA76.9.V5 C427 2008",
  bibdate =      "Mon May 17 09:05:00 MDT 2010",
  bibdate =      "Thu Jul 10 16:25:14 MDT 2008",
  bibsource =    "fsz3950.oclc.org:210/WorldCat; z3950.loc.gov:7090/Voyager",
  series =       "Prentice Hall open source software development
                 series",
  URL =          "http://www.loc.gov/catdir/toc/fy0805/2007036152.html",
  acknowledgement = ack-nhfb,
  subject =      "computer organization; parallel processing (electronic
                 computers); virtual computer systems; Xen (electronic
                 resource); Xen 3",
}

@Article{Choi:2008:SHM,
  author =       "Yoonseo Choi and Hwansoo Han",
  title =        "Shared heap management for memory-limited {Java}
                 virtual machines",
  journal =      j-TECS,
  volume =       "7",
  number =       "2",
  pages =        "13:1--13:??",
  month =        feb,
  year =         "2008",
  CODEN =        "????",
  DOI =          "http://doi.acm.org/10.1145/1331331.1331337",
  ISSN =         "1539-9087",
  bibdate =      "Thu Jun 12 15:22:00 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "One scarce resource in embedded systems is memory.
                 Multitasking makes the lack of memory problem even
                 worse. Most current embedded systems, which do not
                 provide virtual memory, simply divide physical memory
                 and evenly assign contiguous memory chunks to multiple
                 applications. Such simple memory management can
                 frequently cause the lack of available memory for some
                 applications, while others are not using the full
                 amount of assigned memory. To overcome inefficiency in
                 current memory management, we present an efficient heap
                 management scheme that allows multiple applications to
                 share heap space. To reduce overall heap memory usage,
                 applications adaptively acquire subheaps out of shared
                 pool of memory and release surplus subheaps to shared
                 pool. As a result, applications see noncontiguous
                 multiple subheaps as a heap in their address space. We
                 target Java applications to implement our heap-sharing
                 scheme in the KVM from Sun Microsystems. To protect
                 fragmented heap space with a limited number of regions
                 in memory protection unit (MPU), we maintain only a
                 limited number of subheaps. We experimentally evaluate
                 our heap management scheme with J2ME MIDP applications.
                 Our static and dynamic schemes reduce heap memory
                 usage, on average, by 30 and 27\%, respectively. For
                 both schemes, overheads are kept low. The execution
                 times in our schemes are increased only by 0.01\% for
                 static scheme and 0.35\% for dynamic scheme, on
                 average.",
  acknowledgement = ack-nhfb,
  articleno =    "13",
  keywords =     "dynamic memory management; garbage collection; heap
                 sharing; memory protection unit",
}

@Manual{DELUG:2008:VKB,
  title =        "{Vmknoppix 2008 05 19: auf Knoppix basierende
                 Live-Distribution mit integrierten
                 Virtualisierungssystemen wie Xen, KVM, Virtualbox oder
                 Qemu}",
  organization = "{Deutsche Linux-User-Group}",
  address =      "M{\"u}nchen, Germany",
  year =         "2008",
  bibdate =      "Mon Sep 13 11:45:37 2010",
  note =         "One CD-ROM.",
  acknowledgement = ack-nhfb,
}

@Article{Faibish:2008:SVU,
  author =       "Sorin Faibish and Stephen Fridella and Peter Bixby and
                 Uday Gupta",
  title =        "Storage virtualization using a block-device file
                 system",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "1",
  pages =        "119--126",
  month =        jan,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1341312.1341340",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:19:29 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "The design and organization of modern file systems has
                 been traditionally driven by practical considerations
                 related to the physical properties of computer disks
                 Storage virtualization makes such considerations
                 largely irrelevant, and file-system designs based on
                 them perform sub-optimally in a virtual storage
                 environment. One important example of this phenomenon
                 is the relationship between disk seek times and the
                 placement and organization of file system meta-data. In
                 this paper we show that traditional approaches to
                 organizing meta-data in file systems are closely
                 related to assumptions about the physical properties of
                 disks and that for this reason traditional file systems
                 fail to materialize the full benefits of storage
                 virtualization. We go on to propose a different file
                 system organization of data and meta-data designed to
                 exploit the power of virtualized storage.",
  acknowledgement = ack-nhfb,
}

@Article{Fong:2008:DVS,
  author =       "Liana Fong and Malgorzata Steinder",
  title =        "Duality of virtualization: simplification and
                 complexity",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "1",
  pages =        "96--97",
  month =        jan,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1341312.1341330",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:19:29 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "In recent years, virtualization has gained much in
                 visibility and importance in the information technology
                 (IT) industry. Many analyst reports, including IDC [1]
                 and EMA [2], indicated ever increasing number of
                 companies deployed virtualization to their production
                 environments. There is also tremendous momentum from
                 industrial vendors in creating new virtualization
                 enablers along with their management functions. Some
                 vendors engage in activities of standardizing common
                 abstractions for various virtual entities at different
                 virtualization layers.",
  acknowledgement = ack-nhfb,
}

@Article{Franklin:2008:RDV,
  author =       "Jason Franklin and Mark Luk and Jonathan M. McCune and
                 Arvind Seshadri and Adrian Perrig and Leendert van
                 Doorn",
  title =        "Remote detection of virtual machine monitors with
                 fuzzy benchmarking",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "3",
  pages =        "83--92",
  month =        apr,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1368506.1368518",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:21:09 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "We study the remote detection of virtual machine
                 monitors (VMMs) across the Internet, and devise fuzzy
                 benchmarking as an approach that can successfully
                 detect the presence or absence of a VMM on a remote
                 system. Fuzzy benchmarking works by making timing
                 measurements of the execution time of particular code
                 sequences executing on the remote system. The fuzziness
                 comes from heuristics which we employ to learn
                 characteristics of the remote system's hardware and VMM
                 configuration. Our techniques are successful despite
                 uncertainty about the remote machine's hardware
                 configuration.",
  acknowledgement = ack-nhfb,
}

@Book{Haletky:2008:VES,
  author =       "Edward Haletky",
  title =        "{VMware ESX} server in the enterprise: planning and
                 securing virtualization servers",
  publisher =    pub-PH,
  address =      pub-PH:adr,
  pages =        "xxiv + 551",
  year =         "2008",
  ISBN =         "0-13-230207-1 (paperback)",
  ISBN-13 =      "978-0-13-230207-4 (paperback)",
  LCCN =         "QA76.9.V5 H35 2008",
  bibdate =      "Thu Jan 21 14:12:27 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/toc/ecip083/2007044443.html",
  acknowledgement = ack-nhfb,
  subject =      "Virtual computer systems; Security measures; VMware;
                 Operating systems (Computers)",
  tableofcontents = "System considerations \\
                 Version comparison \\
                 Installation \\
                 Auditing, monitoring, and securing \\
                 Storage with ESX \\
                 Effects on operations \\
                 Networking \\
                 Configuring ESX from a host connection \\
                 Configuring ESX from virtual center or host \\
                 Virtual machines \\
                 Dynamic resource load balancing \\
                 Disaster recovery and backup \\
                 The future of virtualization \\
                 Appendix A: Security script \\
                 Appendix B: ESX version 3 text installation \\
                 Appendix C: ESX version 3 graphical installation.",
}

@Article{Hay:2008:FEV,
  author =       "Brian Hay and Kara Nance",
  title =        "Forensics examination of volatile system data using
                 virtual introspection",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "3",
  pages =        "74--82",
  month =        apr,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1368506.1368517",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:21:09 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "While static examination of computer systems is an
                 important part of many digital forensics
                 investigations, there are often important system
                 properties present only in volatile memory that cannot
                 be effectively recovered using static analysis
                 techniques, such as offline hard disk acquisition and
                 analysis. An alternative approach, involving the live
                 analysis of target systems to uncover this volatile
                 data, presents significant risks and challenges to
                 forensic investigators as observation techniques are
                 generally intrusive and can affect the system being
                 observed. This paper provides a discussion of live
                 digital forensics analysis through virtual
                 introspection and presents a suite of virtual
                 introspection tools developed for Xen (VIX tools). The
                 VIX tools suite can be used for unobtrusive digital
                 forensic examination of volatile system data in virtual
                 machines, and addresses a key research area identified
                 in the virtualization in digital forensics research
                 agenda [22].",
  acknowledgement = ack-nhfb,
  keywords =     "digital forensics; virtual introspection; virtual
                 machine monitor; VIX",
}

@Book{Hogenson:2008:FCC,
  author =       "Gordon Hogenson",
  title =        "Foundations of {C++\slash CLI}: the {Visual C++}
                 Language for {.NET 3.5}",
  publisher =    pub-APRESS,
  address =      pub-APRESS:adr,
  year =         "2008",
  DOI =          "http://dx.doi.org/10.1007/978-1-4302-1024-5",
  ISBN =         "1-4302-1024-9, 1-4302-1023-0",
  ISBN-13 =      "978-1-4302-1024-5, 978-1-4302-1023-8",
  LCCN =         "QA76.73.C153 H54 2008eb",
  bibdate =      "Mon May 17 09:04:37 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
  subject =      "C++ (Computer program language)",
}

@Book{Hudson:2008:FU,
  author =       "Andrew Hudson and Paul Hudson",
  title =        "{Fedora 7} unleashed",
  publisher =    pub-SAMS,
  address =      pub-SAMS:adr,
  pages =        "xxix + 903",
  year =         "2008",
  ISBN =         "0-672-32942-5",
  ISBN-13 =      "978-0-672-32942-5",
  LCCN =         "QA76.76.O63 H794 2008",
  bibdate =      "Mon Sep 13 11:21:54 MDT 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/toc/ecip0723/2007030725.html",
  acknowledgement = ack-nhfb,
  subject =      "Linux; Operating systems (Computers)",
  tableofcontents = "Introduction \\
                 Part I. Installation and configuration \\
                 Installing Fedora \\
                 Fedora quick start \\
                 Working with GNOME \\
                 Command line quickstart \\
                 Part II. Desktop Fedora \\
                 On the Internet \\
                 Productivity applications \\
                 Multimedia \\
                 Printing with Fedora \\
                 Games \\
                 Part III. System administration \\
                 Managing users \\
                 Automating tasks \\
                 System-monitoring tools \\
                 Backing up \\
                 Networking \\
                 Remote access with SSH \\
                 Xen \\
                 Part IV. Fedors as a server \\
                 Apache web server management \\
                 Administering database services \\
                 File and print \\
                 Remote file serving with FTP \\
                 Handling electronic mail \\
                 Setting up a proxy server \\
                 Managing DNS \\
                 LDAP \\
                 Part V. Programming Linux \\
                 Using Perl \\
                 Working with Python \\
                 Writing PHP scripts \\
                 C/C++ programming tools for Fedora \\
                 Mono \\
                 Part VI. Fedora housekeeping \\
                 Securing your machines \\
                 Performance tuning \\
                 Command Line masterclass \\
                 Writing and executing a shell script \\
                 Advanced software management \\
                 Managing the file software \\
                 Kernel and module management \\
                 Part VII. Appendix \\
                 A. The history of the Red Hat and Fedora \\
                 B. Installation resources \\
                 C. Fedora and Linux Internet resources",
}

@Article{Kong:2008:PTD,
  author =       "Jiantao Kong and Karsten Schwan and Min Lee and
                 Mustaque Ahamad",
  title =        "{Protectit}: trusted distributed services operating on
                 sensitive data",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "4",
  pages =        "137--147",
  month =        may,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1357010.1352608",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:21:34 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Protecting shared sensitive information is a key
                 requirement for today's distributed applications. Our
                 research uses virtualization technologies to create and
                 maintain trusted data paths across distributed
                 machines, for the services being run and their
                 information exchanges. For trusted data paths, runtime
                 protection methods control what data is visible to
                 which distributed services operating on it, guided by
                 online monitoring that determines the levels of trust
                 inherent in the paths' machines, services, and service
                 actions. This paper presents a key functional element
                 of trusted data paths, which is the ProtectIT
                 interception mechanism for controlling the data
                 exchanges between the different virtual machines
                 running trusted services. ProtectIT can be applied to
                 any communication and/or I/O performed by virtual
                 machines, and because ProtectIT does not require
                 application, middleware, or operating system
                 modifications, it can be used to construct trusted data
                 paths without the knowledge or consent of such
                 entities. Further, since ProtectIT operates in virtual
                 machines isolated from those used by applications, it
                 is not subject to the attacks faced by services exposed
                 to the open Internet. ProtectIT's functionality
                 consists of dynamic protection rules represented as
                 data filters applied to virtual machines'
                 communications. Examples presented in this paper
                 include email services for which ProtectIT's filters
                 control data visibility to mail servers and clients,
                 and unsecured virtual machine communications morphed
                 into secure ones via ProtectIT-based message
                 interception.",
  acknowledgement = ack-nhfb,
  keywords =     "data protection; traffic interception; trusted data
                 path",
}

@Article{Liu:2008:PBH,
  author =       "Tiancheng Liu and Ying Li and Andrew Schofield and
                 Matt Hogstrom and Kewei Sun and Ying Chen",
  title =        "Partition-based heap memory management in an
                 application server",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "1",
  pages =        "98--98",
  month =        jan,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1341312.1341331",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:19:29 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Heap is an important shared resource in Java virtual
                 machine. A problem with memory management in one
                 component can affect the whole system and even result
                 in crashing the virtual machine. In this paper, we
                 propose an partition-based approach to manage heap in
                 an application server. In our approach, the shared heap
                 is divided into logical partitions, in which instances
                 of application components and server components are
                 allocated separately.",
  acknowledgement = ack-nhfb,
  keywords =     "application server; Java; memory management;
                 reliability",
}

@Book{Lowe:2008:VID,
  author =       "William J. Lowe",
  title =        "{VMware} infrastructure 3 for dummies",
  publisher =    pub-WILEY,
  address =      pub-WILEY:adr,
  pages =        "xviii + 335",
  year =         "2008",
  ISBN =         "0-470-27793-9",
  ISBN-13 =      "978-0-470-27793-5",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:03:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
  subject =      "VMware; Operating systems (Computers); Virtual
                 computer systems",
}

@Book{Marcy:2008:DRP,
  author =       "Herv{\'e} Marcy",
  title =        "{Disaster-Recovery Programm mit Xen auf Linux Servern
                 [Elektronische Ressource]: Design und Implementierung
                 eines DRP f{\"u}r Xen-virtualisierte Linux-Server im
                 Falle eines kompletten Ausfalls eines Rechenzentrums}",
  publisher =    "Verlag Dr. M{\"u}ller",
  address =      "Saarbr{\"u}cken, Germany",
  pages =        "????",
  year =         "2008",
  ISBN =         "3-639-09099-3",
  ISBN-13 =      "978-3-639-09099-4",
  LCCN =         "????",
  bibdate =      "Mon Sep 13 11:47:46 2010",
  bibsource =    "http://www.vdm-verlag.de; Archivserver der Deutschen
                 Nationalbibliothek",
  acknowledgement = ack-nhfb,
}

@Book{Matthews:2008:RXH,
  editor =       "Jeanna Matthews and Eli M. Dow and Todd Deshane and
                 Wenjin Hu and Jeremy Bongio and Patrick F. Wilbur and
                 Brendan Johnson",
  title =        "Running {Xen}: a hands-on guide to the art of
                 virtualization",
  publisher =    pub-PH,
  address =      pub-PH:adr,
  pages =        "xxxiii + 586",
  year =         "2008",
  ISBN =         "0-13-207467-2, 0-13-234966-3 (paperback)",
  ISBN-13 =      "978-0-13-207467-4, 978-0-13-234966-6 (paperback)",
  LCCN =         "QA76.9.V5 R86 2008",
  bibdate =      "Thu Jan 21 14:12:09 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/toc/ecip087/2007052439.html",
  acknowledgement = ack-nhfb,
  subject =      "Xen (Electronic resource); Virtual computer systems;
                 Computer organization; Parallel processing (Electronic
                 computers)",
  tableofcontents = "Chapter 1: Xen-Background and Virtualization Basics
                 \\
                 Chapter 2: A Quick Tour with the Xen LiveCD \\
                 Chapter 3: The Xen Hypervisor \\
                 Chapter 4: Hardware Requirements and Installation of
                 Xen Domain0 \\
                 Chapter 5: Using Prebuilt Guest Images \\
                 Chapter 6: Managing Unprivileged Domains \\
                 Chapter 7: Populating Guest Images \\
                 Chapter 8: Storing Guest Images \\
                 Chapter 9: Device Virtualization and Management \\
                 Chapter 10: Network Configuration \\
                 Chapter 11: Securing a Xen System \\
                 Chapter 12: Managing Guest Resources \\
                 Chapter 13: Guest Save, Restore and Live Migration \\
                 Chapter 14: An Overview of Xen Enterprise Management
                 Tools \\
                 Appendix A: Resources \\
                 Appendix B: The xm Command \\
                 Appendix C: The xend Configuration Options \\
                 Appendix D: Guest Configuration Options \\
                 Appendix E: Xen Performance Evaluation Index",
}

@Book{McCain:2008:MVI,
  author =       "Chris McCain",
  title =        "Mastering {VMware Infrastructure 3}",
  publisher =    "Wiley Technology Publishing",
  address =      "Indianapolis, IN, USA",
  pages =        "xxi + 554",
  year =         "2008",
  ISBN =         "0-470-18313-6 (paperback)",
  ISBN-13 =      "978-0-470-18313-7 (paperback)",
  LCCN =         "QA76.76.O63 M37483 2008",
  bibdate =      "Mon May 17 09:03:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://www.loc.gov/catdir/enhancements/fy0805/2007045713-d.html;
                 http://www.loc.gov/catdir/enhancements/fy0805/2007045713-t.html;
                 http://www.loc.gov/catdir/enhancements/fy0829/2007045713-b.html",
  abstract =     "This title offers a strong design component followed
                 by an in-depth looks at the day-to-day tasks that make
                 virtualization a key technology for any enterprise.
                 Topics include creating and managing virtual networks,
                 creating and managing storage devices, migrating and
                 importing virtual machines, and protecting data.",
  acknowledgement = ack-nhfb,
  subject =      "VMware; operating systems (computers); virtual
                 computer systems",
  tableofcontents = "1. Introducing VMware Infrastructure 3. \\
                 2. Installing and Planning ESX Server. \\
                 3. Creating and Managing Virtual Networks. \\
                 4. Creating and Managing Storage Devices. \\
                 5. Installing and Configuring VirtualCenter 2.0. \\
                 6. Creating and Managing Virtual Machines. \\
                 7. Migrating and Importing Virtual Machines. \\
                 8. Configuring and Managing Virtual Infrastructure
                 Access Controls. \\
                 9. Managing and Monitoring Resource Access. \\
                 10. High Availability and Business Continuity. \\
                 11. Monitoring Virtual Infrastructure Performance. \\
                 12. Securing A Virtual Infrastructure. \\
                 13. Virtual infrastructure 3 best practices",
}

@Article{Meyer:2008:PVD,
  author =       "Dut h T. Meyer and Gitika Aggarwal and Brendan Cully
                 and Geoffrey Lefebvre and Michael J. Feeley and Norman
                 C. Hutchinson and Andrew Warfield",
  title =        "{Parallax}: virtual disks for virtual machines",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "4",
  pages =        "41--54",
  month =        may,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1357010.1352598",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:21:34 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Parallax is a distributed storage system that uses
                 virtualization to provide storage facilities
                 specifically for virtual environments. The system
                 employs a novel architecture in which storage features
                 that have traditionally been implemented directly on
                 high-end storage arrays and switches are relocated into
                 a federation of storage VMs, sharing the same physical
                 hosts as the VMs that they serve. This architecture
                 retains the single administrative domain and OS
                 agnosticism achieved by array- and switch-based
                 approaches, while lowering the bar on hardware
                 requirements and facilitating the development of new
                 features. Parallax offers a comprehensive set of
                 storage features including frequent, low-overhead
                 snapshot of virtual disks, the `gold-mastering' of
                 template images, and the ability to use local disks as
                 a persistent cache to dampen burst demand on networked
                 storage.",
  acknowledgement = ack-nhfb,
  keywords =     "network storage; snapshot; virtualization",
}

@Book{Morimoto:2008:WSH,
  author =       "Rand Morimoto and Jeff Guillet",
  title =        "{Windows Server 2008 Hyper-V} unleashed",
  publisher =    pub-SAMS,
  address =      pub-SAMS:adr,
  pages =        "xv + 459",
  year =         "2008",
  ISBN =         "0-672-33028-8",
  ISBN-13 =      "978-0-672-33028-5",
  LCCN =         "QA76.9.V5 M656 2009",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
  remark =       "Includes coverage of System Center Virtual Machine
                 Manager 2008",
  subject =      "Microsoft Windows server Hyper-V; Virtual computer
                 systems",
}

@Book{Parziale:2008:ZVL,
  editor =       "Lydia Parziale and others",
  title =        "{z\slash VM} and {Linux} on {IBM System z}: the
                 virtualization cookbook for {RHEL 5.2}",
  number =       "SG24-7492-00",
  publisher =    pub-IBM,
  address =      pub-IBM:adr,
  pages =        "xvi + 250",
  year =         "2008",
  ISBN =         "0-7384-3181-8",
  ISBN-13 =      "978-0-7384-3181-9",
  LCCN =         "QA76.76.O63 Z867 2008",
  bibdate =      "Thu Jan 21 14:12:53 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "IBM redbooks",
  URL =          "http://proquest.safaribooksonline.com/?fpi=0738431818",
  acknowledgement = ack-nhfb,
  subject =      "z/VM; Linux; Operating systems (Computers)",
}

@Article{Pelleg:2008:VBD,
  author =       "Dan Pelleg and Muli Ben-Yehuda and Rick Harper and
                 Lisa Spainhower and Tokunbo Adeshiyan",
  title =        "{Vigilant}: out-of-band detection of failures in
                 virtual machines",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "1",
  pages =        "26--31",
  month =        jan,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1341312.1341319",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:19:29 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "What do our computer systems do all day? How do we
                 make sure they continue doing it when failures occur?
                 Traditional approaches to answering these questions
                 often involve in-band monitoring agents. However
                 in-band agents suffer from several drawbacks: they need
                 to be written or customized for every workload
                 (operating system and possibly also application), they
                 comprise potential security liabilities, and are
                 themselves affected by adverse conditions in the
                 monitored systems.\par

                 Virtualization technology makes it possible to
                 encapsulate an entire operating system or application
                 instance within a virtual object that can then be
                 easily monitored and manipulated without any knowledge
                 of the contents or behavior of that object. This can be
                 done out-of-band, using general purpose agents that do
                 not reside inside the object, and hence are not
                 affected by the behavior of the object.\par

                 This paper describes Vigilant, a novel way of
                 monitoring virtual machines for problems. Vigilant
                 requires no specialized agents inside a virtual object
                 it is monitoring. Instead, it uses the hypervisor to
                 directly monitor the resource requests and utilization
                 of an object. Machine learning methods are then used to
                 analyze the readings. Our experimental results show
                 that problems can be detected out-of-band with high
                 accuracy. Using Vigilant we demonstrate that
                 out-of-band monitoring using virtualization and machine
                 learning can accurately identify faults in the guest
                 OS, while avoiding the many pitfalls associated with
                 in-band monitoring.",
  acknowledgement = ack-nhfb,
}

@Book{Radonic:2008:XAK,
  author =       "Andrej Radonic and Thomas Halinka and Frank Meyer",
  title =        "{XEN 3.2: aufsetzen, konfigurieren, betreiben}",
  publisher =    "Franzis-Verlag",
  address =      "Poing, Germany",
  edition =      "Second",
  pages =        "499",
  year =         "2008",
  ISBN =         "3-7723-7247-3",
  ISBN-13 =      "978-3-7723-7247-6",
  LCCN =         "????",
  bibdate =      "Mon Sep 13 11:22:13 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Franzis Professional Series",
  acknowledgement = ack-nhfb,
}

@Article{Russell:2008:VTF,
  author =       "Rusty Russell",
  title =        "{{\tt virtio}}: towards a de-facto standard for
                 virtual {I/O} devices",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "5",
  pages =        "95--103",
  month =        jul,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1400097.1400108",
  ISSN =         "0163-5980",
  bibdate =      "Wed Aug 6 16:54:12 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "The Linux Kernel currently supports at least 8
                 distinct virtualization systems: Xen, KVM, VMware's
                 VMI, IBM's System p, IBM's System z, User Mode Linux,
                 lguest and IBM's legacy iSeries. It seems likely that
                 more such systems will appear, and until recently each
                 of these had its own block, network, console and other
                 drivers with varying features and
                 optimizations.\par

                 The attempt to address this is virtio: a series of
                 efficient, well-maintained Linux drivers which can be
                 adapted for various different hypervisor
                 implementations using a shim layer. This includes a
                 simple extensible feature mechanism for each driver. We
                 also provide an obvious ring buffer transport
                 implementation called vring, which is currently used by
                 KVM and lguest. This has the subtle effect of providing
                 a path of least resistance for any new hypervisors:
                 supporting this efficient transport mechanism will
                 immediately reduce the amount of work which needs to be
                 done. Finally, we provide an implementation which
                 presents the vring transport and device configuration
                 as a PCI device: this means guest operating systems
                 merely need a new PCI driver, and hypervisors need only
                 add vring support to the virtual devices they implement
                 (currently only KVM does this).\par

                 This paper will describe the virtio API layer as
                 implemented in Linux, then the vring implementation,
                 and finally its embodiment in a PCI device for simple
                 adoption on otherwise fully-virtualized guests. We'll
                 wrap up with some of the preliminary work to integrate
                 this I/O mechanism deeper into the Linux host kernel.",
  acknowledgement = ack-nhfb,
  keywords =     "I/O; KVM; lguest; Linux; ring buffer; virtio;
                 virtio_pci; virtualization; vring",
}

@MastersThesis{Seecker:2008:EGS,
  author =       "Robert Seecker",
  title =        "{Erstellung einer geh{\"a}rteten Systemarchitecktur
                 mit der Virtualisierungsl{\"o}sung Xen zur
                 Konsolidierung von Kundenserversystemen in einem
                 Rechenzentrum}",
  type =         "{Bachelor} Thesis",
  school =       "Fachhochschule",
  address =      "Stralsund, Germany",
  pages =        "vii + 86",
  year =         "2008",
  bibdate =      "Mon Sep 13 11:41:23 2010",
  acknowledgement = ack-nhfb,
}

@Article{Steinder:2008:SVA,
  author =       "Malgorzata Steinder and Ian Whalley and David Chess",
  title =        "Server virtualization in autonomic management of
                 heterogeneous workloads",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "1",
  pages =        "94--95",
  month =        jan,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1341312.1341329",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:19:29 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Server virtualization opens up a range of new
                 possibilities for autonomic datacenter management,
                 through the availability of new automation mechanisms
                 that can be exploited to control and monitor tasks
                 running within virtual machines. This facilitates more
                 powerful and flexible autonomic controls, through
                 management software that maintains the system in a
                 desired state in the face of changing workload and
                 demand. This paper explores in particular the use of
                 server virtualization technology in the autonomic
                 management of data centers running a heterogeneous mix
                 of workloads. We present a system that manages
                 heterogeneous workloads to their performance goals and
                 demonstrate its effectiveness via real-system
                 experiments and simulation.",
  acknowledgement = ack-nhfb,
}

@Book{Subramaniam:2008:PST,
  author =       "Venkat Subramaniam",
  title =        "Programming {Scala}: tackle multicore complexity on
                 the {JVM}",
  publisher =    "Pragmatic Bookshelf",
  address =      "Raleigh, NC, USA",
  pages =        "x + 221",
  year =         "2008",
  ISBN =         "1-934356-31-X (paperback)",
  ISBN-13 =      "978-1-934356-31-9 (paperback)",
  LCCN =         "QA76.73.J38 S83 2008",
  bibdate =      "Thu Jan 21 14:00:30 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  subject =      "Scala (Computer program language); Java virtual
                 machine; Java (Computer program language)",
}

@Article{Ta-Shma:2008:VMT,
  author =       "Paula Ta-Shma and Guy Laden and Muli Ben-Yehuda and
                 Michael Factor",
  title =        "Virtual machine time travel using continuous data
                 protection and checkpointing",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "1",
  pages =        "127--134",
  month =        jan,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1341312.1341341",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:19:29 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Virtual machine (VM) time travel enables reverting a
                 virtual machine's state, both transient and persistent,
                 to past points in time. This capability can be used to
                 improve virtual machine availability, to enable
                 forensics on past VM states, and to recover from
                 operator errors. We present an approach to virtual
                 machine time travel which combines Continuous Data
                 Protection (CDP) storage support with
                 live-migration-based virtual machine checkpointing. In
                 particular, we present a novel approach for CDP which
                 enables efficient reverts of the storage state to past
                 points in time and makes it possible to undo a revert,
                 and this is achieved using a simple branched-temporal
                 data structure. We also present a design and
                 implementation of a simple live-migration-based
                 checkpointing mechanism in Xen.",
  acknowledgement = ack-nhfb,
}

@Book{Thorns:2008:VBK,
  editor =       "Fabian Thorns",
  title =        "{Das Virtualisierungs-Buch: [Konzepte, Techniken und
                 L{\"o}sungen: VMware, MS, Parallels, Xen u.v.a.]}",
  publisher =    "Computer- und Literatur-Verlag",
  address =      "B{\"o}blingen, Germany",
  edition =      "Second",
  pages =        "799",
  year =         "2008",
  ISBN =         "3-936546-56-8",
  ISBN-13 =      "978-3-936546-56-9",
  LCCN =         "????",
  bibdate =      "Mon Sep 13 11:39:30 MDT 2010",
  bibsource =    "z3950.gbv.de:20011/gvk",
  acknowledgement = ack-nhfb,
}

@Book{vonHagen:2008:PXV,
  author =       "William von Hagen",
  title =        "Professional {Xen} virtualization",
  publisher =    pub-WILEY,
  address =      pub-WILEY:adr,
  pages =        "xxiii + 405",
  year =         "2008",
  ISBN =         "0-470-13811-4 (paperback), 0-470-28918-X
                 (electronic)",
  ISBN-13 =      "978-0-470-13811-3 (paperback), 978-0-470-28918-1
                 (electronic)",
  LCCN =         "QA76.9.V5 V665 2008",
  bibdate =      "Thu Jan 21 14:12:19 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://www.loc.gov/catdir/enhancements/fy0806/2007049359-d.html;
                 http://www.loc.gov/catdir/enhancements/fy0806/2007049359-t.html;
                 http://www.loc.gov/catdir/enhancements/fy0809/2007049359-b.html",
  acknowledgement = ack-nhfb,
  subject =      "Virtual computer systems; Open source software",
  xxpages =      "xxiii + 408",
}

@Book{Warnke:2008:QVC,
  author =       "Robert Warnke and Thomas Ritzau",
  title =        "{QEMU: virtuelle Computer f{\"u}r viele
                 Betriebssysteme; QEMU Version 0.9.1}",
  publisher =    "Books on Demand GmbH",
  address =      "Norderstedt, Germany",
  pages =        "300",
  year =         "2008",
  ISBN =         "3-8370-0876-2",
  ISBN-13 =      "978-3-8370-0876-0",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:07:48 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://d-nb.info/986260371/04",
  acknowledgement = ack-nhfb,
  subject =      "Qemu",
}

@Article{Wegiel:2008:MCV,
  author =       "Michal Wegiel and Chandra Krintz",
  title =        "The {Mapping Collector}: virtual memory support for
                 generational, parallel, and concurrent compaction",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "2",
  pages =        "91--102",
  month =        mar,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1353535.1346294",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:20:12 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Parallel and concurrent garbage collectors are
                 increasingly employed by managed runtime environments
                 (MREs) to maintain scalability, as multi-core
                 architectures and multi-threaded applications become
                 pervasive. Moreover, state-of-the-art MREs commonly
                 implement compaction to eliminate heap fragmentation
                 and enable fast linear object allocation.\par

                 Our empirical analysis of object demographics reveals
                 that unreachable objects in the heap tend to form
                 clusters large enough to be effectively managed at the
                 granularity of virtual memory pages. Even though
                 processes can manipulate the mapping of the virtual
                 address space through the standard operating system
                 (OS) interface on most platforms, extant
                 parallel/concurrent compactors do not do so to exploit
                 this clustering behavior and instead achieve compaction
                 by performing, relatively expensive, object moving and
                 pointer adjustment.\par

                 We introduce the Mapping Collector (MC), which
                 leverages virtual memory operations to reclaim and
                 consolidate free space without moving objects and
                 updating pointers. MC is a nearly-single-phase
                 compactor that is simpler and more efficient than
                 previously reported compactors that comprise two to
                 four phases. Through effective MRE-OS coordination, MC
                 maintains the simplicity of a non-moving collector
                 while providing efficient parallel and concurrent
                 compaction.\par

                 We implement both stop-the-world and concurrent MC in a
                 generational garbage collection framework within the
                 open-source HotSpot Java Virtual Machine. Our
                 experimental evaluation using a multiprocessor
                 indicates that MC significantly increases throughput
                 and scalability as well as reduces pause times,
                 relative to state-of-the-art, parallel and concurrent
                 compactors.",
  acknowledgement = ack-nhfb,
  keywords =     "compaction; concurrent; parallel; virtual memory",
}

@Article{Weinhold:2008:VBV,
  author =       "Carsten Weinhold and Hermann H{\"a}rtig",
  title =        "{VPFS}: building a virtual private file system with a
                 small trusted computing base",
  journal =      j-OPER-SYS-REV,
  volume =       "42",
  number =       "4",
  pages =        "81--93",
  month =        may,
  year =         "2008",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1352592.1352602",
  ISSN =         "0163-5980",
  bibdate =      "Fri Jun 20 17:21:34 MDT 2008",
  bibsource =    "http://portal.acm.org/",
  abstract =     "In this paper we present the lessons we learned when
                 developing VPFS, a virtual private file system that is
                 based on both a small amount of trusted storage and an
                 untrusted legacy file system residing on the same
                 machine. VPFS' purpose is to provide secure and
                 reliable storage to highly sensitive applications
                 running on top of a microkernel, which may concurrently
                 execute untrusted software. The confidentiality and
                 integrity guarantees of VPFS do not only apply to file
                 contents, but also to all meta data including integrity
                 of the directory structure.\par

                 We explored design alternatives that allow us to
                 securely reuse untrusted infrastructure and thereby
                 minimize the complexity that a file-system
                 implementation adds to the trusted computing base. VPFS
                 is split into two isolated components. A small trusted
                 component implements all security-critical
                 functionality, whereas the untrusted part reuses an
                 existing file-system implementation provided by a
                 virtualized legacy operating system that can be
                 untrusted. In our VPFS prototype, alternative
                 configurations of the trusted component comprise only
                 between 4,000 and 4,600 lines of code, which is at
                 least an order of magnitude smaller than existing
                 commodity file-system stacks.",
  acknowledgement = ack-nhfb,
  keywords =     "legacy reuse; secure file system; virtualization",
}

@Book{Aprea:2009:HVS,
  author =       "Jean-Fran{\c{c}}ois Apr{\'e}a",
  title =        "{Hyper-V} et {SC Virtual Machine Manager}: technologie
                 de virtualisation sous {Windows Server 2008 R2}.
                 ({French}). [{Hyper-V} and {SC Virtual Machine
                 Manager}: virtualization technology under {Windows
                 Server 2008 R2}]",
  publisher =    "{\'E}ditions ENI",
  address =      "Saint Herblain, France",
  pages =        "537",
  year =         "2009",
  ISBN =         "2-7460-5061-7",
  ISBN-13 =      "978-2-7460-5061-7",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Expert IT",
  acknowledgement = ack-nhfb,
  language =     "French",
  subject =      "Virtualisation. Virtual systems. Microsoft Windows
                 Server 2008 (computer operating system)",
}

@Article{Baldwin:2009:PSS,
  author =       "Adrian Baldwin and Chris Dalton and Simon Shiu and
                 Krzysztof Kostienko and Qasim Rajpoot",
  title =        "Providing secure services for a virtual
                 infrastructure",
  journal =      j-OPER-SYS-REV,
  volume =       "43",
  number =       "1",
  pages =        "44--51",
  month =        jan,
  year =         "2009",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1496909.1496919",
  ISSN =         "0163-5980",
  bibdate =      "Thu Jan 22 17:21:31 MST 2009",
  bibsource =    "http://portal.acm.org/",
  abstract =     "Virtualization brings exibility to the data center and
                 enables separations allowing for better security
                 properties. For these security properties to be fully
                 utilized, virtual machines need to be able to connect
                 to secure services such as networking and storage. This
                 paper addresses the problems associated with managing
                 the cryptographic keys upon which such services rely by
                 ensuring that keys remain within the trusted computing
                 base. Here we describe a general architecture for
                 managing keys tied to the underlying virtualized
                 systems, with a specific example given for secure
                 storage.",
  acknowledgement = ack-nhfb,
  keywords =     "key management; storage; TCG; virtualization",
}

@Book{Becker:2009:VIA,
  author =       "Dirk Becker",
  title =        "{VirtualBox Installation, Anwendung, Praxis}.
                 ({German}) [{VirtualBox} Installation, Use, and
                 Practice]",
  publisher =    "Galileo Press",
  address =      "Bonn, Germany",
  pages =        "321",
  year =         "2009",
  ISBN =         "3-8362-1374-5",
  ISBN-13 =      "978-3-8362-1374-5",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:06:33 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Galileo computing",
  URL =          "http://d-nb.info/993523552/04;
                 http://www.galileocomputing.de",
  acknowledgement = ack-nhfb,
  remark =       "Von den Grundlagen bis zum praktischen Einsatz;
                 Troubleshooting, Migration und Kommandozeile; f{\"u}r
                 Ein- und Umsteiger geeignet; ab Version 3",
  subject =      "VirtualBox",
}

@Article{Bratanov:2009:VMW,
  author =       "Stanislav Bratanov and Roman Belenov and Nikita
                 Manovich",
  title =        "Virtual machines: a whole new world for performance
                 analysis",
  journal =      j-OPER-SYS-REV,
  volume =       "43",
  number =       "2",
  pages =        "46--55",
  month =        apr,
  year =         "2009",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1531793.1531802",
  ISSN =         "0163-5980",
  bibdate =      "Thu Apr 23 19:43:22 MDT 2009",
  bibsource =    "http://portal.acm.org/",
  abstract =     "This article addresses a problem of performance
                 monitoring inside virtual machines (VMs). It advocates
                 focused monitoring of particular virtualized programs,
                 explains the need for and the importance of such an
                 approach to performance monitoring in virtualized
                 execution environments, and emphasizes its benefits for
                 virtual machine manufacturers, virtual machine users
                 (mostly, software developers) and hardware (processor)
                 manufacturers. The article defines the problem of in-VM
                 performance monitoring as the ability to employ modern
                 methods and hardware performance monitoring
                 capabilities inside virtual machines to an extent
                 comparable with what is being done in real
                 environments. Unfortunately, there are numerous reasons
                 preventing us from achieving such an ambitious goal,
                 one of those reasons being the lack of support from
                 virtualization engines; that is why a novel method of
                 'cooperative' performance data collection is disclosed.
                 The method implies collection of performance data at
                 physical hardware and simultaneous tracking of software
                 states inside a virtual machine. Each statistically
                 visible execution point of the virtualized software may
                 then be associated with information on real hardware
                 events. The method effectively enables time-based
                 sampling of virtualized workloads combined with
                 hardware event counting, is applicable to unmodified,
                 commercially available virtual machines, and has
                 competitive precision and overhead. The practical
                 significance and value of the method are further
                 illustrated by studying a parallel workload and
                 uncovering virtualization-specific performance issues
                 of multithreaded programs.",
  acknowledgement = ack-nhfb,
  keywords =     "hardware performance event counters; virtual
                 machines",
}

@Book{Cerling:2009:MMV,
  author =       "Tim Cerling and Jeff Buller and Chuck Enstall and
                 Richard Ruiz",
  title =        "Mastering {Microsoft} virtualization",
  publisher =    pub-WILEY,
  address =      pub-WILEY:adr,
  pages =        "576 (est.)",
  year =         "2009",
  ISBN =         "0-470-44958-6",
  ISBN-13 =      "978-0-470-44958-5",
  LCCN =         "QA76.9.V5 M36 2009",
  bibdate =      "Thu Jan 21 14:12:35 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  subject =      "Microsoft Windows server Hyper-V; Virtual computer
                 systems",
}

@Article{Dalton:2009:TVP,
  author =       "Chris I. Dalton and David Plaquin and Wolfgang Weidner
                 and Dirk Kuhlmann and Boris Balacheff and Richard
                 Brown",
  title =        "Trusted virtual platforms: a key enabler for converged
                 client devices",
  journal =      j-OPER-SYS-REV,
  volume =       "43",
  number =       "1",
  pages =        "36--43",
  month =        jan,
  year =         "2009",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1496909.1496918",
  ISSN =         "0163-5980",
  bibdate =      "Thu Jan 22 17:21:31 MST 2009",
  bibsource =    "http://portal.acm.org/",
  abstract =     "This paper introduces our work around combining
                 machine virtualization technology with Trusted
                 Computing Group technology. We first describe our
                 architecture for reducing and containing the privileged
                 code of the Xen Hypervisor. Secondly we describe our
                 Trusted Virtual Platform architecture. This is aimed at
                 supporting the strong enforcement of integrity and
                 security policy controls over a virtual entity where a
                 virtual entity can be either a full guest operating
                 system or virtual appliance running on a virtualized
                 platform. The architecture includes a
                 virtualization-specific integrity measurement and
                 reporting framework. This is designed to reflect all
                 the dependencies of the virtual environment of a guest
                 operating system. The work is a core enabling component
                 of our research around converged devices -- client
                 platforms such as notebooks or desktop PCs that can
                 safely host multiple virtual operating systems and
                 virtual appliances concurrently and report accurately
                 on the trustworthiness of the individually executing
                 entities.",
  acknowledgement = ack-nhfb,
  keywords =     "open trusted computing; TCG; TPM; trusted
                 virtualization",
}

@Book{Fischer:2009:XUH,
  author =       "Marcus Fischer",
  title =        "{Xen das umfassende Handbuch}. ({German}) [{Xen}, the
                 Complete Handbook]",
  publisher =    "Galileo Press",
  address =      "Bonn, Germany",
  pages =        "547",
  year =         "2009",
  ISBN =         "3-8362-1118-1",
  ISBN-13 =      "978-3-8362-1118-5",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:05:00 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Galileo computing",
  URL =          "http://d-nb.info/986059226/04;
                 http://www.galileocomputing.de/;
                 http://deposit.d-nb.de/cgi-bin/dokserv?id=3015256",
  acknowledgement = ack-nhfb,
  language =     "German",
  remark =       "Inkl. {KVM}; von den Grundlagen bis zur
                 Administration; Backup, Troubleshooting, Migration; mit
                 Konfigurationsbeispielen und Befehlsreferenz; inkl.
                 Xen-Live-{CD}]",
  subject =      "XEN3",
}

@Book{Fraser:2009:PVC,
  author =       "Stephen Fraser",
  title =        "{Pro Visual C++\slash CLI} and the {.NET 3.5}
                 Platform",
  publisher =    pub-APRESS,
  address =      pub-APRESS:adr,
  pages =        "xxx + 1048",
  year =         "2009",
  ISBN =         "1-4302-1053-2 (paperback), 1-4302-1054-0
                 (electronic)",
  ISBN-13 =      "978-1-4302-1053-5 (paperback), 978-1-4302-1054-2
                 (electronic)",
  LCCN =         "QA76.73.C153 F735 2009",
  bibdate =      "Mon May 17 09:04:37 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Expert's voice in .NET",
  acknowledgement = ack-nhfb,
  remark =       "The C++/CLI language -- .NET framework development in
                 C++/CLI -- Unsafe/unmanaged C++/CLI",
  subject =      "C++/CLI (Computer program language); Microsoft .NET;
                 Microsoft .NET",
}

@Book{Haletky:2009:VVV,
  author =       "Edward Haletky",
  title =        "{VMware vSphere} and virtual infrastructure security:
                 securing the virtual environment",
  publisher =    pub-PH,
  address =      pub-PH:adr,
  pages =        "xxx + 521",
  year =         "2009",
  ISBN =         "0-13-715800-9 (paperback)",
  ISBN-13 =      "978-0-13-715800-3 (paperback)",
  LCCN =         "QA76.9.V5 H36 2009",
  bibdate =      "Mon May 17 09:03:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
  subject =      "VMware vSphere; Virtual computer systems; Security
                 measures; Cloud computing; Computer security",
}

@Book{Ilgenfritz:2009:VCP,
  author =       "Merle Ilgenfritz and John Ilgenfritz and John Powell
                 and Steven Baca",
  title =        "{VMware} certified professional test prep",
  publisher =    pub-CRC,
  address =      pub-CRC:adr,
  pages =        "xxi + 867",
  year =         "2009",
  ISBN =         "1-4200-6599-8",
  ISBN-13 =      "978-1-4200-6599-2",
  LCCN =         "QA76.3 .I56 2009eb",
  bibdate =      "Mon May 17 09:03:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://www.engnetbase.com/ejournals/books/book\%5Fsummary/summary.asp?id=7409",
  acknowledgement = ack-nhfb,
  subject =      "VMware; Electronic data processing personnel;
                 Certification; Virtual computer systems; Examinations;
                 Study guides",
}

@Book{Joos:2009:MWS,
  author =       "Thomas Joos",
  title =        "{Microsoft Windows Server 2008 --- das Handbuch}.
                 (German) {Microsoft Windows Server 2008 --- the
                 Handbook}",
  publisher =    "Microsoft Press",
  address =      "Unterschlei{\ss}heim",
  edition =      "Second",
  pages =        "1356",
  year =         "2009",
  ISBN =         "3-86645-130-X",
  ISBN-13 =      "978-3-86645-130-8",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://deposit.d-nb.de/cgi-bin/dokserv?id=3161715",
  acknowledgement = ack-nhfb,
  remark =       "Insider-Wissen - praxisnah und kompetent;
                 ber{\"u}cksichtigt Hyper-V. ({German}) [Insider
                 knowledge: covers Hyper-V]",
  subject =      "Windows Server 2008; Microsoft Windows server;
                 Operating systems (Computers); Windows Server 2008",
}

@Book{Kappel:2009:MVH,
  author =       "Jason Kappel and Toby J. Velte and Anthony T. Velte",
  title =        "{Microsoft} virtualization with {Hyper-V}",
  publisher =    pub-MCGRAW-HILL,
  address =      pub-MCGRAW-HILL:adr,
  pages =        "xviii + 430",
  year =         "2009",
  ISBN =         "0-07-161403-6",
  ISBN-13 =      "978-0-07-161403-0",
  LCCN =         "QA76.9.V5 K37 2009",
  bibdate =      "Thu Jan 21 14:12:44 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  subject =      "Microsoft Windows server Hyper-V; Virtual computer
                 systems; Systems migration",
  tableofcontents = "Virtualization overview \\
                 Planning and installation \\
                 Configuring Hyper-V components \\
                 Planning and designing Systems Center Virtual Machine
                 Manager 2008 \\
                 Installing and configuring Systems Center Virtual
                 Machine Manager 2008 \\
                 Configuring Systems Center Virtual Machine Manager 2008
                 \\
                 Creating and managing virtual machines \\
                 Managing your virtual machines \\
                 Backing up, restoring, and disaster recovery for your
                 virtual machines \\
                 Monitoring your virtual solution \\
                 Hyper-V security \\
                 Virtual desktop infrastructure \\
                 Third-party visualization tools for Hyper-V \\
                 Windows Server 2008 Hyper-V command-line reference",
}

@Book{Kelbley:2009:WSH,
  author =       "John Kelbley and Mike Sterling and Allen Stewart",
  title =        "{Windows Server 2008 Hyper-V}: insiders guide to
                 {Microsoft}'s {Hypervisor}",
  publisher =    pub-WILEY,
  address =      pub-WILEY:adr,
  pages =        "xxii + 361",
  year =         "2009",
  ISBN =         "0-470-50398-X (electronic), 0-470-44096-1
                 (paperback)",
  ISBN-13 =      "978-0-470-50398-0 (electronic), 978-0-470-44096-4
                 (paperback)",
  LCCN =         "QA76.9.V5 K45 2009eb",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://www.books24x7.com/marc.asp?bookid=31993",
  acknowledgement = ack-nhfb,
  remark =       "Title from title screen.",
  subject =      "Microsoft Windows Server Hyper-V; virtual computer
                 systems",
}

@Book{Khnaser:2009:VVC,
  author =       "Elias N. Khnaser",
  title =        "{VCP: VMware Certified Professional}",
  publisher =    pub-QUE,
  address =      pub-QUE:adr,
  pages =        "xv + 316",
  year =         "2009",
  ISBN =         "0-7897-3805-8 (paperback)",
  ISBN-13 =      "978-0-7897-3805-9 (paperback)",
  LCCN =         "QA76.3 .K495 2009",
  bibdate =      "Mon May 17 09:03:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  note =         "Includes CD-ROM.",
  series =       "Exam cram",
  acknowledgement = ack-nhfb,
  subject =      "VMware; electronic data processing personnel;
                 certification; virtual computer systems; examinations;
                 study guides",
}

@Book{Larisch:2009:PMH,
  author =       "Dirk Larisch",
  title =        "{Praxisbuch Microsoft Hyper-V: Installation,
                 Konfiguration und Systemverwaltung von Hyper-V f{\"u}r
                 Windows Server 2008 und Hyper-V Server}. ({German})
                 [{Microsoft Hyper-V} Practice Book: Installation,
                 Configuration, and Systems Management of {Hyper-V} for
                 {Windows Server 2008} and {Hyper-V Server}]",
  publisher =    pub-CARL-HANSER,
  address =      pub-CARL-HANSER:adr,
  pages =        "500",
  year =         "2009",
  ISBN =         "3-446-41687-0",
  ISBN-13 =      "978-3-446-41687-1",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://deposit.d-nb.de/cgi-bin/dokserv?id=3200334",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Hyper-V",
}

@Book{Larson:2009:WSHa,
  author =       "Robert Larson and Janique Carbone",
  title =        "{Windows Server 2008 Hyper-V} resource kit",
  publisher =    pub-MICROSOFT,
  address =      pub-MICROSOFT:adr,
  pages =        "xxxv + 744",
  year =         "2009",
  ISBN =         "0-7356-2517-4",
  ISBN-13 =      "978-0-7356-2517-4",
  LCCN =         "QA76.9.V5 L37 2009",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://proquest.safaribooksonline.com/9780735625174",
  acknowledgement = ack-nhfb,
  subject =      "Microsoft Windows server Hyper-V; Virtual computer
                 systems",
}

@Book{Larson:2009:WSHb,
  author =       "Robert Larson and Janique Carbone",
  title =        "{Windows Server 2008 Hyper-V - die technische
                 Referenz: [Insiderinformationen und n{\"u}tzliche Tools
                 direkt von der Quelle]}: [{Windows Server 2008
                 Hyper-V}: the technical reference --- insider
                 information and useful tools --- direct from the
                 source]",
  publisher =    "Microsoft Press",
  address =      "Unterschlei{\ss}heim, Germany",
  pages =        "xxviii + 739",
  year =         "2009",
  ISBN =         "3-86645-926-2",
  ISBN-13 =      "9783866459267",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
  language =     "German",
  subject =      "Hyper-V",
}

@Book{Lowe:2009:MVV,
  author =       "Scott Lowe",
  title =        "Mastering {VMware vSphere 4}",
  publisher =    pub-SYBEX,
  address =      pub-SYBEX:adr,
  pages =        "xxi + 673",
  year =         "2009",
  ISBN =         "0-470-48138-2",
  ISBN-13 =      "978-0-470-48138-7",
  LCCN =         "QA76.9.V5 L67 2009",
  bibdate =      "Tue Sep 1 14:40:07 MDT 2009",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  series =       "Sybex serious skills",
  abstract =     "Update to the bestselling book on VMWare
                 Infrastructure. This update to the bestselling book on
                 VMWare Infrastructure 3, Mastering VMware TBD will
                 prove to be indespensible to anyone using the
                 market-leading virtualization software. As part of the
                 highly acclaimed Mastering series from Sybex, this
                 guide offers a comprehensive look at VMware technology,
                 how to implement it, and how to make the most of what
                 it offers. Shows how VMware Infrastructure saves on
                 hardware costs while maximizing capacity. Demonstrates
                 how to work with virtual machines, reducing a company's
                 carbon footprint within its data center. Helps maximize
                 the technology. Reinforces understanding of VMware
                 Infrastructure through real-world examples. Now that
                 virtualization is a key cost-saving strategy, Mastering
                 VMware is the strategic guide you need to maximize the
                 opportunities",
  acknowledgement = ack-nhfb,
  subject =      "VMware; Virtual computer systems",
}

@Book{Marshall:2009:VEE,
  author =       "David (David W.) Marshall and Stephen S. Beaver and
                 Jason W. McCarty",
  title =        "{VMware ESX} essentials in the virtual data center",
  publisher =    pub-CRC,
  address =      pub-CRC:adr,
  pages =        "xiv + 237",
  year =         "2009",
  ISBN =         "1-4200-7027-4",
  ISBN-13 =      "978-1-4200-7027-9",
  LCCN =         "QA76.76.O63 M3647 2009",
  bibdate =      "Mon May 17 09:03:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
  subject =      "VMware; operating systems (computers); virtual
                 computer systems",
}

@Book{Morimoto:2009:WSH,
  author =       "Rand Morimoto and Jeff Guillet",
  title =        "{Windows Server 2008 Hyper-V} unleashed",
  publisher =    pub-SAMS,
  address =      pub-SAMS:adr,
  pages =        "xv + 459",
  year =         "2009",
  ISBN =         "0-7686-8567-2, 0-672-33028-8",
  ISBN-13 =      "978-0-7686-8567-1, 978-0-672-33028-5",
  LCCN =         "QA76.9.V5 M656 2009",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://proquest.safaribooksonline.com/9780768685671",
  acknowledgement = ack-nhfb,
  subject =      "Microsoft Windows server Hyper-V; Virtual computer
                 systems",
}

@Book{Picht:2009:XKI,
  author =       "Hans-Joachim Picht and Sebastian Ott",
  title =        "{Xen Kochbuch: intelligente
                 Virtualisierungsl{\"o}sungen mit XEN 3}",
  publisher =    pub-ORA,
  address =      pub-ORA:adr,
  pages =        "xix + 461",
  year =         "2009",
  ISBN =         "3-89721-729-5",
  ISBN-13 =      "978-3-89721-729-4",
  LCCN =         "????",
  bibdate =      "Mon Sep 13 11:37:34 MDT 2010",
  bibsource =    "z3950.gbv.de:20011/gvk",
  price =        "EUR 44.90",
  URL =          "http://www.gbv.de/dms/ilmenau/toc/572426836.PDF",
  acknowledgement = ack-nhfb,
}

@Book{Ruest:2009:VBG,
  author =       "Danielle Ruest and Nelson Ruest",
  title =        "Virtualization: a beginner's guide",
  publisher =    pub-MCGRAW-HILL,
  address =      pub-MCGRAW-HILL:adr,
  pages =        "xx + 442",
  year =         "2009",
  ISBN =         "0-07-161401-X",
  ISBN-13 =      "978-0-07-161401-6",
  LCCN =         "QA76.9.V5 R88 2009",
  bibdate =      "Thu Jan 21 14:13:02 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "Network professional's library",
  acknowledgement = ack-nhfb,
  subject =      "Virtual computer systems",
}

@Book{Spinellis:2009:BA,
  editor =       "Diomidis Spinellis and Georgios Gousios",
  title =        "Beautiful architecture",
  publisher =    pub-ORA-MEDIA,
  address =      pub-ORA-MEDIA:adr,
  pages =        "xix + 404",
  year =         "2009",
  ISBN =         "0-596-15578-6",
  ISBN-13 =      "978-0-596-15578-0",
  LCCN =         "QA76.754 .B43 2009",
  bibdate =      "Mon May 17 09:05:00 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  URL =          "http://proquest.safaribooksonline.com/9780596155780",
  acknowledgement = ack-nhfb,
  remark =       "What is architecture / by John Klein and David Weiss
                 \\
                 A tale of two systems: a modern-day software fable / by
                 Pete Goodliffe \\
                 Architecting for scale / by Jim Waldo \\
                 Making memories / by Michael Nygard \\
                 Resource-oriented architectures: being ``in the web'' /
                 by Brian Sletten \\
                 Data grows up: the architecture of the Facebook
                 platform / by Dave Fetterman \\
                 Xen and the beauty of virtualization / by Derek Murray
                 and Keir Fraser \\
                 Guardian: a fault-tolerant operating system environment
                 / by Greg Lehey \\
                 JPC: an X86 PC emulator in pure Java / by Rhys Newman
                 and Christopher Dennis \\
                 The strength of metacircular virtual machines: JIKES
                 RVM / by Ian Rogers and Dave Grove \\
                 GNU EMACS: creeping featurism is a strength / by Jim
                 Blandy \\
                 When the bazaar sets out to build cathedrals / by Till
                 Adam and Mirko Boehm \\
                 Software architecture: object-oriented versus
                 functional / by Bertrand Meyer \\
                 Reading the classics / by Panagiotis Louridas.",
  subject =      "computer software; development; software engineering;
                 computer architecture; software architecture",
}

@Book{Stagner:2009:PHV,
  author =       "Harley Stagner and Jon Rolfe and Greg Shields",
  title =        "Pro {Hyper-V}",
  publisher =    pub-APRESS,
  address =      pub-APRESS:adr,
  pages =        "xxii + 425",
  year =         "2009",
  ISBN =         "1-4302-1908-4, 1-4302-1909-2 (electronic)",
  ISBN-13 =      "978-1-4302-1908-8, 978-1-4302-1909-5 (electronic)",
  LCCN =         "QA76.9.V5 S83 2009",
  bibdate =      "Thu Jan 21 14:13:11 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "Expert's voice in virtualization",
  acknowledgement = ack-nhfb,
  subject =      "Microsoft Windows server Hyper-V; Virtual computer
                 systems",
}

@Article{Wells:2009:DHN,
  author =       "Philip M. Wells and Koushik Chakraborty and Gurindar
                 S. Sohi",
  title =        "Dynamic heterogeneity and the need for multicore
                 virtualization",
  journal =      j-OPER-SYS-REV,
  volume =       "43",
  number =       "2",
  pages =        "5--14",
  month =        apr,
  year =         "2009",
  CODEN =        "OSRED8",
  DOI =          "http://doi.acm.org/10.1145/1531793.1531797",
  ISSN =         "0163-5980",
  bibdate =      "Thu Apr 23 19:43:22 MDT 2009",
  bibsource =    "http://portal.acm.org/",
  abstract =     "As the computing industry enters the multicore era,
                 exponential growth in the number of transistors on a
                 chip continues to present challenges and opportunities
                 for computer architects and system designers. We
                 examine one emerging issue in particular: that of
                 dynamic heterogeneity, which can arise, even among
                 physically homogeneous cores, from changing
                 reliability, power, or thermal conditions, different
                 cache and TLB contents, or changing resource
                 configurations. This heterogeneity results in a
                 constantly varying pool of hardware resources, which
                 greatly complicates software's traditional task of
                 assigning computation to cores. In part to address
                 dynamic heterogeneity, we argue that hardware should
                 take a more active role in the management of its
                 computation resources. We propose hardware techniques
                 to virtualize the cores of a multicore processor,
                 allowing hardware to flexibly reassign the virtual
                 processors that are exposed, even to a single operating
                 system, to any subset of the physical cores. We show
                 that multicore virtualization operates with minimal
                 overhead, and that it enables several novel resource
                 management applications for improving both performance
                 and reliability.",
  acknowledgement = ack-nhfb,
}

@Article{Agesen:2010:EXV,
  author =       "Ole Agesen and Alex Garthwaite and Jeffrey Sheldon and
                 Pratap Subrahmanyam",
  title =        "The evolution of an x86 virtual machine monitor",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "3--18",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899930",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Article{Barr:2010:VMV,
  author =       "Ken Barr and Prashanth Bungale and Stephen Deasy and
                 Viktor Gyuris and Perry Hung and Craig Newell and
                 Harvey Tuch and Bruno Zoppis",
  title =        "The {VMware} mobile virtualization platform: is that a
                 hypervisor in your pocket?",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "124--135",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899945",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Article{Basak:2010:VNS,
  author =       "Debashis Basak and Rohit Toshniwal and Serge Maskalik
                 and Allwyn Sequeira",
  title =        "Virtualizing networking and security in the cloud",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "86--94",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899939",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Book{Boddenberg:2010:WSR,
  author =       "Ulrich B. Boddenberg",
  title =        "{Windows Server 2008 R2 das umfassende Handbuch}.
                 ({German}) [Windows Server 2008 {R2}: the Complete
                 Handbook]",
  publisher =    "Galileo Press",
  address =      "Bonn, Germany",
  edition =      "Third",
  pages =        "1410",
  year =         "2010",
  ISBN =         "3-8362-1528-4",
  ISBN-13 =      "978-3-8362-1528-2",
  LCCN =         "????",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  series =       "Galileo computing",
  URL =          "http://www.galileocomputing.de/",
  acknowledgement = ack-nhfb,
  language =     "German",
  remark =       "Konzeption, Installation und Konfiguration;
                 Anwendungsszenarien und praxisrelevante L{\"o}sungen;
                 inkl. Active Directory, Zertifikatdienste, Windows
                 7-Integration; inkl. Hyper-V Boddenberg",
  subject =      "Windows Server 2008",
}

@Article{Gupta:2010:DEH,
  author =       "Diwaker Gupta and Sangmin Lee and Michael Vrable and
                 Stefan Savage and Alex C. Snoeren and George Varghese
                 and Geoffrey M. Voelker and Amin Vahdat",
  title =        "Difference engine: harnessing memory redundancy in
                 virtual machines",
  journal =      j-CACM,
  volume =       "53",
  number =       "10",
  pages =        "85--93",
  month =        oct,
  year =         "2010",
  CODEN =        "CACMA2",
  DOI =          "http://doi.acm.org/10.1145/1831407.1831429",
  ISSN =         "0001-0782",
  bibdate =      "Fri Oct 1 21:13:00 MDT 2010",
  bibsource =    "http://www.acm.org/pubs/contents/journals/cacm/",
  abstract =     "Virtual machine monitors (VMMs) are a popular platform
                 for Internet hosting centers and cloud-based compute
                 services. By multiplexing hardware resources among
                 virtual machines (VMs) running commodity operating
                 systems, VMMs decrease both the capital outlay and
                 management overhead of hosting centers. Appropriate
                 placement and migration policies can take advantage of
                 statistical multiplexing to effectively utilize
                 available processors. However, main memory is not
                 amenable to such multiplexing and is often the primary
                 bottleneck in achieving higher degrees of
                 consolidation.\par

                 Previous efforts have shown that content-based page
                 sharing provides modest decreases in the memory
                 footprint of VMs running similar operating systems and
                 applications. Our studies show that significant
                 additional gains can be had by leveraging both subpage
                 level sharing (through page patching) and incore memory
                 compression. We build {\em Difference Engine}, an
                 extension to the Xen VMM, to support each of these---in
                 addition to standard copy-on-write full-page
                 sharing---and demonstrate substantial savings across
                 VMs running disparate workloads (up to 65\%). In
                 head-to-head memory-savings comparisons, Difference
                 Engine outperforms VMware ESX server by a factor
                 1.6--2.5 for heterogeneous workloads. In all cases, the
                 performance overhead of Difference Engine is less than
                 7\%.",
  acknowledgement = ack-nhfb,
}

@Article{Hansen:2010:SVM,
  author =       "Jacob Gorm Hansen and Eric Jul",
  title =        "Scalable virtual machine storage using local disks",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "71--79",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899936",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Article{Herrod:2010:SRD,
  author =       "Stephen Alan Herrod",
  title =        "Systems research and development at {VMware}",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "1--2",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899949",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Book{Hess:2010:PVS,
  author =       "Kenneth Hess and Amy Newman",
  title =        "Practical virtualization solutions: virtualization
                 from the trenches",
  publisher =    "Prentice Hall/Pearson Education",
  address =      "Upper Saddle River, NJ, USA",
  pages =        "xxiii + 304",
  year =         "2010",
  ISBN =         "0-13-714297-8 (paperback)",
  ISBN-13 =      "978-0-13-714297-2 (paperback)",
  LCCN =         "QA76.9.V5 H47 2010",
  bibdate =      "Thu Jan 21 14:38:30 MST 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "Negus software solutions series",
  acknowledgement = ack-nhfb,
  subject =      "Virtual computer systems; Management",
}

@Book{Kelbley:2010:WSR,
  author =       "John Kelbley and Mike Sterling",
  title =        "{Windows Server 2008 R2 Hyper-V}: insiders guide to
                 {Microsoft}'s {Hypervisor}",
  publisher =    pub-WILEY,
  address =      pub-WILEY:adr,
  pages =        "????",
  year =         "2010",
  ISBN =         "0-470-62700-X (paperback)",
  ISBN-13 =      "978-0-470-62700-6 (paperback)",
  LCCN =         "QA76.9.V5 K453 2010",
  bibdate =      "Mon May 17 09:06:20 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  abstract =     "Get the inside scoop on Hyper-V for Windows Server
                 2008 R2. Virtualization is a top priority for thousands
                 of companies all over the world. Written by an author
                 team that is part of the Windows virtualization group
                 at Microsoft, Windows Server 2008 R2 Hyper-V will walk
                 you through Hyper-V essentials so you can get you up to
                 speed and down to business with Hyper-V. Now fully
                 updated for Windows Server 2008 R2 Hyper-V, you will
                 find additional content on new features and
                 capabilities such as Live Migration and support for 64
                 Logical Processors (LP). Teaches how to manage virtual
                 machines with the latest System Center tools such as
                 Virtual Machine Manager 2008 R2, Data Protection
                 Manager 2010, and Operations Manager 2007 R2. Covers
                 all of the new functionalities of Windows Server 2008
                 R2 Hyper-V, including Live Migration, 64 LP support,
                 Processor Compatibility Mode, enhanced processor
                 functionality support, hot-add and remove of storage,
                 TCP Offload support, and VM Queue support. Demonstrates
                 key scenarios for Hyper-V, including server
                 consolidation, testing and development, Business
                 Continuity and Disaster Recovery, and Dynamic IT.
                 Provides step-by-step instructions and examples. This
                 insiders guide will help you get the most out of your
                 hardware and reduce cost with Windows Server 2008 R2
                 Hyper-V.",
  acknowledgement = ack-nhfb,
  subject =      "Microsoft Windows server Hyper-V; Virtual computer
                 systems",
}

@Article{Kotsovinos:2010:VBC,
  author =       "Evangelos Kotsovinos",
  title =        "Virtualization: Blessing or Curse?",
  journal =      j-QUEUE,
  volume =       "8",
  number =       "11",
  pages =        "40",
  month =        nov,
  year =         "2010",
  CODEN =        "AQCUAE",
  DOI =          "http://dx.doi.org/10.1145/1874534.1889916",
  ISSN =         "1542-7730",
  bibdate =      "Thu Dec 9 11:55:45 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM Queue: Tomorrow's Computing Today",
}

@Article{Krieger:2010:EMC,
  author =       "Orran Krieger and Phil McGachey and Arkady Kanevsky",
  title =        "Enabling a marketplace of clouds: {VMware}'s {vCloud}
                 director",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "103--114",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899942",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Book{Laverick:2010:VVI,
  author =       "Mike Laverick",
  title =        "{VMware vSphere 4} implementation",
  publisher =    pub-MCGRAW-HILL,
  address =      pub-MCGRAW-HILL:adr,
  pages =        "xxviii + 659",
  year =         "2010",
  ISBN =         "0-07-166452-1",
  ISBN-13 =      "978-0-07-166452-3",
  LCCN =         "QA76.9.V5 L39 2010",
  bibdate =      "Mon May 17 09:03:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
  subject =      "VMware vSphere; Virtual computer systems",
}

@Article{Liu:2010:VMF,
  author =       "Qian Liu and Chuliang Weng and Minglu Li and Yuan
                 Luo",
  title =        "An In-{VM} Measuring Framework for Increasing Virtual
                 Machine Security in Clouds",
  journal =      j-IEEE-SEC-PRIV,
  volume =       "8",
  number =       "6",
  pages =        "56--62",
  month =        nov # "\slash " # dec,
  year =         "2010",
  CODEN =        "????",
  DOI =          "http://doi.ieeecomputersociety.org/10.1109/MSP.2010.143",
  ISSN =         "1540-7993",
  bibdate =      "Wed Dec 15 15:02:36 2010",
  acknowledgement = ack-nhfb,
  fjournal =     "IEEE Security and Privacy",
}

@Article{McDougall:2010:VPP,
  author =       "Richard McDougall and Jennifer Anderson",
  title =        "Virtualization performance: perspectives and
                 challenges ahead",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "40--56",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899933",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Article{Scales:2010:DPS,
  author =       "Daniel J. Scales and Mike Nelson and Ganesh
                 Venkitachalam",
  title =        "The design of a practical system for fault-tolerant
                 virtual machines",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "30--39",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899932",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Article{Schmidt:2010:VSB,
  author =       "Ren{\'e} W. Schmidt and Steffen Grarup",
  title =        "{vApp}: a standards-based container for cloud
                 providers",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "115--123",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899943",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Article{Simons:2010:VHP,
  author =       "Joshua E. Simons and Jeffrey Buell",
  title =        "Virtualizing high performance computing",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "136--145",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899946",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Article{Soundararajan:2010:CBS,
  author =       "Vijayaraghavan Soundararajan and Kinshuk Govil",
  title =        "Challenges in building scalable virtualized datacenter
                 management",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "95--102",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899941",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Book{Takemura:2010:BXP,
  author =       "Chris Takemura and Luke S. (Luke Seidel) Crawford",
  title =        "The book of {Xen}: a practical guide for the system
                 administrator",
  publisher =    pub-NO-STARCH,
  address =      pub-NO-STARCH:adr,
  pages =        "xxiv + 281",
  year =         "2010",
  ISBN =         "1-59327-186-7",
  ISBN-13 =      "978-1-59327-186-2",
  LCCN =         "QA76.9.V5 C83 2009",
  bibdate =      "Fri Oct 16 10:34:11 MDT 2009",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  URL =          "http://proquest.safaribooksonline.com/?fpi=9781593271862",
  acknowledgement = ack-nhfb,
  subject =      "Xen (electronic resource); virtual computer systems;
                 computer organization; parallel processing (electronic
                 computers)",
  tableofcontents = "Foreword / Paul Vixie \\
                 Introduction \\
                 Xen : a high-level overview \\
                 Getting started \\
                 Provisioning DomUs \\
                 Storage with Xen \\
                 Networking \\
                 DomU Management : tools and frontends \\
                 Hosting untrusted users under Xen : lessons from the
                 trenches \\
                 Beyond Linux : using Xen with other Unix-like OSs \\
                 Xen migration \\
                 Profiling and benchmarking under Xen \\
                 Citrix XenServer : Xen for the enterprise \\
                 HVM : beyond paravirtualization \\
                 Xen and Windows \\
                 Tips \\
                 Troubleshooting \\
                 Appendix A : xm reference \\
                 Appendix B : The structure of the Xen config file",
}

@Book{Troy:2010:VC,
  author =       "Ryan Troy and Matthew Helmke",
  title =        "{VMware} cookbook",
  publisher =    pub-ORA-MEDIA,
  address =      pub-ORA-MEDIA:adr,
  pages =        "xv + 280",
  year =         "2010",
  ISBN =         "0-596-15725-8 (paperback)",
  ISBN-13 =      "978-0-596-15725-8 (paperback)",
  LCCN =         "QA76.9.V5 T76 2010",
  bibdate =      "Mon May 17 09:03:07 MDT 2010",
  bibsource =    "fsz3950.oclc.org:210/WorldCat",
  acknowledgement = ack-nhfb,
  remark =       "Covers ESX and ESXi.",
  subject =      "VMware; Virtual computer systems",
}

@Article{Vaghani:2010:VMF,
  author =       "Satyam B. Vaghani",
  title =        "Virtual machine file system",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "57--70",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899935",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

@Article{Waldspurger:2010:VEM,
  author =       "Carl Waldspurger",
  title =        "A {VM} 'Engine' that makes a difference: technical
                 perspective",
  journal =      j-CACM,
  volume =       "53",
  number =       "10",
  pages =        "84--84",
  month =        oct,
  year =         "2010",
  CODEN =        "CACMA2",
  DOI =          "http://doi.acm.org/10.1145/1831407.1831428",
  ISSN =         "0001-0782",
  bibdate =      "Fri Oct 1 21:13:00 MDT 2010",
  bibsource =    "http://www.acm.org/pubs/contents/journals/cacm/",
  acknowledgement = ack-nhfb,
}

@TechReport{Wang:2010:HLA,
  author =       "Zhi Wang and Xuxian Jiang",
  title =        "{HyperSafe}: {A} Lightweight Approach to Provide
                 Lifetime Hypervisor Control-Flow Integrity",
  type =         "Report",
  institution =  "Department of Computer Science, North Carolina State
                 University",
  address =      "Raleigh, NC, USA",
  pages =        "16",
  year =         "2010",
  bibdate =      "Mon May 17 08:40:02 2010",
  URL =          "http://www.csc.ncsu.edu/faculty/jiang/pubs/OAKLAND10.pdf",
  abstract =     "Virtualization is being widely adopted in today s
                 computing systems. Its unique security advantages in
                 isolating and introspecting commodity OSes as virtual
                 machines (VMs) have enabled a wide spectrum of
                 applications. However, a common, fundamental assumption
                 is the presence of a trustworthy hypervisor.
                 Unfortunately, the large code base of commodity
                 hypervisors and recent successful hypervisor attacks
                 (e.g., VM escape) seriously question the validity of
                 this assumption. In this paper, we present HyperSafe, a
                 lightweight approach that endows existing Type-I
                 bare-metal hypervisors with a unique self-protection
                 capability to provide lifetime controlflow integrity.
                 Specifically, we propose two key techniques. The first
                 one non-bypassable memory lockdown reliably protects
                 the hypervisor s code and static data from being
                 compromised even in the presence of exploitable memory
                 corruption bugs (e.g., buffer overflows), therefore
                 successfully providing hypervisor code integrity. The
                 second one restricted pointer indexing introduces one
                 layer of indirection to convert the control data into
                 pointer indexes. These pointer indexes are restricted
                 such that the corresponding call/return targets
                 strictly follow the hypervisor control flow graph,
                 hence expanding protection to control-flow integrity.
                 We have built a prototype and used it to protect two
                 open-source Type-I hypervisors: BitVisor and Xen. The
                 experimental results with synthetic hypervisor exploits
                 and benchmarking programs show HyperSafe can reliably
                 enable the hypervisor self-protection and provide the
                 integrity guarantee with a small performance
                 overhead.",
  acknowledgement = ack-nhfb,
}

@Article{Zhou:2010:VN,
  author =       "Shudong Zhou",
  title =        "Virtual networking",
  journal =      j-OPER-SYS-REV,
  volume =       "44",
  number =       "4",
  pages =        "80--85",
  month =        dec,
  year =         "2010",
  CODEN =        "OSRED8",
  DOI =          "http://dx.doi.org/10.1145/1899928.1899938",
  ISSN =         "0163-5980",
  bibdate =      "Wed Dec 15 10:02:07 MST 2010",
  bibsource =    "http://portal.acm.org/",
  acknowledgement = ack-nhfb,
  fjournal =     "ACM SIGOPS Operating Systems Review",
}

%%% ====================================================================
%%% Cross-referenced entries must come last:

@Proceedings{ACM:1975:PFS,
  editor =       "{ACM}",
  booktitle =    "{Proceedings of the Fifth Symposium on Operating
                 System Principles, November 19--21, 1975, The
                 University of Texas at Austin, Austin, Texas, USA}",
  title =        "{Proceedings of the Fifth Symposium on Operating
                 System Principles, November 19--21, 1975, The
                 University of Texas at Austin, Austin, Texas, USA}",
  volume =       "9(5)",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "????",
  year =         "1975",
  CODEN =        "OSRED8",
  ISSN =         "0163-5980",
  bibdate =      "Mon Apr 10 09:00:42 2006",
  series =       j-OPER-SYS-REV,
  acknowledgement = ack-nhfb,
  annote =       "I: Virtual memory algorithms II: Protection and
                 security III: Case studies IV: Network operating
                 systems V: Virtual machines VI: Correctness and
                 reliability VII: System design VIII: The Hydra
                 operating system IX: Processor scheduling X: Security
                 and protection XI: Memory measurement and modelling",
  descriptor =   "Betriebssystem, Hydra-Betriebssystem,
                 Netzwerk-Betriebssystem, Prozessorvergabe, Scheduling,
                 Speicher, Systementwurf, Virtuelle Maschine, Virtueller
                 Speicher",
  xxnote =       "Check editor??",
}

@Proceedings{Muhlbacher:1975:GIF,
  editor =       "J{\"o}rg M{\"u}hlbacher",
  booktitle =    "{GI} --- 5. [i.e. funfte] Jahrestagung: Dortmund,
                 8.--10. Oktober 1975",
  title =        "{GI} --- 5. [i.e. funfte] Jahrestagung: Dortmund,
                 8.--10. Oktober 1975",
  volume =       "34",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  pages =        "x + 755",
  year =         "1975",
  CODEN =        "LNCSD9",
  ISBN =         "0-387-07410-4",
  ISBN-13 =      "978-0-387-07410-8",
  ISSN =         "0302-9743",
  LCCN =         "QA267.A1 L43 no.34",
  bibdate =      "Fri Apr 12 07:13:21 1996",
  bibsource =    "ftp://ftp.math.utah.edu/pub/bibnet/authors/g/gebhardt-friedrich.bib",
  note =         "English or German.",
  series =       ser-LNCS,
  keywords =     "electronic data processing --- congresses; electronic
                 digital computers --- congresses; programming languages
                 (electronic computers) --- congresses",
}

@Proceedings{ACM:1981:ASC,
  editor =       "{ACM}",
  booktitle =    "{ACM SIGMETRICS Conference on Measurement and Modeling
                 of Computer Systems, University of Nevada, Las Vegas,
                 Nevada, USA, September 14--16, 1981, Proceedings}",
  title =        "{ACM SIGMETRICS Conference on Measurement and Modeling
                 of Computer Systems, University of Nevada, Las Vegas,
                 Nevada, USA, September 14--16, 1981, Proceedings}",
  volume =       "10(3)",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  month =        "Fall",
  year =         "1981",
  ISBN =         "????",
  ISBN-13 =      "????",
  LCCN =         "????",
  bibdate =      "Mon Apr 10 11:59:38 2006",
  series =       "Performance Evaluation Review",
  acknowledgement = ack-nhfb,
}

@Proceedings{Martin:1981:RFS,
  editor =       "Thea Martin",
  booktitle =    "{1981 Rochester FORTH Standards Conference, May
                 12--15, 1981}",
  title =        "{1981 Rochester FORTH Standards Conference, May
                 12--15, 1981}",
  publisher =    "The Institute for Applied Forth Research, Inc.",
  address =      "70 Elmwood Avenue, Rochester, New York 14611, USA",
  pages =        "378",
  year =         "1981",
  ISBN =         "????",
  ISBN-13 =      "????",
  LCCN =         "QA76.73.F24 R63 1981",
  bibdate =      "Mon Apr 10 08:08:04 2006",
  acknowledgement = ack-nhfb,
}

@Proceedings{STUG:1983:PUA,
  editor =       "{Software Tools Users Group}",
  booktitle =    "{Proceedings: USENIX Association [and] Software Tools
                 Users Group Summer Conference, Toronto 1983, July 1983,
                 Toronto, Ontario, Canada}",
  title =        "{Proceedings: USENIX Association [and] Software Tools
                 Users Group Summer Conference, Toronto 1983, July 1983,
                 Toronto, Ontario, Canada}",
  publisher =    pub-USENIX,
  address =      pub-USENIX-EL-CERRITO:adr,
  pages =        "xii + 443",
  year =         "1983",
  ISBN =         "????",
  ISBN-13 =      "????",
  LCCN =         "QA76.8.U65 U74 1983",
  bibdate =      "Mon Oct 26 08:42:38 1998",
  bibsource =    "ftp://ftp.math.utah.edu/pub/bibnet/authors/a/turing-alan-mathison.bib;
                 ftp://ftp.math.utah.edu/pub/tex/bib/usenix1980.bib",
  note =         "Sponsored by USENIX Association in cooperation with
                 Software Tools Users Group.",
  acknowledgement = ack-nhfb,
  keywords =     "UNIX (computer operating system) --- congresses",
}

@Proceedings{IEEE:1984:DE,
  editor =       "{IEEE}",
  booktitle =    "{Proceedings of the First International Conference on
                 Data Engineering, Los Angeles, CA, USA}",
  title =        "{Proceedings of the First International Conference on
                 Data Engineering, Los Angeles, CA, USA}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xiii + 630",
  year =         "1984",
  ISBN =         "0-8186-0533-2 (paperback), 0-8186-8533-6 (hard),
                 0-8186-4533-4 (microfiche)",
  ISBN-13 =      "978-0-8186-0533-8 (paperback), 978-0-8186-8533-0
                 (hard), 978-0-8186-4533-4 (microfiche)",
  LCCN =         "QA76.9.D3 I5582 1984",
  bibdate =      "Mon Apr 10 09:49:54 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  acknowledgement = ack-nhfb,
  subject =      "Database management; Congresses; Computer
                 architecture",
}

@Proceedings{IEEE:1984:PSS,
  editor =       "{IEEE}",
  booktitle =    "{Proceedings of the 1984 Symposium on Security and
                 Privacy, April 29--May 2, 1984, Oakland, California}",
  title =        "{Proceedings of the 1984 Symposium on Security and
                 Privacy, April 29--May 2, 1984, Oakland, California}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "vi + 227",
  year =         "1984",
  ISBN =         "0-8186-0532-4 (paperback), 0-8186-8532-8 (hard),
                 0-8186-4532-6 (microfiche)",
  ISBN-13 =      "978-0-8186-0532-1 (paperback), 978-0-8186-8532-3
                 (hard), 978-0-8186-4532-7 (microfiche)",
  LCCN =         "QA76.9.A25 S95 1984",
  bibdate =      "Mon Apr 10 09:22:10 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  acknowledgement = ack-nhfb,
  meetingname =  "Symposium on Security and Privacy (1984: Oakland,
                 Calif.)",
  subject =      "Computers; Access control; Congresses; Data
                 protection; Privacy, Right of",
}

@Proceedings{IEEE:1985:CPA,
  editor =       "{IEEE}",
  booktitle =    "{Conference proceedings: the 12th Annual International
                 Symposium on Computer Architecture, June 17--19, 1985,
                 Boston, Massachusetts}",
  title =        "{Conference proceedings: the 12th Annual International
                 Symposium on Computer Architecture, June 17--19, 1985,
                 Boston, Massachusetts}",
  volume =       "13(3)",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xiv + 428",
  month =        jun,
  year =         "1985",
  ISBN =         "0-8186-0634-7, 0-8186-4634-9, 0-8186-8634-0",
  ISBN-13 =      "978-0-8186-0634-2, 978-0-8186-4634-8,
                 978-0-8186-8634-4",
  LCCN =         "QA76.9.A73; QA76.9.A73 C65; QA76.9.A73 S97 1985;
                 QA76.9.A73 I56 1985",
  bibdate =      "Mon Apr 10 12:04:13 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  series =       "SIGARCH newsletter",
  acknowledgement = ack-nhfb,
  meetingname =  "International Symposium on Computer Architecture
                 (12th: 1985: Boston, Mass.)",
  remark =       "ACM order number 415850. IEEE catalog number
                 85CH2144-4. IEEE Computer Society order number 634.",
  subject =      "Computer architecture; Congresses",
}

@Proceedings{Jouannaud:1985:FPL,
  editor =       "Jean-Pierre Jouannaud",
  booktitle =    "{Functional programming languages and computer
                 architecture: Nancy, France, September 1985}",
  title =        "{Functional programming languages and computer
                 architecture: Nancy, France, September 1985}",
  volume =       "201",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  pages =        "vi + 413",
  year =         "1985",
  CODEN =        "LNCSD9",
  ISBN =         "0-387-15975-4 (paperback)",
  ISBN-13 =      "978-0-387-15975-1 (paperback)",
  ISSN =         "0302-9743",
  LCCN =         "QA267.A1 L43 no.201",
  bibdate =      "Fri Apr 12 07:14:49 1996",
  series =       ser-LNCS,
  URL =          "http://link.springer-ny.com/link/service/series/0558/tocs/t0201.htm;
                 http://www.springerlink.com/openurl.asp?genre=issue&issn=0302-9743&volume=201",
  acknowledgement = ack-nhfb,
  keywords =     "computer architecture --- congresses; functional
                 programming languages --- congresses",
}

@Proceedings{USENIX:1985:SCP,
  editor =       "{USENIX Association}",
  booktitle =    "{Summer conference proceedings, Portland 1985: June
                 11--14, 1985, Portland, Oregon, USA}",
  title =        "{Summer conference proceedings, Portland 1985: June
                 11--14, 1985, Portland, Oregon, USA}",
  publisher =    pub-USENIX,
  address =      pub-USENIX-EL-CERRITO:adr,
  pages =        "viii + 612",
  year =         "1985",
  LCCN =         "QA76.8.U65 U8 1985",
  bibdate =      "Sun Feb 18 07:46:09 MST 1996",
  acknowledgement = ack-nhfb,
  keywords =     "UNIX (Computer operating system) --- Congresses.",
  remark =       "Spine title: USENIX Conference proceedings.",
}

@Proceedings{USENIX:1986:SCP,
  editor =       "{USENIX Association}",
  booktitle =    "{Summer conference proceedings, Atlanta 1986: June
                 9--13, 1986, Atlanta, Georgia, USA}",
  title =        "{Summer conference proceedings, Atlanta 1986: June
                 9--13, 1986, Atlanta, Georgia, USA}",
  publisher =    pub-USENIX,
  address =      pub-USENIX-EL-CERRITO:adr,
  pages =        "x + 528",
  year =         "1986",
  bibdate =      "Sun Feb 18 07:46:09 MST 1996",
  acknowledgement = ack-nhfb,
  annote =       "Spine title: USENIX Conference proceedings.",
  keywords =     "UNIX (Computer operating system) --- Congresses.",
}

@Proceedings{ACM:1989:PSN,
  editor =       "{ACM}",
  booktitle =    "{Proceedings, Supercomputing '89: November 13--17,
                 1989, Reno, Nevada}",
  title =        "{Proceedings, Supercomputing '89: November 13--17,
                 1989, Reno, Nevada}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "xviii + 849",
  year =         "1989",
  ISBN =         "0-89791-341-8",
  ISBN-13 =      "978-0-89791-341-6",
  LCCN =         "QA 76.5 S87 1989",
  bibdate =      "Wed Aug 28 06:48:31 MDT 1996",
  bibsource =    "University of California MELVYL catalog.",
  note =         "IEEE 89CH2802-7.",
  acknowledgement = ack-nhfb,
  annote =       "89CM2802-7. ACM Order Number 415892. IEEE 89CH2802-7.
                 IEEE Computer Society Order Number 2021.",
  classification = "A0130C (Conference proceedings); A0270
                 (Computational techniques); A0500 (Statistical physics
                 and thermodynamics); A4700 (Fluid dynamics); B0100
                 (General electrical engineering topics); B0290
                 (Numerical analysis); B1130B (Computer-aided circuit
                 analysis and design); C4100 (Numerical analysis); C4240
                 (Programming and algorithm theory); C5440
                 (Multiprocessor systems and techniques); C5470
                 (Performance evaluation and testing); C6110B (Software
                 engineering techniques); C6150J (Operating systems);
                 C7000 (Computer applications)",
  keywords =     "benchmarking; computer applications; parallel
                 algorithms; parallel processing; performance
                 evaluation; performance measurements; performance
                 tools; pipeline processing; software environments;
                 supercomputer architectures; supercomputers ---
                 congresses; technology integration; vector algorithms",
}

@Proceedings{Shriver:1989:PTA,
  editor =       "B. D. Shriver",
  booktitle =    "{Proceedings of the Twenty-Second Annual Hawaii
                 International Conference on System Sciences. Vol.II:
                 Software Track, Kailua-Kona, HI, USA, January 3--6,
                 1989}",
  title =        "{Proceedings of the Twenty-Second Annual Hawaii
                 International Conference on System Sciences. Vol.II:
                 Software Track, Kailua-Kona, HI, USA, January 3--6,
                 1989}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xvii + 1106",
  year =         "1989",
  ISBN =         "0-8186-1912-0",
  ISBN-13 =      "978-0-8186-1912-0",
  LCCN =         "????",
  bibdate =      "Sun Sep 29 06:28:50 MDT 1996",
  note =         "IEEE catalog number 89TH0243-6.",
  acknowledgement = ack-nhfb,
  confsponsor =  "IEEE; Univ. Hawaii; PRIISM; ACM",
}

@Proceedings{ACM:1990:PAC,
  editor =       "{ACM}",
  booktitle =    "{Proceedings of the 1990 ACM Conference on LISP and
                 Functional Programming: papers presented at the
                 conference, Nice, France, June 27--29, 1990}",
  title =        "{Proceedings of the 1990 {ACM} Conference on {LISP}
                 and Functional Programming: papers presented at the
                 conference, Nice, France, June 27--29, 1990}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "viii + 348",
  year =         "1990",
  ISBN =         "0-89791-368-X",
  ISBN-13 =      "978-0-89791-368-3",
  LCCN =         "QA 76.73 L23 A24 1990",
  bibdate =      "Wed Apr 16 07:21:40 1997",
  note =         "ACM order no. 552900.",
  acknowledgement = ack-nhfb,
  confsponsor =  "ACM",
}

@Proceedings{Board:1990:TRA,
  editor =       "J. A. Board",
  booktitle =    "{Transputer Research and Applications 2. NATUG-2
                 Proceedings of the North American Transputer Users
                 Group, Durham, NC, USA, October 18--19, 1989}",
  title =        "{Transputer Research and Applications 2. NATUG-2
                 Proceedings of the North American Transputer Users
                 Group, Durham, NC, USA, October 18--19, 1989}",
  publisher =    pub-IOS,
  address =      pub-IOS:adr,
  pages =        "ix + 451",
  year =         "1990",
  bibdate =      "Sat Sep 28 20:21:01 MDT 1996",
  acknowledgement = ack-nhfb,
  pubcountry =   "Netherlands",
}

@Proceedings{IEEE:1990:PIC,
  editor =       "{IEEE}",
  booktitle =    "{Proceedings, 1990 IEEE Computer Society Symposium on
                 Research in Security and Privacy: May 7--9, 1990,
                 Oakland, California}",
  title =        "{Proceedings, 1990 IEEE Computer Society Symposium on
                 Research in Security and Privacy: May 7--9, 1990,
                 Oakland, California}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "ix + 401",
  year =         "1990",
  ISBN =         "0-8186-2060-9, 0-8186-6060-0, 0-8186-9060-7",
  ISBN-13 =      "978-0-8186-2060-7, 978-0-8186-6060-3,
                 978-0-8186-9060-0",
  LCCN =         "QA76.9.A25; QA76.9.A25 S95 1990eb; QA76.9.A25 I34
                 1990",
  bibdate =      "Mon Apr 10 09:18:28 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  note =         "IEEE Computer Society Order Number 2060. IEEE Catalog
                 Number 90CH2884-5.",
  acknowledgement = ack-nhfb,
  meetingname =  "IEEE Computer Society Symposium on Research in
                 Security and Privacy (1990: Oakland, Calif.)",
  subject =      "Computers; Access control; Congresses; Data
                 protection; Privacy, Right of; Telecommunication;
                 Security measures",
}

@Proceedings{IEEE:1990:PSN,
  editor =       "{IEEE}",
  booktitle =    "{Proceedings, Supercomputing '90: November 12--16,
                 1990, New York Hilton at Rockefeller Center, New York,
                 New York}",
  title =        "{Proceedings, Supercomputing '90: November 12--16,
                 1990, New York Hilton at Rockefeller Center, New York,
                 New York}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xxv + 982",
  year =         "1990",
  ISBN =         "0-8186-2056-0 (paperback) (IEEE Computer Society),
                 0-89791-412-0 (paperback) (ACM)",
  ISBN-13 =      "978-0-8186-2056-0 (paperback) (IEEE Computer Society),
                 978-0-89791-412-3 (paperback) (ACM)",
  LCCN =         "QA 76.88 S87 1990",
  bibdate =      "Wed Aug 28 06:48:31 MDT 1996",
  bibsource =    "ftp://ftp.math.utah.edu/pub/bibnet/authors/d/dongarra-jack-j.bib;
                 University of California MELVYL catalog",
  note =         "ACM order number 415903. IEEE Computer Society Press
                 order number 2056. IEEE catalog number 90CH2916-5.",
  acknowledgement = ack-nhfb,
  classification = "C5440 (Multiprocessor systems and techniques); C5470
                 (Performance evaluation and testing); C6110 (Systems
                 analysis and programming); C7000 (Computer
                 applications)",
  keywords =     "biological applications; computer applications;
                 computer chess; innovative architectures; linear
                 algebra algorithms; memory; networking computing;
                 parallel languages; parallel processing; particle
                 transport; partitioning; performance evaluation;
                 performance visualizations; pipeline processing;
                 program analysis; program restructuring; scheduling;
                 supercomputers --- congresses; vector algorithms",
}

@Proceedings{IEEE:1991:PIC,
  editor =       "{IEEE}",
  booktitle =    "{Proceedings, 1991 IEEE Computer Society Symposium on
                 Research in Security and Privacy: May 20--22, 1991,
                 Oakland, California}",
  title =        "{Proceedings, 1991 IEEE Computer Society Symposium on
                 Research in Security and Privacy: May 20--22, 1991,
                 Oakland, California}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "ix + 389",
  year =         "1991",
  ISBN =         "0-8186-9168-9, 0-8186-2168-0, 0-8186-6168-2",
  ISBN-13 =      "978-0-8186-9168-3, 978-0-8186-2168-0,
                 978-0-8186-6168-6",
  LCCN =         "QA76.9.A25; QA76.9.A25 I34 1991; QA76.9.A25 S95
                 1991eb; QA76.9.A25 S95 1991",
  bibdate =      "Mon Apr 10 12:15:57 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  note =         "IEEE Catalog Number 91CH2986-8. IEEE Computer Society
                 Order Number 2168",
  acknowledgement = ack-nhfb,
  meetingname =  "IEEE Computer Society Symposium on Research in
                 Security and Privacy (1991: Oakland, Calif.)",
  subject =      "Computers; Access control; Congresses; Privacy, Right
                 of; Telecommunication; Security measures; Data
                 protection",
}

@Proceedings{Milutinovic:1991:PTA,
  editor =       "V. Milutinovic and B. D. Shriver",
  booktitle =    "{Proceedings of the Twenty-Fourth Annual Hawaii
                 International Conference on System Sciences}",
  title =        "{Proceedings of the Twenty-Fourth Annual Hawaii
                 International Conference on System Sciences}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  year =         "1991",
  ISBN =         "0-8186-2119-2 (vol. 1), 0-8186-2120-6 (vol. 2),
                 0-8186-2010-2 (vol. 3), 0-8186-2122-2 (vol. 4)",
  ISBN-13 =      "978-0-8186-2119-2 (vol. 1), 978-0-8186-2120-8 (vol.
                 2), 978-0-8186-2010-2 (vol. 3), 978-0-8186-2122-2 (vol.
                 4)",
  LCCN =         "QA76.9.S88 H38 1991; QA76.9.S88; QA76.9.S88 H375 1991;
                 Internet; TA168 .H37a 1991",
  bibdate =      "Wed Oct 30 06:04:36 MST 1996",
  note =         "Four volumes. IEEE catalog number 91TH0350-9.",
  acknowledgement = ack-nhfb,
  confdate =     "8--11 Jan. 1991",
  conflocation = "Kauai, HI, USA",
  confsponsor =  "IEEE; Univ. Hawaii; ACM; Pacific Res. Inst. Inf. Syst.
                 Manage",
  pagesf =       "xv + 717 (vol. 1), xiii + 605 (vol. 2), xiv + 827
                 (vol. 3), xi + 574 (vol. 4)",
  pubcountry =   "USA",
}

@Proceedings{Mylopoulos:1991:IPT,
  editor =       "John Mylopoulos and Ray Reiter",
  booktitle =    "{IJCAI-91: proceedings of the Twelfth International
                 Conference on Artificial Intelligence, Darling Harbour,
                 Sydney, Australia, 24--30 August 1991}",
  title =        "{IJCAI-91: proceedings of the Twelfth International
                 Conference on Artificial Intelligence, Darling Harbour,
                 Sydney, Australia, 24--30 August 1991}",
  publisher =    pub-MORGAN-KAUFMANN,
  address =      pub-MORGAN-KAUFMANN:adr,
  pages =        "xxiii + 1318",
  year =         "1991",
  ISBN =         "1-55860-160-0",
  ISBN-13 =      "978-1-55860-160-4",
  LCCN =         "Q334 .I57 1991",
  bibdate =      "Mon Apr 10 12:12:49 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  note =         "Two volumes.",
  acknowledgement = ack-nhfb,
  meetingname =  "International Joint Conference on Artificial
                 Intelligence (12th: 1991: Sydney, N.S.W.)",
  subject =      "Artificial intelligence; Congresses",
}

@Proceedings{USENIX:1991:PUM,
  editor =       "{USENIX}",
  booktitle =    "{Proceedings of the USENIX Mach Symposium: November
                 20--22, 1991, Monterey, California, USA}",
  title =        "{Proceedings of the USENIX Mach Symposium: November
                 20--22, 1991, Monterey, California, USA}",
  publisher =    pub-USENIX,
  address =      pub-USENIX:adr,
  pages =        "262",
  year =         "1991",
  LCCN =         "QAX 27",
  bibdate =      "Sun Feb 18 07:46:09 MST 1996",
  bibsource =    "ftp://ftp.uu.net/library/bibliography",
  acknowledgement = ack-nhfb,
  keywords =     "UNIX (Computer file) --- Congresses; Memory management
                 (Computer science) --- Congresses; Operating systems
                 (Computers) --- Congresses.",
}

@Proceedings{IEEE:1992:PSM,
  editor =       "{IEEE Computer Society. Technical Committee on
                 Computer Architecture}",
  booktitle =    "{Proceedings, Supercomputing '92: Minneapolis,
                 Minnesota, November 16--20, 1992}",
  title =        "{Proceedings, Supercomputing '92: Minneapolis,
                 Minnesota, November 16--20, 1992}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xxiv + 848",
  year =         "1992",
  ISBN =         "0-8186-2632-1 (case), 0-8186-2630-5 (paper),
                 0-8186-2631-3 (microfiche), 0-89791-537-2 (ACM Library
                 series)",
  ISBN-13 =      "978-0-8186-2632-6 (case), 978-0-8186-2630-2 (paper),
                 978-0-8186-2631-9 (microfiche), 978-0-89791-537-3 (ACM
                 Library series)",
  LCCN =         "QA76.5 .S894 1992",
  bibdate =      "Wed Aug 28 06:48:31 MDT 1996",
  bibsource =    "University of California MELVYL catalog.",
  note =         "Cover title: Supercomputing '91. ACM order number
                 415922. IEEE Computer Society Press order number 2630
                 IEEE catalog number 92CH3216-9.",
  acknowledgement = ack-nhfb,
  keywords =     "artificial intelligence; biosciences; cache;
                 compiling; distributed computing; fluids; industrial
                 modeling; instruction-level optimization;
                 interconnections; massively parallel systems;
                 multiprocessing programs; multiprocessing systems;
                 numerical applications; parallel algorithms; parallel
                 programming; parallelizing transformations; particles;
                 performance evaluation; performance methodology;
                 register efficiency; scheduling; sparse matrix
                 algorithms; supercomputers --- congresses; symbolic
                 algorithms; waves",
}

@Proceedings{Anonymous:1993:NCS,
  editor =       "Anonymous",
  booktitle =    "{16th National Computer Security Conference: September
                 20--23, 1993, Baltimore Convention Center, Baltimore,
                 Maryland: proceedings: information systems security,
                 user choices}",
  title =        "{16th National Computer Security Conference: September
                 20--23, 1993, Baltimore Convention Center, Baltimore,
                 Maryland: proceedings: information systems security,
                 user choices}",
  publisher =    "National Institute of Standards and
                 Technology/National Computer Security Center",
  address =      "Gaithersburg, MD, USA",
  pages =        "xvii + 542",
  year =         "1993",
  bibdate =      "Mon Apr 10 09:56:55 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  acknowledgement = ack-nhfb,
  meetingname =  "National Computer Security Conference (16th: 1993:
                 Baltimore Convention Center)",
  remark =       "Shipping list number 94-0118-M.",
  subject =      "Computer security; United States; Congresses",
}

@Proceedings{Grebe:1993:TAS,
  editor =       "R. Grebe and J. Hektor and S. C. Hilton and M. R. Jane
                 and P. H. Welch",
  booktitle =    "{Transputer applications and systems '93: proceedings
                 of the 1993 World Transputer Congress, 20--22 September
                 1993, Aachen, Germany}",
  title =        "{Transputer applications and systems '93: proceedings
                 of the 1993 World Transputer Congress, 20--22 September
                 1993, Aachen, Germany}",
  publisher =    pub-IOS,
  address =      pub-IOS:adr,
  pages =        "1317",
  year =         "1993",
  ISBN =         "90-5199-140-1",
  ISBN-13 =      "978-90-5199-140-6",
  LCCN =         "????",
  bibdate =      "Wed Apr 16 11:39:32 1997",
  acknowledgement = ack-nhfb,
  confdate =     "20--22 Sept. 1993",
  conflocation = "Aachen, Germany",
  pubcountry =   "Netherlands",
}

@Proceedings{IEEE:1993:PSI,
  editor =       "{IEEE}",
  booktitle =    "{Proceedings of the Second International Conference on
                 Parallel and Distributed Information Systems, San
                 Diego, CA, USA, January 20--22, 1993}",
  title =        "{Proceedings of the Second International Conference on
                 Parallel and Distributed Information Systems, San
                 Diego, CA, USA, January 20--22, 1993}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xiv + 272",
  year =         "1993",
  ISBN =         "0-8186-3330-1",
  ISBN-13 =      "978-0-8186-3330-0",
  LCCN =         "QA76.58 .I54 1993",
  bibdate =      "Thu May 07 17:26:31 1998",
  note =         "IEEE catalog number 93TH0493-7.",
  acknowledgement = ack-nhfb,
  confsponsor =  "IEEE; ACM",
}

@Proceedings{IEEE:1993:PSP,
  editor =       "{IEEE}",
  key =          "Supercomputing'93",
  booktitle =    "{Proceedings, Supercomputing '93: Portland, Oregon,
                 November 15--19, 1993}",
  title =        "{Proceedings, Supercomputing '93: Portland, Oregon,
                 November 15--19, 1993}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xxii + 935",
  year =         "1993",
  ISBN =         "0-8186-4340-4 (paperback), 0-8186-4341-2 (microfiche),
                 0-8186-4342-0 (hardback), 0-8186-4346-3 (CD-ROM)",
  ISBN-13 =      "978-0-8186-4340-8 (paperback), 978-0-8186-4341-5
                 (microfiche), 978-0-8186-4342-2 (hardback),
                 978-0-8186-4346-0 (CD-ROM)",
  ISSN =         "1063-9535",
  LCCN =         "QA76.5 .S96 1993",
  bibdate =      "Mon Jan 15 11:06:21 1996",
  bibsource =    "ftp://ftp.math.utah.edu/pub/bibnet/authors/d/dongarra-jack-j.bib",
  acknowledgement = ack-nhfb,
  classification = "631.1; 722.1; 722.3; 722.4; 723.2; 921.6",
  keywords =     "Algorithms; Cache coherence; Clustered workstations;
                 Computer graphics; Computer networks; Computer
                 programming languages; Data parallel compilers; Data
                 partitioning; Distributed computer systems; Eigenvalues
                 and eigenfunctions; Finite element method; Flow
                 visualization; Fluid mechanics; Linear algebra; Mass
                 storage; Massively parallel processors; Natural
                 sciences computing; Parallel languages; Parallel
                 processing systems; Parallel rendering; Program
                 compilers; Quantum theory; Scheduling; Sparse matrices;
                 Supercomputers",
  sponsor =      "Institute of Electrical and Electronics Engineers;
                 Computer Society. Association for Computing Machinery;
                 SIGARCH.",
}

@Proceedings{Thomas:1993:PIS,
  editor =       "I. Thomas",
  booktitle =    "{Proceedings of the 7th International Software Process
                 Workshop: communication and coordination in the
                 software process: October 15--18, 1991, Yountville,
                 California}",
  title =        "{Proceedings of the 7th International Software Process
                 Workshop: communication and coordination in the
                 software process: October 15--18, 1991, Yountville,
                 California}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "viii + 138",
  year =         "1993",
  ISBN =         "0-8186-4050-2, 0-8186-4051-0",
  ISBN-13 =      "978-0-8186-4050-6, 978-0-8186-4051-3",
  LCCN =         "QA76.755 .I58 1991",
  bibdate =      "Mon Apr 10 09:34:17 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  acknowledgement = ack-nhfb,
  meetingname =  "International Software Process Workshop (7th: 1991:
                 Yountville, Calif.)",
  subject =      "Computer software; Congresses",
}

@Proceedings{USENIX:1993:PUM,
  editor =       "{USENIX}",
  booktitle =    "{Proceedings of the {USENIX} Mobile and
                 Location-Independent Computing Symposium: August 2--3,
                 1993, Cambridge, Massachusetts, USA}",
  title =        "{Proceedings of the USENIX Mobile and
                 Location-Independent Computing Symposium: August 2--3,
                 1993, Cambridge, Massachusetts, USA}",
  publisher =    pub-USENIX,
  address =      pub-USENIX:adr,
  pages =        "138",
  year =         "1993",
  ISBN =         "1-880446-51-0",
  ISBN-13 =      "978-1-880446-51-5",
  LCCN =         "QA 76.76 O63 U86 1993",
  bibdate =      "Tue Oct 22 08:33:21 2002",
  bibsource =    "ftp://ftp.uu.net/library/bibliography",
  URL =          "http://www.usenix.org/publications/library/proceedings/mobile93/",
  acknowledgement = ack-nhfb,
  annote =       "Spine title: Mobile and Location-Independent Computing
                 Symposium, Summer 1993.",
  keywords =     "UNIX (Computer file) --- Congresses; Computer networks
                 --- Congresses; Portable computers --- Communication
                 systems --- Congresses.",
}

@Proceedings{Horiguchi:1994:ISP,
  editor =       "S. Horiguchi and D. F. Hsu and M. Kimura",
  booktitle =    "{International Symposium on Parallel Architectures,
                 Algorithms, and Networks (ISPAN): proceedings of the
                 1994, December 14--16, 1994, Kanazawa, Japan}",
  title =        "{International Symposium on Parallel Architectures,
                 Algorithms, and Networks ({ISPAN}): proceedings of the
                 1994, December 14--16, 1994, Kanazawa, Japan}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xi + 452",
  year =         "1994",
  ISBN =         "0-8186-6507-6",
  ISBN-13 =      "978-0-8186-6507-3",
  LCCN =         "QA76.58 .I5673 1994",
  bibdate =      "Sun Dec 22 10:20:45 MST 1996",
  note =         "IEEE catalog no. 94TH0697-3",
  acknowledgement = ack-nhfb,
  confsponsor =  "Japan Advanced Inst. Sci. and Technol.; IEEE Comput.
                 Soc.; IEEE Comput. Soc. Tech. Committee on Comput.
                 Archit.; IEEE Comput. Soc. Tech. Committee on Parallel
                 Process.; IPSJ Tech. Committee on Algorithms; IPSJ
                 Tech. Committee on Comput. Archit.; IEICE Tech.
                 Committee on Comput. Syst",
  pubcountry =   "USA",
}

@Proceedings{Joubert:1994:PCT,
  editor =       "G. R. Joubert and F. J. Peters and D. Trystram and D.
                 J. Evans",
  booktitle =    "{Parallel computing: trends and applications:
                 proceedings of the international conference ParCo93,
                 Grenoble, France, 7--10 September 1993}",
  title =        "{Parallel computing: trends and applications:
                 proceedings of the international conference ParCo93,
                 Grenoble, France, 7--10 September 1993}",
  volume =       "9",
  publisher =    pub-NORTH-HOLLAND,
  address =      pub-NORTH-HOLLAND:adr,
  pages =        "xvi + 728",
  year =         "1994",
  ISBN =         "0-444-81841-3",
  ISBN-13 =      "978-0-444-81841-6",
  LCCN =         "QA76.58 .P3794 1993",
  bibdate =      "Sun Dec 22 10:19:23 MST 1996",
  series =       "Advances in parallel computing",
  acknowledgement = ack-nhfb,
  confsponsor =  "ARCHIPEL; CNRS; Elsevier Sci. Publishers; IMAG; INPG;
                 INRIA; et al",
  pubcountry =   "Netherlands",
  xxeditor =     "G. R. Joubert and D. Trystram and F. J. Peters and D.
                 J. Evans",
}

@Proceedings{Ostrand:1994:PIS,
  editor =       "Thomas Ostrand",
  booktitle =    "{Proceedings of the 1994 International Symposium on
                 Software Testing and Analysis (ISSTA): August 17--19,
                 1994, Seattle, Washington, USA}",
  title =        "{Proceedings of the 1994 International Symposium on
                 Software Testing and Analysis (ISSTA): August 17--19,
                 1994, Seattle, Washington, USA}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  year =         "1994",
  CODEN =        "SFENDP",
  ISBN =         "0-89791-683-2",
  ISBN-13 =      "978-0-89791-683-7",
  ISSN =         "0163-5948",
  LCCN =         "QA76.76.T48 I58 1994",
  bibdate =      "Sun Dec 22 10:18:08 MST 1996",
  series =       j-ACM-SIGSOFT,
  acknowledgement = ack-nhfb,
  issue =        "spec. issue. p. 216-227",
}

@Proceedings{Anonymous:1999:PII,
  editor =       "Anonymous",
  booktitle =    "Proceedings of the IASTED International Conference on
                 Internet and Multimedia Systems and Applications
                 (IMSA). Nassau, Bahamas, October 1999",
  title =        "Proceedings of the {IASTED} International Conference
                 on Internet and Multimedia Systems and Applications
                 ({IMSA}). Nassau, Bahamas, October 1999",
  publisher =    "Acta Press",
  address =      "Anaheim, CA, USA",
  pages =        "????",
  year =         "1999",
  ISBN =         "????",
  ISBN-13 =      "????",
  LCCN =         "????",
  bibdate =      "Tue Oct 24 10:38:48 2006",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2000:CPI,
  editor =       "{ACM}",
  booktitle =    "{Conference proceedings of the 2000 International
                 Conference on Supercomputing: Santa Fe, New Mexico, May
                 8--11, 2000}",
  title =        "{Conference proceedings of the 2000 International
                 Conference on Supercomputing: Santa Fe, New Mexico, May
                 8--11, 2000}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "xi + 347",
  year =         "2000",
  ISBN =         "1-58113-270-0",
  ISBN-13 =      "978-1-58113-270-0",
  LCCN =         "QA76.88 .I573 2000",
  bibdate =      "Tue Oct 24 10:04:24 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  URL =          "http://www.acm.org/pubs/contents/proceedings/supercomputing/335231",
  acknowledgement = ack-nhfb,
  subject =      "Supercomputers; Congresses",
}

@Book{Boszormenyi:2000:SNW,
  editor =       "L{\'a}szl{\'o} B{\"o}sz{\"o}rm{\'e}nyi and Jurg
                 Gutknecht and Gustav Pomberger",
  booktitle =    "The School of {Niklaus Wirth}: The Art of Simplicity",
  title =        "The School of {Niklaus Wirth}: The Art of Simplicity",
  publisher =    pub-MORGAN-KAUFMANN,
  address =      pub-MORGAN-KAUFMANN:adr,
  pages =        "viii + 260",
  year =         "2000",
  ISBN =         "1-55860-723-4",
  ISBN-13 =      "978-1-55860-723-1",
  LCCN =         "QA76.756 .S36 2000",
  bibdate =      "Sat Apr 20 11:12:33 2002",
  price =        "US\$39.95",
  URL =          "http://www.mkp.com/books_catalog/catalog.asp?ISBN=1-55860-723-4",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2001:ASS,
  editor =       "{ACM}",
  booktitle =    "{ACM SIGPLAN--SIGSOFT workshop on Program analysis for
                 software tools and engineering: June 18--19, 2001,
                 Snowbird, Utah, USA: PASTE'01}",
  title =        "{ACM SIGPLAN--SIGSOFT workshop on Program analysis for
                 software tools and engineering: June 18--19, 2001,
                 Snowbird, Utah, USA: PASTE'01}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "viii + 104",
  year =         "2001",
  ISBN =         "1-58113-413-4",
  ISBN-13 =      "978-1-58113-413-1",
  LCCN =         "QA76.758",
  bibdate =      "Thu Aug 30 08:01:24 MDT 2001",
  bibsource =    "http://www.acm.org/pubs/contents/proceedings/series/paste/",
  note =         "Supplement to ACM SIGPLAN Notices.",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2001:PAJ,
  editor =       "{ACM}",
  booktitle =    "{Proceedings of the ACM 2001 Java Grande\slash ISCOPE
                 Conference: Palo Alto, Calif., June 2--4, 2001}",
  title =        "{Proceedings of the ACM 2001 Java Grande\slash ISCOPE
                 Conference: Palo Alto, Calif., June 2--4, 2001}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "vi + 186",
  year =         "2001",
  ISBN =         "1-58113-359-6",
  ISBN-13 =      "978-1-58113-359-2",
  LCCN =         "QA76.9.O35 A26 2001",
  bibdate =      "Mon May 6 06:26:30 MDT 2002",
  acknowledgement = ack-nhfb,
  keywords =     "Java (computer program language) -- congresses;
                 object-oriented methods (computer science) --
                 congresses",
}

@Proceedings{Anonymous:2001:PJV,
  editor =       "Anonymous",
  booktitle =    "{Proceedings of the Java Virtual Machine Research and
                 Technology Symposium (JVM '01) April 23--24, 2001,
                 Monterey, California, USA}",
  title =        "{Proceedings of the Java Virtual Machine Research and
                 Technology Symposium (JVM '01) April 23--24, 2001,
                 Monterey, California, USA}",
  publisher =    pub-USENIX,
  address =      pub-USENIX:adr,
  pages =        "232",
  year =         "2001",
  ISBN =         "1-880446-11-1",
  ISBN-13 =      "978-1-880446-11-9",
  LCCN =         "????",
  bibdate =      "Mon Apr 10 10:43:56 MDT 2006",
  bibsource =    "z3950.bibsys.no:2100/BIBSYS",
  acknowledgement = ack-nhfb,
  meetingname =  "Java Virtual Machine Research and Technology
                 Symposium. 2001. Monterey, Calif.",
  subject =      "JVM",
}

@Proceedings{USENIX:2001:PJV,
  editor =       "{USENIX}",
  booktitle =    "{Proceedings of the Java Virtual Machine Research and
                 Technology Sy[m]posium (JVM '01): April 23--24, 2001,
                 Monterey, California, USA. Berkeley, CA}",
  title =        "{Proceedings of the Java Virtual Machine Research and
                 Technology Sy[m]posium ({JVM} '01): April 23--24, 2001,
                 Monterey, California, {USA}. Berkeley, {CA}}",
  publisher =    pub-USENIX,
  address =      pub-USENIX:adr,
  pages =        "232",
  year =         "2001",
  ISBN =         "1-880446-11-1",
  ISBN-13 =      "978-1-880446-11-9",
  LCCN =         "QA76.73.J38 J42 2001",
  bibdate =      "Tue Oct 15 12:35:06 2002",
  URL =          "http://www.usenix.org/publications/library/proceedings/jvm01/",
  acknowledgement = ack-nhfb,
}

@Proceedings{USENIX:2001:UJV,
  editor =       "{USENIX}",
  booktitle =    "{Usenix Java Virtual Machine Research and Technology
                 Symposium (JVM '01)}",
  title =        "{Usenix Java Virtual Machine Research and Technology
                 Symposium ({JVM} '01)}",
  publisher =    pub-USENIX,
  address =      pub-USENIX:adr,
  month =        apr,
  year =         "2001",
}

@Proceedings{IEEE:2002:WII,
  editor =       "{IEEE}",
  booktitle =    "{WWC-5: 2002 IEEE International Workshop on Workload
                 Characterization: November 25, 2002, Austin, Texas}",
  title =        "{WWC-5: 2002 IEEE International Workshop on Workload
                 Characterization: November 25, 2002, Austin, Texas}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "vi + 140",
  year =         "2002",
  ISBN =         "0-7803-7681-1",
  ISBN-13 =      "978-0-7803-7681-6",
  LCCN =         "QA76.9.S88; QA76.9.S88 W67 2002eb; Internet",
  bibdate =      "Tue Oct 24 10:16:21 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  note =         "IEEE Catalog Number 02EX633.",
  URL =          "http://ieeexplore.ieee.org/servlet/opac?punumber=8689",
  acknowledgement = ack-nhfb,
  subject =      "Electronic digital computers; Workload; Congresses;
                 System design; Computer engineering; Computer networks;
                 Computer systems",
}

@Proceedings{USENIX:2002:PJV,
  editor =       "USENIX",
  booktitle =    "{Proceedings of the Java Virtual Machine Research and
                 Technology Symposium (JVM '02): August 1--2, 2002, San
                 Francisco, California, US}",
  title =        "{Proceedings of the Java Virtual Machine Research and
                 Technology Symposium (JVM '02): August 1--2, 2002, San
                 Francisco, California, US}",
  publisher =    pub-USENIX,
  address =      pub-USENIX:adr,
  pages =        "194",
  day =          "1--2",
  month =        aug,
  year =         "2002",
  ISBN =         "1-931971-01-3",
  ISBN-13 =      "978-1-931971-01-0",
  LCCN =         "QA76.73 .J38 J42 2002",
  bibdate =      "Tue Oct 15 12:35:06 2002",
  URL =          "http://www.usenix.org/publications/library/proceedings/javavm02/",
  acknowledgement = ack-nhfb,
  conflocation = "San Francisco, CA, USA",
  confyear =     "2002",
}

@Proceedings{ACM:2003:ATA,
  editor =       "Allyn Romanow and Jeff Mogul",
  booktitle =    "{Proceedings of the ACM SIGCOMM Workshop on
                 Network-I/O Convergence: experience, Lessons,
                 Implications 2003, Karlsruhe, Germany, August 25--27,
                 2003}",
  title =        "{Proceedings of the ACM SIGCOMM Workshop on
                 Network-I/O Convergence: experience, Lessons,
                 Implications 2003, Karlsruhe, Germany, August 25--27,
                 2003}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "????",
  year =         "2003",
  ISBN =         "????",
  ISBN-13 =      "????",
  LCCN =         "TK5105.5",
  bibdate =      "Sat Oct 14 14:04:48 2006",
  note =         "ACM order number 534032.",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2003:SPA,
  editor =       "{ACM}",
  booktitle =    "{SOSP '03: proceedings of the 19th ACM Symposium on
                 Operating Systems Principles: the Sagamore, Bolton
                 Landing, Lake George, New York, USA, October 19--22,
                 2003}",
  title =        "{SOSP '03: proceedings of the 19th ACM Symposium on
                 Operating Systems Principles: the Sagamore, Bolton
                 Landing, Lake George, New York, USA, October 19--22,
                 2003}",
  volume =       "37(5)",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "x + 330",
  month =        dec,
  year =         "2003",
  ISBN =         "1-58113-757-5",
  ISBN-13 =      "978-1-58113-757-6",
  ISSN =         "0163-5980",
  bibdate =      "Wed Nov 30 07:45:41 MST 2005",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  note =         "ACM order number 534030.",
  series =       "Operating systems review",
  URL =          "ftp://uiarchive.cso.uiuc.edu/pub/etext/gutenberg/;
                 http://uclibs.org/PID/34720",
  acknowledgement = ack-nhfb,
  subject =      "Operating systems (Computers); Congresses",
}

@Proceedings{Basin:2003:TPH,
  editor =       "David Basin and Burkhart Wolff",
  booktitle =    "{Theorem Proving in Higher Order Logics: 16th
                 International Conference, TPHOLs 2003, Rome, Italy,
                 September 8--12, 2003: Proceedings}",
  title =        "{Theorem Proving in Higher Order Logics: 16th
                 International Conference, TPHOLs 2003, Rome, Italy,
                 September 8--12, 2003: Proceedings}",
  volume =       "2758",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  pages =        "x + 366",
  year =         "2003",
  CODEN =        "LNCSD9",
  DOI =          "http://dx.doi.org/10.1007/b11828",
  ISBN =         "3-540-40664-6",
  ISBN-13 =      "978-3-540-40664-8",
  ISSN =         "0302-9743",
  LCCN =         "QA76.9.A96",
  bibdate =      "Thu Nov 11 19:26:30 MST 2004",
  series =       ser-LNCS,
  URL =          "http://link.springer-ny.com/link/service/series/0558/tocs/t2758.htm;
                 http://www.springerlink.com/openurl.asp?genre=issue&issn=0302-9743&volume=2758;
                 http://www.springerlink.com/openurl.asp?genre=volume&id=doi:10.1007/b11828",
  acknowledgement = ack-nhfb,
}

@Proceedings{Ertl:2003:IVM,
  editor =       "M. Anton Ertl",
  key =          "IVME '03",
  booktitle =    "{Interpreters, Virtual Machines and Emulators (IVME
                 '03)}",
  title =        "{Interpreters, Virtual Machines and Emulators (IVME
                 '03)}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "76",
  year =         "2003",
  ISBN =         "1-58311-655-2",
  ISBN-13 =      "978-1-58311-655-5",
  LCCN =         "QA76.7",
  URL =          "http://www.complang.tuwien.ac.at/anton/ivme03/proceedings/ivme.ps.gz",
  url2 =         "http://portal.acm.org/toc.cfm?id=858570&type=proceeding",
}

@Proceedings{IEEE:2003:IIW,
  editor =       "{IEEE}",
  booktitle =    "{2003 IEEE International Workshop on Workload
                 Characterization: WWC-6: October 27, 2003, Austin,
                 Texas}",
  title =        "{2003 IEEE International Workshop on Workload
                 Characterization: WWC-6: October 27, 2003, Austin,
                 Texas}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "iii + 130",
  year =         "2003",
  ISBN =         "0-7803-8229-3",
  ISBN-13 =      "978-0-7803-8229-9",
  LCCN =         "QA76.9.S88 W67 2003",
  bibdate =      "Sat Oct 14 17:05:44 2006",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2004:PWA,
  editor =       "{ACM}",
  booktitle =    "{Proceedings of the 11th workshop on ACM SIGOPS
                 European workshop: beyond the PC 2004, Leuven, Belgium,
                 September 19--22, 2004}",
  title =        "{Proceedings of the 11th workshop on ACM SIGOPS
                 European workshop: beyond the PC 2004, Leuven, Belgium,
                 September 19--22, 2004}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "????",
  year =         "2004",
  ISBN =         "????",
  ISBN-13 =      "????",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 14:29:05 2006",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2004:SHP,
  editor =       "{ACM}",
  booktitle =    "{SC 2004: High Performance Computing, Networking and
                 Storage: Bridging communities: Proceedings of the
                 IEEE\slash ACM Supercomputing 2004 Conference,
                 Pittsburgh, PA, November 6--12, 2004}",
  title =        "{SC 2004: High Performance Computing, Networking and
                 Storage: Bridging communities: Proceedings of the
                 IEEE\slash ACM Supercomputing 2004 Conference,
                 Pittsburgh, PA, November 6--12, 2004}",
  publisher =    pub-ACM # " and " # pub-IEEE,
  address =      pub-ACM:adr # " and " # pub-IEEE:adr,
  pages =        "????",
  year =         "2004",
  ISBN =         "0-7695-2153-3",
  ISBN-13 =      "978-0-7695-2153-4",
  LCCN =         "QA76.88",
  bibdate =      "Tue Dec 27 08:08:01 2005",
  bibsource =    "ttp://ieeexplore.ieee.org/servlet/opac?punumber=9595",
  note =         "IEEE order number E2153. ACM order number 415043.",
  acknowledgement = ack-nhfb,
}

@Proceedings{Anonymous:2004:PTV,
  editor =       "Anonymous",
  booktitle =    "{Proceedings of the Third Virtual Machine Research and
                 Technology Symposium (VM '04): May 6--7, 2004, San
                 Jose, California, USA}",
  title =        "{Proceedings of the Third Virtual Machine Research and
                 Technology Symposium (VM '04): May 6--7, 2004, San
                 Jose, California, USA}",
  publisher =    pub-USENIX,
  address =      pub-USENIX:adr,
  pages =        "190",
  year =         "2004",
  ISBN =         "1-931971-20-X",
  ISBN-13 =      "978-1-931971-20-1",
  LCCN =         "QA76.9.V5 V565 2004",
  bibdate =      "Mon Apr 10 10:43:28 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  series =       "Conference proceedings / USENIX Association",
  acknowledgement = ack-nhfb,
  meetingname =  "Virtual Machine Research and Technology Symposium
                 (3rd: 2004: San Jose, Calif.)",
  remark =       "Sponsored by the USENIX Association in cooperation
                 with ACM SIGPLAN.",
  subject =      "Virtual computer systems; Congresses",
}

@Proceedings{IEEE:2004:FIA,
  editor =       "{IEEE}",
  booktitle =    "{Fifth IEEE\slash ACM International Workshop on Grid
                 Computing: proceedings; 8 November 2004, Pittsburgh,
                 PA}",
  title =        "{Fifth IEEE\slash ACM International Workshop on Grid
                 Computing: proceedings; 8 November 2004, Pittsburgh,
                 PA}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xiv + 469",
  year =         "2004",
  ISBN =         "0-7695-2256-4",
  ISBN-13 =      "978-0-7695-2256-2",
  LCCN =         "QA76.9.C58; QA76.9.C58 I585 2004eb; Internet",
  bibdate =      "Sat Oct 14 14:21:36 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  note =         "IEEE Computer Society Order Number P2256.",
  URL =          "http://ieeexplore.ieee.org/servlet/opac?punumber=9495",
  acknowledgement = ack-nhfb,
  meetingname =  "GRID (Conference) (2004: Pittsburgh, Pa.)",
  subject =      "Computational grids (Computer systems); Congresses",
}

@Proceedings{ACM:2005:APS,
  editor =       "{ACM}",
  booktitle =    "{AADEBUG 2005: proceedings of the Sixth International
                 Symposium on Automated and Analysis-Driven Debugging:
                 Monterey, California, USA, September 19--21, 2005}",
  title =        "{AADEBUG 2005: proceedings of the Sixth International
                 Symposium on Automated and Analysis-Driven Debugging:
                 Monterey, California, USA, September 19--21, 2005}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "viii + 164",
  year =         "2005",
  ISBN =         "1-59593-050-7",
  ISBN-13 =      "978-1-59593-050-7",
  LCCN =         "QA76.9.D43 I58 2005",
  bibdate =      "Sat Oct 14 15:22:07 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
  meetingname =  "International Symposium on Automated and
                 Analysis-Driven Debugging (6th: 2005: Monterey, CA)",
  subject =      "Debugging in computer science; Congresses",
}

@Proceedings{ACM:2005:MPI,
  editor =       "{ACM}",
  booktitle =    "{MGC'05: Proceedings of the 3rd International Workshop
                 on Middleware for Grid Computing, Grenoble, France,
                 November 28--December 02, 2005}",
  title =        "{MGC'05: Proceedings of the 3rd International Workshop
                 on Middleware for Grid Computing, Grenoble, France,
                 November 28--December 02, 2005}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "????",
  year =         "2005",
  ISBN =         "1-59593-269-0",
  ISBN-13 =      "978-1-59593-269-3",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 13:52:46 2006",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2005:PAI,
  editor =       "{ACM}",
  booktitle =    "{Proceedings of the 2005 ACM\slash IEEE conference on
                 Supercomputing 2005, Seattle, WA, November 12--18
                 2005}",
  title =        "{Proceedings of the 2005 ACM\slash IEEE conference on
                 Supercomputing 2005, Seattle, WA, November 12--18
                 2005}",
  publisher =    pub-ACM # " and " # pub-IEEE,
  address =      pub-ACM:adr # " and " # pub-IEEE:adr,
  pages =        "????",
  year =         "2005",
  ISBN =         "1-59593-061-2",
  ISBN-13 =      "978-1-59593-061-3",
  LCCN =         "????",
  bibdate =      "Tue Dec 27 08:08:01 2005",
  bibsource =    "http://www.sc05.supercomputing.org",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2005:PFA,
  editor =       "{ACM}",
  booktitle =    "{Proceedings of the First ACM\slash USENIX
                 International Conference on Virtual Execution
                 Environments: VEE '05: June 11--12, 2005, Chicago,
                 Illinois, USA}",
  title =        "{Proceedings of the First ACM\slash USENIX
                 International Conference on Virtual Execution
                 Environments: VEE '05: June 11--12, 2005, Chicago,
                 Illinois, USA}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "viii + 208",
  year =         "2005",
  ISBN =         "1-59593-047-7",
  ISBN-13 =      "978-1-59593-047-7",
  LCCN =         "QA76.9.V5 I575 2005",
  bibdate =      "Sat Oct 14 15:31:34 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90;
                 z3950.loc.gov:7090/Voyager",
  note =         "ACM order number 548059.",
  URL =          "http://www.loc.gov/catdir/toc/fy0611/2006530661.html",
  acknowledgement = ack-nhfb,
  meetingname =  "International Conference on Virtual Execution
                 Environments (1st: 2005: Chicago, IL)",
  subject =      "Virtual computer systems; Congresses",
}

@Proceedings{IEEE:2005:PAC,
  editor =       "{IEEE}",
  booktitle =    "{Proceedings of the 21st Annual Computer Security
                 Applications Conference 2005, December 05--09, 2005,
                 Tucson, Arizona}",
  title =        "{Proceedings of the 21st Annual Computer Security
                 Applications Conference 2005, December 05--09, 2005,
                 Tucson, Arizona}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xxv + 510",
  year =         "2005",
  ISBN =         "0-7695-2461-3",
  ISBN-13 =      "978-0-7695-2461-0",
  ISSN =         "1063-9527",
  LCCN =         "L787.5",
  bibdate =      "Sat Oct 14 14:14:01 2006",
  bibsource =    "http://ieeexplore.ieee.org/servlet/opac?punumber=10467",
  note =         "EEE Computer Society Order Number P2461.",
  acknowledgement = ack-nhfb,
}

@Proceedings{Shih:2005:ICA,
  editor =       "Timothy K. Shih and Yoshitaka Shibata",
  booktitle =    "{19th International Conference on Advanced Information
                 Networking and Applications: proceedings, AINA 2005,
                 28--30 March, 2005, Taipei, Taiwan}",
  title =        "{19th International Conference on Advanced Information
                 Networking and Applications: proceedings, AINA 2005,
                 28--30 March, 2005, Taipei, Taiwan}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "????",
  year =         "2005",
  ISBN =         "0-7695-2249-1 (paperback)",
  ISBN-13 =      "978-0-7695-2249-4 (paperback)",
  ISSN =         "1550-445X",
  LCCN =         "TK5105.5 .I5616 2005",
  bibdate =      "Sat Oct 14 15:28:40 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  note =         "IEEE Computer Society Order Number P2249.",
  URL =          "http://ieeexplore.ieee.org/servlet/opac?punumber=9746",
  acknowledgement = ack-nhfb,
  meetingname =  "International Conference on Advanced Information
                 Networking and Applications (19th: 2005: Taipei,
                 Taiwan)",
  subject =      "Computer networks; Congresses; Information networks",
}

@Proceedings{Vrable:2005:SPA,
  editor =       "Michael Daniel Vrable",
  booktitle =    "{SOSP '05: proceedings of the 20th ACM Symposium on
                 Operating Systems Principles: October 23--26, 2005,
                 Brighton, United Kingdom}",
  title =        "{SOSP '05: proceedings of the 20th ACM Symposium on
                 Operating Systems Principles: October 23--26, 2005,
                 Brighton, United Kingdom}",
  volume =       "39, no. 5 (Dec. 2005)",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "ix + 291",
  year =         "2005",
  ISBN =         "1-59593-079-5",
  ISBN-13 =      "978-1-59593-079-8",
  LCCN =         "QA76.6 .S9196 2005; QA76.6; QA76.6 .S9196 2005eb;
                 Internet",
  bibdate =      "Sat Oct 14 14:49:06 MDT 2006",
  bibsource =    "melvyl.cdlib.org:210/CDL90",
  series =       j-OPER-SYS-REV,
  acknowledgement = ack-nhfb,
  meetingname =  "Symposium on Operating Systems Principles (20th: 2005:
                 Brighton, England)",
  remark =       "ACM order number 534050. II. Scalability, fidelity,
                 and containment in the Potemkin virtual honeyfarm /
                 Michael Vrable.",
  subject =      "Operating systems (Computers); Congresses",
}

@Proceedings{ACM:2006:AAI,
  editor =       "{ACM}",
  booktitle =    "{Annual ACM IEEE Design Automation Conference,
                 Proceedings of the 43rd Annual Conference on Design
                 Automation, San Francisco, CA, USA}",
  title =        "{Annual ACM IEEE Design Automation Conference,
                 Proceedings of the 43rd Annual Conference on Design
                 Automation, San Francisco, CA, USA}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "????",
  year =         "2006",
  ISBN =         "1-59593-381-6",
  ISBN-13 =      "978-1-59593-381-2",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 14:07:21 2006",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2006:PIW,
  editor =       "{ACM}",
  booktitle =    "{Proceedings of the 1st international workshop on
                 Wireless network testbeds, experimental evaluation and
                 characterization 2006, Los Angeles, CA, USA, September
                 29, 2006}",
  title =        "{Proceedings of the 1st international workshop on
                 Wireless network testbeds, experimental evaluation and
                 characterization 2006, Los Angeles, CA, USA, September
                 29, 2006}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "????",
  year =         "2006",
  ISBN =         "1-59593-540-0",
  ISBN-13 =      "978-1-59593-540-3",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 14:39:09 2006",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2006:PPI,
  editor =       "{ACM}",
  booktitle =    "{PACT'06: Proceedings of the 15th International
                 Conference on Parallel Architectures and Compilation
                 Techniques 2006, Seattle, Washington, USA, September
                 16--20, 2006}",
  title =        "{PACT'06: Proceedings of the 15th International
                 Conference on Parallel Architectures and Compilation
                 Techniques 2006, Seattle, Washington, USA, September
                 16--20, 2006}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "????",
  year =         "2006",
  ISBN =         "1-59593-264-X",
  ISBN-13 =      "978-1-59593-264-8",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 15:04:43 2006",
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2006:PST,
  editor =       "{ACM}",
  booktitle =    "{Proceedings of the 37th SIGCSE Technical Symposium on
                 Computer Science Education 2006, Houston, Texas, USA,
                 March 03--05, 2006}",
  title =        "{Proceedings of the 37th SIGCSE Technical Symposium on
                 Computer Science Education 2006, Houston, Texas, USA,
                 March 03--05, 2006}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "xxiv + 587",
  year =         "2006",
  CODEN =        "SIGSD3",
  ISBN =         "????",
  ISBN-13 =      "????",
  ISSN =         "0097-8418",
  LCCN =         "QA76.27",
  bibdate =      "Sat Oct 14 15:15:41 2006",
  bibsource =    "z3950.bibsys.no:2100/BIBSYS",
  note =         "ACM order number 457060.",
  series =       j-SIGCSE,
  acknowledgement = ack-nhfb,
}

@Proceedings{ACM:2006:VPS,
  editor =       "{ACM}",
  booktitle =    "{VEE 2006: proceedings of the Second International
                 Conference on Virtual Execution Environments, June
                 14-16, 2006, Ottawa, Ontario, Canada}",
  title =        "{VEE 2006: proceedings of the Second International
                 Conference on Virtual Execution Environments, June
                 14-16, 2006, Ottawa, Ontario, Canada}",
  publisher =    pub-ACM,
  address =      pub-ACM:adr,
  pages =        "viii + 186",
  year =         "2006",
  ISBN =         "1-59593-332-6 (??invalid ISBN??)",
  ISBN-13 =      "978-1-59593-332-4",
  LCCN =         "QA76.9.V4",
  bibdate =      "Sat Oct 14 13:44:27 2006",
  bibsource =    "z3950.bibsys.no:2100/BIBSYS",
  acknowledgement = ack-nhfb,
  meetingname =  "ACM/USENIX International Conference on Virtual
                 Execution Environments 2 2006 Ottawa",
}

@Proceedings{Anonymous:2006:PGI,
  editor =       "Anonymous",
  title =        "{Proceedings of Gelato ICE: Itanium Conference and
                 Expo: Spotlighting Linux on Itanium-based Platforms,
                 October 1-4, 2006, Biopolis, Singapore}",
  publisher =    "????",
  address =      "????",
  pages =        "????",
  year =         "2006",
  ISBN =         "????",
  ISBN-13 =      "????",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 18:23:38 2006",
  URL =          "http://www.ice.gelato.org/;
                 http://www.ice.gelato.org/about/oct06_presentations.php",
  acknowledgement = ack-nhfb,
}

@Proceedings{IEEE:2006:PIC,
  editor =       "{IEEE}",
  booktitle =    "{Proceedings of the International conference on
                 Networking and Services 2006, July 16--18, 2006}",
  title =        "{Proceedings of the International conference on
                 Networking and Services 2006, July 16--18, 2006}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "????",
  year =         "2006",
  ISBN =         "0-7695-2622-5",
  ISBN-13 =      "978-0-7695-2622-5",
  LCCN =         "????",
  bibdate =      "Sat Oct 14 14:18:22 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  acknowledgement = ack-nhfb,
}

@Proceedings{IEEE:2006:PIS,
  editor =       "{IEEE}",
  booktitle =    "{Proceedings of the 20th International Symposium on
                 High-Performance Computing in an Advanced Collaborative
                 Environment (HPCS'06), St. John's, Newfoundland, May
                 14--17, 2006}",
  title =        "{Proceedings of the 20th International Symposium on
                 High-Performance Computing in an Advanced Collaborative
                 Environment (HPCS'06), St. John's, Newfoundland, May
                 14--17, 2006}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "????",
  year =         "2006",
  ISBN =         "0-7695-2582-2",
  ISBN-13 =      "978-0-7695-2582-2",
  ISSN =         "1550-5243",
  LCCN =         "QA76.88",
  bibdate =      "Sat Oct 14 13:58:07 2006",
  note =         "ACM product number E2582.",
  acknowledgement = ack-nhfb,
}

@Proceedings{Min:2006:FHP,
  editor =       "Geyong Min and others",
  booktitle =    "{Frontiers of high performance computing and
                 networking: ISPA 2006 workshops: ISPA 2006
                 international workshops, FHPCN, XHPC, S-GRACE, GridGIS,
                 HPC-GTP, PDCE, ParDMCom, WOMP, ISDF, and UPWN,
                 Sorrento, Italy, December 4-7, 2006: proceedings}",
  title =        "{Frontiers of high performance computing and
                 networking: ISPA 2006 workshops: ISPA 2006
                 international workshops, FHPCN, XHPC, S-GRACE, GridGIS,
                 HPC-GTP, PDCE, ParDMCom, WOMP, ISDF, and UPWN,
                 Sorrento, Italy, December 4-7, 2006: proceedings}",
  volume =       "4331",
  publisher =    pub-SV,
  address =      pub-SV:adr,
  pages =        "xxxvii + 1141",
  year =         "2006",
  ISBN =         "3-540-49860-5 (paperback)",
  ISBN-13 =      "978-3-540-49860-5 (paperback)",
  LCCN =         "QA76.58 .I88 2006a; QA76.88 .F76 2006",
  bibdate =      "Mon Sep 13 11:21:54 MDT 2010",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  series =       "Lecture notes in computer science, 0302-9743",
  URL =          "http://www.loc.gov/catdir/enhancements/fy0825/2006937143-d.html",
  acknowledgement = ack-nhfb,
  meetingname =  "ISPA 2006 (2006 : Sorrento, Italy)",
  remark =       "Revised papers presented at the 10 workshops held in
                 conjunction with the 4th International Symposium on
                 Parallel and Distributed Processing and Applications
                 (ISPA 2006)\\
                 International Workshop on Frontiers of High-Performance
                 Computing and Networking (FHPCN 2006) \\
                 International Workshop on XEN in HPC Cluster and Grid
                 Computing Environments (XHPC 2006) \\
                 International Workshop on Semantic GRid Applications in
                 Computing and Engineering (S-GRACE 2006) \\
                 International Workshop on Fertilization of Grid
                 Computing and Geographic Information Systems (GridGIS
                 2006) \\
                 International Workshop on High-Performance Computing in
                 Genomic Proteomics and Transcriptomics (HPC-GTP 2006)
                 \\
                 International Workshop on Parallel and Distributed
                 Computing in Engineering (PDCE 2006) \\
                 International Workshop on Parallel and Distributed
                 Multimedia Computing (ParDMCom 2006) \\
                 International Workshop on Middleware Performance (WOMP
                 2006) \\
                 International Workshop on Information Security and
                 Digital Forensics (ISDF 2006) \\
                 International Workshop on Ubiquitous Processing for
                 Wireless Networks (UPWN 2006)",
  subject =      "Parallel processing (Electronic computers);
                 Congresses; Electronic data processing; Distributed
                 processing; High performance computing; Computational
                 grids (Computer systems)",
}

@Proceedings{Turner:2006:SIS,
  editor =       "Stephen John Turner and Bu Sung Lee and Wientong Cai",
  booktitle =    "{Sixth International Symposium on Cluster Computing
                 and the Grid CCGrid 06: 16--19 May, 2006, Singapore}",
  title =        "{Sixth International Symposium on Cluster Computing
                 and the Grid CCGrid 06: 16--19 May, 2006, Singapore}",
  publisher =    pub-IEEE,
  address =      pub-IEEE:adr,
  pages =        "xxiii + 662",
  year =         "2006",
  ISBN =         "0-7695-2585-7",
  ISBN-13 =      "978-0-7695-2585-3",
  LCCN =         "QA76.9.C58",
  bibdate =      "Sat Oct 14 15:36:24 MDT 2006",
  bibsource =    "z3950.loc.gov:7090/Voyager",
  note =         "IEEE Computer Society Order Number P2585.",
  acknowledgement = ack-nhfb,
}

@Proceedings{USENIX:2006:PUA,
  editor =       "{USENIX}",
  booktitle =    "{Proceedings of the 2006 USENIX Annual Technical
                 Conference: May 30--June 3, 2006, Boston, MA, USA}",
  title =        "{Proceedings of the 2006 USENIX Annual Technical
                 Conference: May 30--June 3, 2006, Boston, MA, USA}",
  publisher =    pub-USENIX,
  address =      pub-USENIX:adr,
  pages =        "386 (est.)",
  year =         "2006",
  ISBN =         "1-931971-44-7",
  ISBN-13 =      "978-1-931971-44-7",
  LCCN =         "????",
  bibdate =      "Wed Oct 18 11:37:53 2006",
  acknowledgement = ack-nhfb,
}
